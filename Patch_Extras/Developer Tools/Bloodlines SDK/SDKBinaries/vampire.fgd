//====== Copyright © 2003-2018, Troika Games, Inc. All rights reserved. =======
//
// Purpose: Vampire Bloodlines game definition file (.fgd) 
// Version: 1.72 beta
// Edition: Original VtMB
// Written: Psycho-A
//
//=============================================================================

// define common classes and entities
@include "vampire-base.fgd"

// enable dispensable extra entites
@include "vampire-adds.fgd"

// broken entites for testing...
//@include "vampire-broken.fgd"



//*******************************************************************************************************************
//*******************************************************************************************************************
//
// Main Classes
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// CLASS: VEnableDisable [VTMB-specific]
//====================================================================================================================

@BaseClass = c_VEnableDisable
[
	start_enabled(choices) : "Start Enabled" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input Enable(void) : "Enable this entity."
	input Disable(void) : "Disable this entity."
]





































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// ITEMS
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// CLASS: VItemContainer [VTMB-specific]
//====================================================================================================================

@BaseClass
base (
	Studiomodel,
	o_VUsableExt,
	o_VBreakable
)
studioprop()
= VItemContainerBase1
[
	model(studio) : "Container Model" : "models/scenery/furniture/refrigerator/refrigeratorold_anim2.mdl" : "Prop model used for container. \nClick arrow button and scroll down if you want to use one of game's default model." =
	[
		"models/scenery/furniture/AsianTrunk/AsianTrunk.mdl" : "models/scenery/furniture/AsianTrunk/AsianTrunk.mdl"
		"models/scenery/furniture/cigarbox/cigarbox.mdl" : "models/scenery/furniture/cigarbox/cigarbox.mdl"
		"models/scenery/furniture/desk_animated/desk_animated.mdl" : "models/scenery/furniture/desk_animated/desk_animated.mdl"
		"models/scenery/furniture/desk_executive/drawer1.mdl" : "models/scenery/furniture/desk_executive/drawer1.mdl"
		"models/scenery/furniture/HackableMetalChest/MetalChest.mdl" : "models/scenery/furniture/HackableMetalChest/MetalChest.mdl"
		"models/scenery/furniture/hollowbook/hollowbook.mdl" : "models/scenery/furniture/hollowbook/hollowbook.mdl"
		"models/scenery/furniture/laundry/dryer_container.mdl" : "models/scenery/furniture/laundry/dryer_container.mdl"
		"models/scenery/furniture/MailBoxes/MailBox.mdl" : "models/scenery/furniture/MailBoxes/MailBox.mdl"
		"models/scenery/furniture/MedicalChest/MedicalChest.mdl" : "models/scenery/furniture/MedicalChest/MedicalChest.mdl"
		"models/scenery/furniture/NightStand/Nightstandanimated.mdl" : "models/scenery/furniture/NightStand/NightStandAnimated.mdl"
		"models/scenery/furniture/refrigerator/refrigerator.mdl" : "models/scenery/furniture/refrigerator/refrigerator.mdl"
		"models/scenery/furniture/refrigerator/refrigerator_newcontainer.mdl" : "models/scenery/furniture/refrigerator/refrigerator_newcontainer.mdl"
		"models/scenery/furniture/refrigerator/refrigeratorold_anim2.mdl" : "models/scenery/furniture/refrigerator/refrigeratorold_anim2.mdl"
		"models/scenery/furniture/SteamerTrunk/SteamerTrunkKoa.mdl" : "models/scenery/furniture/SteamerTrunk/SteamerTrunkKoa.mdl"
		"models/scenery/furniture/steamertrunk/trunk.mdl" : "models/scenery/furniture/steamertrunk/trunk.mdl"
		"models/scenery/furniture/SteamerTrunk/trunkmodern_container.mdl" : "models/scenery/furniture/SteamerTrunk/trunkmodern_container.mdl"
		"models/scenery/misc/changemachine/changemachine_container.mdl" : "models/scenery/misc/changemachine/changemachine_container.mdl"
		"models/scenery/misc/crypt_door/crypt_door.mdl" : "models/scenery/misc/crypt_door/crypt_door.mdl"
		"models/scenery/misc/lin_corpse/lin_corpse.mdl" : "models/scenery/misc/lin_corpse/lin_corpse.mdl"
		"models/scenery/misc/lockers/lockerdoor_container.mdl" : "models/scenery/misc/lockers/lockerdoor_container.mdl"
		"models/scenery/misc/mailbox2/mailbox.mdl" : "models/scenery/misc/mailbox2/mailbox.mdl"
		"models/scenery/misc/safe/safe.mdl" : "models/scenery/misc/safe/safe.mdl"
		"models/scenery/misc/steeldesk/drawer_anim.mdl" : "models/scenery/misc/steeldesk/drawer_anim.mdl"
		"models/scenery/misc/woodbox/box.mdl" : "models/scenery/misc/woodbox/box.mdl"
		"models/scenery/misc/woodbox/woodbox_container.mdl" : "models/scenery/misc/woodbox/woodbox_container.mdl"
		"models/scenery/misc/woodbox/woodbox_small_container.mdl" : "models/scenery/misc/woodbox/woodbox_small_container.mdl"
	]

	// Inputs
	input AddEntityToContainer(string) : "Add selected entity to container."
	input SpawnItemInContainer(string) : "Spawn selected entity in container."
	input DeleteItems(void) : "Delete selected items in container."
	
	// Outputs
	output OnItemInsert(void) : "Fired when item was inserted (by player) into container."
	output OnItemRemove(void) : "Fired when item was taken away (by player) from container."
]

@BaseClass
= VItemContainerEquip
[
	sep_itceqip(string) readonly: "------------------------------------"

	// equipment
	equip0(itemclass) : "Equipment #1" :  : "This is the name of item that will be placed into container."
	equip1(itemclass) : "Equipment #2" :  : "This is the name of item that will be placed into container."
	equip2(itemclass) : "Equipment #3" :  : "This is the name of item that will be placed into container."
	equip3(itemclass) : "Equipment #4" :  : "This is the name of item that will be placed into container."
	equip4(itemclass) : "Equipment #5" :  : "This is the name of item that will be placed into container."
]

@BaseClass
halfgridsnap
= VItemContainerBase2
[
	sep_itcadd1(string) readonly: "------------------------------------"

	// basic prefs
	soundgroup(choices) : "Sound Group" : "push_arm_door" : "The group of sounds relative to 'sound/usable/openable/<groupname>/*.wav' that specifies action sounds." = 
	[
		"metal_chest" : "Metal Chest"
		"metal_file_cabinet" : "Metal File Cabinet"
		"push_arm_door" : "Push Arm Door"
		"wood_drawer" : "Wood Drawer"
		"wooden_chest" : "Wooden Chest"
		"jewelry_box" : "Jewelry Box"
		"dead_body" : "Dead Body"
	]
	lootable_type(choices) : "Lootable Type" : 3 : "[VTMB] Unknown yet. 3 and 4 default used on game maps." =
	[
		0 : "Type 0 (?)"
		1 : "Type 1 (?)"
		2 : "Type 2 (?)"
		3 : "Type 3 (?)"
		4 : "Type 4 (?)"
	]
	use_icon(choices) : "Use Icon" : 6 : "An icon that indicates when player can be able to use this entity and it is openable." = 
	[
		0 : "None"
		6 : "Lootable container"
	]
	
	sep_itcadd2(string) readonly: "------------------------------------"

	// move prefs
	move_dest(vecline) : "Move Destination" :  : "Container's move destination on open. \nThis is world's X/Y/Z-origin."
	move_speed(integer) : "Move Speed (units/s)" : 45 : "Speed of container's moving, in units per second."
	
	rot_dist(integer) : "Rotation Angle" : 90 : "Max allowed rotation angle."
	rot_speed(integer) : "Rotation Speed" : 45 : "Speed of rotation moving."
	rot_axis(choices) : "Rotation Axis" : 1 : "Defines axis if this prop rotates [not tested]." = [ 0: "Y" 1: "Z" 2: "X" ]

	sep_itcadd3(string) readonly: "------------------------------------"

	// physics
	solid(choices) : "Collisions" : 6 : "Model's collision type." =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
		3: "Use Convex Hull"
	]
	health(integer) : "Container's Strength" : 0 : "Container's health points that will spent before it breaks and open. \n'0' = not breakable."
	dmgmodel(studio) : "Damaged State Model" :  : "Model that spawns when this container damaged." =
	[
		"models/scenery/misc/changemachine/changemachine_damaged.mdl" : "models/scenery/misc/changemachine/changemachine_damaged.mdl"
	]

	npc_transparent(choices) : "NPC-Transparent" : 1 : "[VTMB] NPCs are transparent for this object [not tested]." = [ 0: "No" 1: "Yes" ]
	npc_opaque(choices) : "NPC-Opaque" :  : "[VTMB] Should be NPC opaque for this object or not [not tested]." = [ "": "No" 1: "Yes" ]

	sep_itcadd3(string) readonly: "------------------------------------"

	demo_sequence(choices) : "Demo Animation" : "None" : "Default animation sequence for the model to be playing after spawning." = [ "None":"None"  "idle":"Idle" ]
	use_pref(choices) : "Use Preference" :  : "[VTMB] Unknown yet..." = [ 0: "No" 1: "Yes" ]
]





//====================================================================================================================
// item_container [VTMB-specific]
//====================================================================================================================

@PointClass
base (
	VItemContainerBase1,
	VItemContainerEquip,
	VItemContainerBase2,
	RenderFields
)
studioprop()
= item_container :
	"[VTMB] A dynamic item that can contain other items, like weapons, supply e.t.c."
[
	model(studio) : "Container Model" : "models/scenery/misc/woodbox/box.mdl" : "Prop model used for container. \nClick arrow button and scroll down if you want to use one of game's default model." = []
	soundgroup(choices) : "Sound Group" : "wooden_chest" : "The group of sounds relative to 'sound/usable/openable/<groupname>/*.wav' that specifies action sounds." = []
]





//====================================================================================================================
// item_container_animated [VTMB-specific]
//====================================================================================================================
@PointClass
base (
	VItemContainerBase1,
	VItemContainerEquip,
	VItemContainerBase2,
	RenderFields
)
studioprop()
= item_container_animated : 
	"[VTMB] A dynamic item that can contain other items, like weapons, supply e.t.c. \nSame as 'item_container' but supports dynamic properties like animations and damaging."
[
]




//====================================================================================================================
// item_container_one_item_filtered [VTMB-specific]
//====================================================================================================================
@PointClass
base (
	VItemContainerBase1,
	VItemContainerBase2,
	RenderFields
)
studioprop()
= item_container_one_item_filtered :
	"[VTMB] A dynamic item that can contain other items, like weapons, supply e.t.c. \nUnkike the item_container, item_container_one_item_filtered may accept just one item given by Python commands from outputs OnItemInsert/OnItemRemove. \nRarely-used."
[
	model(studio) : "Container Model" : "models/scenery/structural/temple/pedestal1.mdl" : "Prop model used for container. \nClick arrow button and scroll down if you want to use one of game's default model." =
	[
		"models/scenery/structural/temple/pedestal1.mdl" : "models/scenery/structural/temple/pedestal1.mdl"
		"models/scenery/structural/temple/pedestal2.mdl" : "models/scenery/structural/temple/pedestal2.mdl"
		"models/scenery/structural/temple/pedestal3.mdl" : "models/scenery/structural/temple/pedestal3.mdl"
		"models/scenery/structural/temple/pedestal4.mdl" : "models/scenery/structural/temple/pedestal4.mdl"
	]
	soundgroup(choices) : "Sound Group" : "metal_file_cabinet" : "The group of sounds relative to 'sound/usable/openable/<groupname>/*.wav' that specifies action sounds." = []
]
















//====================================================================================================================
// Items & Weapons [VTMB-specific]
//====================================================================================================================

// armor
@ItemClass base(Item) studio("models/scenery/misc/armor/RiotGear/RiotGear.mdl")= item_a_body_armor : "This protective vest is worn under clothing, for that extra ounce of 'not gonna die today'." []
@ItemClass base(Item) studio("models/scenery/misc/armor/ClothesHeavy/ClothesHeavy.mdl")= item_a_hvy_cloth : "This is a set of heavy clothing, which acts as armor. Heavy clothing armor has an armor rating of 2." []
@ItemClass base(Item) studio("models/scenery/misc/armor/LeatherHeavy/LeatherHeavy.mdl")= item_a_hvy_leather : "This is a set of heavy leather armor. Heavy leather armor has an armor rating of 4, but hinders movement, resulting in a -2 penalty to Dexterity. Some examples of heavy leather armor are studded or reinforced leather jackets, girded leather pants, and hard leather gloves and boots." []
@ItemClass base(Item) studio("models/scenery/misc/armor/ClothesLight/ClothesLight.mdl")= item_a_lt_cloth : "This is the most basic and unrestrictive armor. There are no stat penalites for equipping it. Examples of cloth armor would be t-shirts, khakis, sun dresses, and pleated skirts." []

// disciplines
@ItemClass base(Item) = item_d_animalism : "Animalism discipline." []
@ItemClass base(Item) = item_d_dementation : "Dementation discipline." []
@ItemClass base(Item) = item_d_dominate : "Domination discipline." []
@ItemClass base(Item) studio("models/weapons/holylight/view/v_holylight.mdl")= item_d_holy_light : "Holy Light discipline." []
@ItemClass base(Item) studio("models/weapons/thaumaturgy/view/v_thaumaturgy.mdl")= item_d_thaumaturgy : "Thaumaturgy discipline." []

// equipment
@ItemClass base(Item) studio("models/items/bloodpack/ground/bloodpack.mdl")= item_g_bloodpack : "Blood Pack.\n\nA bag of blood routinely used in hospitals for transfusions. Using it restores blood points." []
@ItemClass base(Item) studio("models/items/bloodpack/ground/bloodpack.mdl")= item_g_bluebloodpack : "Blue Blood Pack.\n\nA bag of blood from only the finest human specimens. Drinking it restores blood points." []
@ItemClass base(Item) studio("models/items/bloodpack/ground/bloodpack.mdl")= item_g_eldervitaepack : "Elder Vitae.\n\nThis bag contains extremely potent blood. The hows and wheres of its origin are probably best left unexplored." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_g_keyring : "Keyring.\n\nRing that saves all found keys." []
@ItemClass base(Item) studio("models/weapons/lockpicks/world/w_lockpicks.mdl")= item_g_lockpick : "Lockpick.\n\Tool of the trade for locksmiths and burglars. A lockpick is used to push the pins inside a lock into their correct position until the lock is 'open'. It takes a lot of experience to use these well." []
@ItemClass base(Item) studio("models/items/Wallet/Ground/Wallet.mdl")= item_g_wallet : "Wallet.\n\nYour wallet." []
@ItemClass base(Item) studio("models/items/sewerbook/Ground/sewerbook.mdl")= item_g_sewerbook_1: "Sewer Works Manual.\n\nA guide to sewer mains in the greater Los Angeles area. With references such as these, Nosferatu turn sluiceways and sludgepools into highways and havens. For global travel, enter the sewers and use one of the maps found on the wall." []

// questline items
@ItemClass base(Item) studio("models/items/AnimalTrainingBook/Ground/AnimalTrainingBook.mdl")= item_g_animaltrainingbook : "Animal Training Book.\n\nGallery Noir's Charity Money." []
@ItemClass base(Item) studio("models/items/Astrolite/Ground/Astrolite.mdl")= item_g_astrolite : "Astrolite.\n\nA powerful liquid explosive made from over-the-counter chemicals." []
@ItemClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_bach_journal : "Journal.\n\nThis journal is inscribed with the initials 'G.B.'." []
@ItemClass base(Item) studio("models/items/Talisman/ground/Talisman.mdl")= item_g_badlucktalisman : "Bad Luck Talisman.\n\nA talisman that Mr. Ox asked you to put in Shu's locker at the Lotus Blossom." []
@ItemClass base(Item) studio("models/items/BailBond/Ground/BailBond.mdl")= item_g_bailbond_receipt : "Bail Bond.\n\nThis is the receipt for a bail bond. The bail bond was for a one Rolf Toten." []
@ItemClass base(Item) studio("models/items/cdcase/Ground/cdcase.mdl")= item_g_bertrams_cd : "CD-ROM.\n\nA label on the CD says 'B. Tung'." []
@ItemClass base(Item) studio("models/items/brotherhoodflyer/Ground/brotherhoodflyer.mdl")= item_g_brotherhood_flyer : "Brotherhood Flyer.\n\nThe writing on this flyer reads 'I am Enlightened'." []
@ItemClass base(Item) studio("models/items/License/Ground/License.mdl")= item_g_driver_license_gimble : "Driver's License.\n\nA California driver's license. The name on the license is Virgil Crumb." []
@ItemClass base(Item) studio("models/items/manifest/Ground/manifest_g.mdl")= item_g_edane_print_report : "Ship Manifest.\n\nAnkaran Site transport to Los Angeles: Ankaran Sarcophagus, 3 crates - pottery/tablets, 1 box - unidentified." []
@ItemClass base(Item) studio("models/items/clipboard/ground/clipboard.mdl")= item_g_edane_report : "Police Report.\n\nA copy of the Initial Police Report for the Elizabeth Dane, signed by members of the USCG, NCIS, and LAHP agencies. Despite strong evidence of amazing physical violence, not a single body has been found, no survivors have been located, and there are no signs of large-scale theft." []
@ItemClass base(Item) studio("models/items/Eyeballs/Ground/Eyeballs.mdl")= item_g_eyes : "Ox' Quest Eyes.\n\nEyeballs... eyeballs?" []
@ItemClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_gargoyle_book : "Thaumaturgical Creatures.\n\nRegent's book." []
@ItemClass base(Item) studio("models/items/Pendant/ground/Pendant.mdl")= item_g_ghost_pendant : "Pendant.\n\nThis exquisite pendant looks polished though it was found in the charred ruins of the Ocean House. When you hold it in your palm for a few seconds, you're overwhelmed with a sense of profound sadness." []
@ItemClass base(Item) studio("models/items/invitation/ground/invitation.mdl")= item_g_giovanni_invitation_maria : "Giovanni Invitation.\n\nMaria Giovanni's invitation." []
@ItemClass base(Item) studio("models/items/invitation/ground/invitation.mdl")= item_g_giovanni_invitation_victor : "Giovanni Invitation.\n\nVictor Giovanni's invitation." []
@ItemClass base(Item) studio("models/items/guymag/Ground/guymag.mdl")= item_g_guy_magazine : "Guy Magazine, Spring Edition.\n\nThis looks to be a copy of the Spring Edition of Guy Magazine. On the cover is a beautiful girl, scantily clad. The copy reads, 'IMALIA. Rough, Tough and in the Buff!'." []
@ItemClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_hannahs_appt_book : "Hanna's Appointment Book." []
@ItemClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_hatters_screenplay : "Screenplay.\n\nDavid Hatter's screenplay. It is tentatively titled 'Humanity Vs. The Vampire Lords'." []
@ItemClass base(Item) studio("models/items/HorrorTape_1/Ground/HorrorTape_1.mdl")= item_g_horrortape_1 : "Horror Tape Part 1.\n\nA battered videocassette. The labeling is cheap and worn, you can barely make out the logo, which looks somewhat like 'DMP'. It appears this tape has changed hands more than a few times." []
@ItemClass base(Item) studio("models/items/HorrorTape_2/Ground/HorrorTape_2.mdl")= item_g_horrortape_2 : "Horror Tape Part 2.\n\nA battered videocassette. A battered videocassette. The labeling is cheap and worn. You hope it's one of the muppet movies." []
@ItemClass base(Item) studio("models/items/jadecat/Ground/jadecat.mdl")= item_g_idol_cat : "Jade Cat.\n\nThis is a beautifully-crafted jade statue." []
@ItemClass base(Item) studio("models/items/jadecrane/Ground/jadecrane.mdl")= item_g_idol_crane : "Jade Crane.\n\nThis is a beautifully-crafted jade statue." []
@ItemClass base(Item) studio("models/items/jadedragon/Ground/jadedragon.mdl")= item_g_idol_dragon : "Jade Dragon.\n\nThis is a beautifully-crafted jade statue." []
@ItemClass base(Item) studio("models/items/jadeelephant/Ground/jadeelephant.mdl")= item_g_idol_elephant : "Jade Elephant.\n\nThis is a beautifully-crafted jade statue." []
@ItemClass base(Item) studio("models/items/Flyer/ground/flyer.mdl")= item_g_jumbles_flyer : "Flyer.\n\nThe writing below the symbol says 'I am Enlightened!'." []
@ItemClass base(Item) studio("models/items/businesscard/Ground/businesscard2.mdl")= item_g_junkyard_businesscard : "Brothers Salvage.\n\nThe card reads 'Brothers Salvage, Santa Monica'." []
@ItemClass base(Item) studio("models/items/briefcase/Ground/briefcase.mdl")= item_g_larry_briefcase : "Briefcase.\n\nA briefcase with contents unknown. Larry asked you to grab this from an exchange in the parking garage, which you obviously did." []
@ItemClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_lilly_diary : "Diary.\n\nThis seems to be Lilly's diary." []
@ItemClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_lilly_diary : "Diary.\n\nThis seems to be Lilly's diary." []
@ItemClass base(Item) studio("models/items/LillyOnBeachPhoto/Ground/LillyOnBeachPhoto.mdl")= item_g_lilly_photo : "Girl's Photo.\n\nA photo of a young woman. The message on the back of the photo reads 'August 03, Santa Monica, Lily'." []
@ItemClass base(Item) studio("models/items/Purse/Ground/Purse.mdl")= item_g_lilly_purse : "Purse.\n\nA purse left by Lilly behind in the Diner." []
@ItemClass base(Item) studio("models/items/LillyOnBeachPhoto/Ground/LillyOnBeachPhoto.mdl")= item_g_lillyonbeachphoto : "Lilly on the Beach Photo.\n\nGallery Noir's Charity Money." []
@ItemClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_mercurio_journal : "Mercurio's Journal.\n\nFollowing instructions on how to proceed." []
@ItemClass base(Item) studio("models/items/businesscard/Ground/businesscard.mdl")= item_g_milligans_businesscard : "Business Card.\n\nThis is a business card for 'Haunted LA'. The name on the card is Simon Milligan. The address listed is Skyline Apartments, Apt. 1, Downtown Los Angeles, CA." []
@ItemClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_oh_diary : "Diary.\n\nThis is the Ocean House's charred remains of what looks like a diary." []
@ItemClass base(Item) studio("models/items/skinbook/Ground/skinbook.mdl")= item_g_pisha_book : "Giovanni Book.\n\nBook - Voce de Morte by Vincetti Marcus Giovanni, Consigliare." []
@ItemClass base(Item) studio("models/items/FetishStatue/ground/FetishStatue.mdl")= item_g_pisha_fetish : "Fetish Statue.\n\nYou can tell just from holding it, that there is something definitely odd and supernatural within it." []
@ItemClass base(Item) studio("models/items/bloodpack/ground/bloodpack.mdl")= item_g_werewolf_bloodpack : "Werewolf Blood.\n\nBlood allegedly taken from of a werewolf." []
@ItemClass base(Item) studio("models/items/webcam/Ground/webcam.mdl")= item_g_wireless_camera_1 : "Web Camera.\n\nThis is a remote web camera." []
@ItemClass base(Item) studio("models/items/webcam/Ground/webcam.mdl")= item_g_wireless_camera_2 : "Web Camera.\n\nThis is a remote web camera." []
@ItemClass base(Item) studio("models/items/webcam/Ground/webcam.mdl")= item_g_wireless_camera_3 : "Web Camera.\n\nThis is a remote web camera." []
@ItemClass base(Item) studio("models/items/webcam/Ground/webcam.mdl")= item_g_wireless_camera_4 : "Web Camera.\n\nThis is a remote web camera." []

// keys
@ItemClass base(Item) studio("models/items/sewercard/Ground/sewercard.mdl")= item_g_warrens4_passkey : "Warrens Pass Key.\n\nThis looks to be a magnetic swipe key." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_ash_cell_key : "Ash's Cell Key.\n\nKey to the locked cell." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_carson_apartment_key : "Carson's Apartment Key.\n\nYou're not sure what this key is for." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_chinese_theatre_key : "Chinese Theatre Key.\n\nKey to unlock front door of Chinese Theatre." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_clinic_cs_key : "Clinic Guard's Keys.\n\nIt's just a key, there's not much to say about it." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_clinic_maintenance_key : "Maintenance Room Key.\n\nIt's just a key, there's not much to say about it." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_clinic_stairs_key : "Clinic Stairs Key.\n\nIt's just a key, there's not much to say about it." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_edane_key : "Record Room Key.\n\nKey to the Elizabeth Dane's records room." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_empire_jezebel_key : "Jezebel Locke's Key.\n\nYou're not sure what this key is for." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_empire_mafia_key : "Empire Mafia Key.\n\nYou're not sure what this key is for." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_fu_cell_key : "Barrabus' Cell Key.\n\nKey to the locked cell." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_fu_office_key : "Fu Syndicate Office Key.\n\nOffice Keycard." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_gallery_noir_key : "Gallery Noir's Key.\n\nIt's just a key, there's not much to say about it." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_gimble_key : "Foxy Boxes' Key.\n\nIt's just a key, there's not much to say about it." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_hannahs_safe_key : "Safe Key.\n\nThis is the key to Hannah's safe." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_hitman_ji_key : "Ji Wen Ja's key.\n\nKey to Ji Wen Ja's secret stash." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_hitman_lu_key : "Lu Fang's key.\n\nKey to Lu Fang's secret stash." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_kiki_key : "Padlock Key.\n\nKey to unlock Kiki's Room." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_leopold_int_key : "Society of Leopold Interior Key.\n\nTo the Wine Cellar." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_lilly_key : "Lily's Key - looks like a car key.\n\nYou're not sure what this key is for." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_lucky_star_murder_key : "Luckee Star Room Key.\n\nProperty of Luckee Star, Hollywood." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_malcolm_office_key : "Malcolm's Office Key.\n\nIt's just a key, there's not much to say about it." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_malkavian_refrigerator_key : "Laboratory Refrigerator Key.\n\nIt's just a key, there's not much to say about it." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_murietta_key : "Spare Key.\n\nThis looks like someone's spare key." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_museum_basement_key : "Museum Basement Key.\n\nKey to the museum basement." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_museum_office_key : "Museum Office Key.\n\nKey to the museum's administrative offices." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_museum_storage_key : "Museum Storage Key.\n\nKey to the museum's storage area." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_museum_storeroom_key : "Museum Workroom Key.\n\nKey to the museum's workroom." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_netcafe_office_key : "Internet Cafe Key.\n\nKey to the office of the Internet Cafe." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_oceanhouse_basement_key : "Boiler Room Key." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_oceanhouse_sewer_key : "Sewer Key.\n\nThis looks like someone's spare key." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_oceanhouse_upstairs_key : "Upstairs Room Key." []
@ItemClass base(Item) studio("models/items/Key/Ground/Key.mdl")= item_k_oh_front_key : "Ocean House Front Door Key." []
@ItemClass base(Item) studio("models/scenery/furniture/Sarcophagus/Sarcophagus_KEY.mdl")= item_k_sarcophagus_key : "Sarcophagus Key.\n\nA brilliant example of ancient engineering and a significant archaeological find. But as with any key, this one is most coveted for what it grants access to." []
@ItemClass base(Item) studio("models/items/orangecomputing/Ground/orangecomputing.mdl")= item_k_shrekhub_one_key : "Megahurtz Access Card.\n\nKey to Megahurtz Computing." []
@ItemClass base(Item) studio("models/items/kamikazizen/Ground/kamikazizen.mdl")= item_k_shrekhub_four_key : "Kamikazi Zen Access Card.\n\nKey to the door of Kamikazi Zen." []
@ItemClass base(Item) studio("models/items/metalhead/Ground/metalhead.mdl")= item_k_shrekhub_three_key : "Metalhead Access Card.\n\nKey to the door of Metalhead industries." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_skyline_haven_key : "Skyline Apartments, Unit 4.\n\nThis is the key to your haven downtown." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_tatoo_parlor_key : "Tattoo Parlor Key.\n\nYou're not sure what this key is for." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_tawni_apartment_key : "Tawni's Apartment Key." []
@ItemClass base(Item) studio("models/items/Keycard/Ground/g_keycard.mdl")= item_k_tutorial_chopshop_stairs_key : "Chopshop Key.\n\nKey to the stairwell at the back of the chopshop." []

// selling items
@ItemClass base(Item) studio("models/items/carstereo/Ground/carstereo.mdl")= item_g_car_stereo : "Car Stereo [Item for sale].\n\nA popular model car stereo that might be worth something to someone who asks few questions about its origin." []
@ItemClass base(Item) studio("models/items/Cashbox/Ground/CashBox.mdl")= item_g_cash_box : "Cash Box.\n\nGallery Noir's Charity Money." []
@ItemClass base(Item) studio("models/items/ChewingGum/Ground/ChewingGum.mdl")= item_g_chewinggum : "Chewing Gum [Item for sale].\n\nGallery Noir's Charity Money." []
@ItemClass base(Item) studio("models/items/ComputerBookHighGrade/Ground/ComputerBookHighGrade.mdl")= item_g_computerbookhighgrade : "Computer Book High Grade [Item for sale].\n\nGallery Noir's Charity Money." []
@ItemClass base(Item) studio("models/items/ComputerBookLowGrade/Ground/ComputerBookLowGrade.mdl")= item_g_computerbooklowgrade : "Computer Book LOW Grade [Item for sale].\n\nGallery Noir's Charity Money." []
@ItemClass base(Item) studio("models/items/Drugs/ground/DrugBox.mdl")= item_g_drugs_drug_box : "Drug Box [Item for sale].\n\nVivitrazac. Take one before 'relations'. Allow six to eight hours for swelling to subside." []
@ItemClass base(Item) studio("models/items/Drugs/ground/MorphineBottle.mdl")= item_g_drugs_morphine_bottle : "Morphine Bottle [Item for sale].\n\nUsed to ease the suffering of sufficiently painful wounds." []
@ItemClass base(Item) studio("models/items/Drugs/ground/PerscriptionBottle.mdl")= item_g_drugs_perscription_bottle : "Prescription Bottle [Item for sale].\n\nOrthotricyclin. Failure to take as prescribed could result in eighteen years of responsibility." []
@ItemClass base(Item) studio("models/items/Drugs/ground/PillBottle.mdl")= item_g_drugs_pill_bottle : "Pill Bottle [Item for sale].\n\nEstrogen. Caution: Do not take if male." []
@ItemClass base(Item) studio("models/items/LinedPaper/Ground/LinedPaper.mdl")= item_g_linedpaper : "Lined Paper.\n\This looks like a pad of lined paper." []
@ItemClass base(Item) studio("models/items/PullToy/Ground/PullToy.mdl")= item_g_pulltoy : "PullToy [Item for sale]." []
@ItemClass base(Item) studio("models/items/Rings/Ground/Ring01.mdl")= item_g_ring_gold : "Gold Ring [Item for sale].\n\nThis looks to be a class ring." []
@ItemClass base(Item) studio("models/items/Rings/Ground/Ring01.mdl")= item_g_ring_serial_killer_1 : "Gold Ring [Item for sale].\n\nThis looks to be a class ring... for the SERIEL KILLAH! #1." []
@ItemClass base(Item) studio("models/items/Rings/Ground/Ring01.mdl")= item_g_ring_serial_killer_2 : "Gold Ring [Item for sale].\n\nThis looks to be a class ring... for the SERIEL KILLAH! #2." []
@ItemClass base(Item) studio("models/items/Rings/Ground/Ring02.mdl")= item_g_ring_silver : "Silver Ring [Item for sale].\n\nLooks like an engagement ring for a girl who's a single day's ATM limit special." []
@ItemClass base(Item) studio("models/items/Rings/Ground/Ring03.mdl")= item_g_ring03 : "Fancy Ring [Item for sale].\n\nThis is a beautifully-crafted ring, seemingly slipped from the fingers of royalty." []
@ItemClass base(Item) studio("models/items/Watch/Ground/Watch.mdl")= item_g_watch_fancy : "Fancy Watch [Item for sale].\n\nThe faceplate says Quantam Limited Edition. This is the kind of watch that comes with its own matching luxury vehicle." []
@ItemClass base(Item) studio("models/items/Watch/Ground/Watch_02.mdl")= item_g_watch_normal : "Normal Watch [Item for sale].\n\nThis is a replica of a much nicer watch." []
@ItemClass base(Item) studio("models/items/MoneyClip/Ground/MoneyClip.mdl")= item_m_money_clip : "Money Clip.\n\nA money clip with an indeterminate amount of cash." [ starting_money(integer) : "Starting Money Amount" : 100 : "Amount of money put into this clip." ]
@ItemClass base(Item) studio("models/items/MoneyEnvelope/Ground/MoneyEnvelope.mdl")= item_m_money_envelope : "Money Envelope.\n\nAn envelope containing a bit of cash." [ starting_money(integer) : "Starting Money Amount" : 100 : "Amount of money put into this envelope." ]
@ItemClass base(Item) studio("models/items/Wallet/Ground/Wallet.mdl")= item_m_wallet : "Wallet.\n\Not your wallet." [ starting_money(integer) : "Starting Money Amount" : 100 : "Amount of money put into this wallet." ]

// collectable items
@ItemClass base(Item) studio("models/items/locket/Ground/locket.mdl")= item_g_locket : "Antique Locket.\n\This locket is old and slightly tarnished. It might be your imagination, but it seems to radiate an unnatural heat." []
@ItemClass base(Item) studio("models/items/garysphoto/Ground/garysphoto.mdl")= item_g_garys_photo : "Photo.\n\nA blurry photo of what looks to be a Nosferatu." []
@ItemClass base(Item) studio("models/items/cdcase/Ground/cdcase.mdl")= item_g_garys_cd : "CD-ROM.\n\nThere's an illegible handwritten label. Looks like a data CD." []
@ItemClass base(Item) studio("models/items/HorrorTape_2/Ground/HorrorTape_2.mdl")= item_g_garys_film : "Film Tape.\n\nA battered film tape. Tap Hotel. Shuffle Step." []
@ItemClass base(Item) studio("models/items/HorrorTape_2/Ground/HorrorTape_2.mdl")= item_g_garys_tape : "Video Tape.\n\nJock Shot's Swimsuit Shoot. 98 percent chance that someone has gone wild." []
@ItemClass base(Item) studio("models/items/stake/Ground/stake.mdl")= item_g_stake : "Wooden Stake." []
@ItemClass base(Item) studio("models/items/LillyOnBeachPhoto/Ground/VV_Photo.mdl")= item_g_vv_photo : "VV's Autographed Photo.\n\nI'm delivering a memento of moi to your haven, but this should tide you over for now. Love, VV." []
@ItemClass base(Item) studio("models/items/Diary/Ground/Diary.mdl")= item_g_vampyr_apocrypha : "Vampyr Apocrypha.\n\nThis book is titled 'Vampyr Apocrypha'. Unidentified Sarcophagus, Discovered by Julius of Gaul, 1068 AD near Ankara, Ottoman Empire..." []
@ItemClass base(Item) studio("models/items/Clipboard/Ground/Clipboard.mdl")= item_g_warr_clipboard : "Clipboard.\n\nThis looks like the clipboard of an employee of the Los Angeles Department of Water and Power, Spring 2003." []
@ItemClass base(Item) studio("models/items/dayplanner/ground/dayplanner.mdl")= item_g_warr_ledger_1 : "Ledger.\n\nThis looks to be the weekly log of the Los Angeles Department of Water and Power, 1957." []
@ItemClass base(Item) studio("models/items/dayplanner/ground/dayplanner2.mdl")= item_g_warr_ledger_2 : "Ledger.\n\nThis looks to be the weekly log of Douglas Streets, foreman of the Los Angeles Department of Water and Power, 1919." []

// occult items
@ItemClass base(Item) studio("models/items/occult_gargoyle/ground/pendant.mdl")= item_p_gargoyle_talisman : "Rune of the Third Eye.\n\nThis strange talisman is unusually heavy, emanating a palpable power. It reduces the amount of damage done by Gargoyles." []
@ItemClass base(Item) studio("models/items/occult/ground/organ.mdl")= item_p_occult_blood_buff : "Bloodstar.\n\nAll Kindred have the innate power to push their undead bodies to the height of mortal capacity, but only for a moment and at a dire cost of blood. This eldritch talisman was crafted to boost this ability. Blood Buff has twice the duration." []
@ItemClass base(Item) studio("models/items/occult/ground/birdskull.mdl")= item_p_occult_dexterity : "Fae Charm.\n\nThis grim totem makes you feel light as a bird. Plus one to Dexterity." []
@ItemClass base(Item) studio("models/items/occult/ground/thorn.mdl")= item_p_occult_dodge : "Weekapaug Thistle.\n\nThis petrified reed was not meant to fall into the hands of the damned, but vampires can benefit from its shamanistic magick all the same. Increases Defense by 1 point." []
@ItemClass base(Item) studio("models/items/occult/ground/handle.mdl")= item_p_occult_experience : "Saulocept.\n\nAs long as you possess Saulocept you will gain an extra point of experience every time you are awarded 3 or more experience. Saulocept may or may not have other effects." []
@ItemClass base(Item) studio("models/items/occult_Fang/ground/fang.mdl")= item_p_occult_frenzy : "Tarulfang.\n\nThis heavy fang could only have belonged to a ferocious predatory beast. You feel at ease knowing there's one less of those in the world. Decreases your chance to Frenzy." []
@ItemClass base(Item) studio("models/weapons/lockpicks/world/w_lockpicks.mdl")= item_p_occult_hacking : "Occult Hacking.\n\nBlah blah, hacking buff." []
@ItemClass base(Item) studio("models/items/occult/ground/bone.mdl")= item_p_occult_heal_rate : "Mummywrap Fetish.\n\nGazing upong this mummified fetish you feel a rush of vitality to your undead flesh. Increases passive healing rate." []
@ItemClass base(Item) studio("models/weapons/lockpicks/world/w_lockpicks.mdl")= item_p_occult_lockpicking : "Occult Lockpicking.\n\nBlah blah, lockpicking buff." []
@ItemClass base(Item) studio("models/items/occult/ground/ring.mdl")= item_p_occult_obfuscate : "Zharalketh.\n\nSliding on this ring you feel the same stomach-dropping sensation you had when you first invoked Obfuscate. As long as you wear Zharalketh you will be able to maintain Obfuscate longer." []
@ItemClass base(Item) studio("models/items/occult/ground/amber.mdl")= item_p_occult_passive_durations : "Galdjum.\n\nHolding this rough-hewn amber stone gives you a sense of peace, and even glimmer of hope for salvation. You are able hold the effect of passive disciplines longer as long as you possess Galdjum. Their durations are increase 25 percent." []
@ItemClass base(Item) studio("models/items/occult_alamut/ground/alamut.mdl")= item_p_occult_presence : "Key of Alamut.\n\nThese wands have been carried by the feared assassins of Clan Assamite for millenia. One of only a handful still in existence, this Key of Alamut gives it's owner extraordinary resilience to damage. Increases all Soak ratings by 1." []
@ItemClass base(Item) studio("models/items/occult_chalice/ground/chalice.mdl")= item_p_occult_regen : "The Odious Chalice.\n\nThe perverse creation of a Tzimisce fleshcrafter, this abomination is forced to live a tortured eternity in servitude to the damned. As you kill enemies, the Chalice will fill with blood. Use the Chalice to feed from it and gain its stored vitae." []
@ItemClass base(Item) studio("models/items/occult/ground/marble.mdl")= item_p_occult_strength : "Heart of Eliza.\n\nThis glassy stone appears to have a liquid core. The stone itself is milky translucent, rock solid, and unlike anything you've seen. Possession of the Heart of Eliza conveys a Melee bonus of one." []
@ItemClass base(Item) studio("models/items/occult/ground/pendant.mdl")= item_p_occult_thaum_damage : "Daimonori.\n\nThis pendant is hot to the touch, a heat that seeps into your core and fills you with a new confidence. You're unsure if this power is entirely your own, but its intoxicating lure is seemingly beyond your power to resist. Increases the damage of all Thaumaturgy effects." []

// research books
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_hg_computers : "The Cowboy's Guide to Cyberspace by Case.\n\nRequires Research 9." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_hg_dodge : "Dodge II.\n\nA handbook from Les Assasins De Roullents, a Quebecois terrorist organization. This manual holds the secrets to dodging bullets, trains, and other projectiles. Requires Research 8." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_hg_firearms : "Art of the Quick-Draw by Ned Nederlander.\n\nRequires Research 10." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_hg_melee : "Bustin' It: Harmful If Swallowed Hint Book.\n\nThe only official strategy guide with all the hottest tricks and tips for Bustin' It... Requires Research 9." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_lg_computers : "Computers for Grandma.\n\nReading this will boost your computer skill. Research of at least 2 is required." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_lg_dodge : "Scarlet Torkelson: Circus Performer.\n\nBiography of 1930s circus performer Scarlet 'the perforated lady' Torkelson. Best known as the assistant to 'Shakey Sil' Manfretti, the notorious epileptic knife-thrower." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_lg_firearms : "So You Wanna' Shoot Things?.\n\nFirst, get a gun, preferably something for home defense, like an automatic rifle. Second, check to see if the gun is loaded, if not, do so... This book increases firearms skill." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_lg_stealth : "Peepin' - A Voyeur Field Guide.\n\nEvery good voyeur needs to develop a sneaking game... This book ups your stealth skill." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_mg_brawl : "Brawling Manual.\n\nNo Means No: A Woman's Guide to Self Defense on the College Campus." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_mg_finance : "Finance Manual.\n\nABC - Always Be Closing: Mitch & Murray's Leads to the California Real Estate Market." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_mg_melee : "Kendo for Advanced Students.\n\nIf you have gained the insight, willpower, and form from your first two years of Kendo, you are now ready for the secrets of the kendo masters... This book ups your melee skill." []
@ItemClass base(Item) studio("models/items/beckett_book/ground/item_g_beckett_book.mdl")= item_p_research_mg_security : "Security Manual.\n\nSobchak's Guide to Personal and Home Security." []

// other items
@ItemClass base(Item) = item_i_written : "Written [not tested]." []
@ItemClass base(Item) = item_s_physicshand : "Physics Hand [not tested]." []

// weapons
@ItemClass base(Item) studio("models/weapons/baseball_bat/ground/g_baseball_bat.mdl")= item_w_baseball_bat : "Baseball Bat.\n\nOnce, the signature crack of this equipment conjured images of America's pastime, it has evolved into the brutal chorus of a thugsong." []
@ItemClass base(Item) studio("models/weapons/baton/ground/g_baton.mdl")= item_w_baton : "Police Baton." []
@ItemClass base(Item) studio("models/weapons/bushhook/world/g_bushhook.mdl")= item_w_bush_hook : "Bush Hook.\n\nPrimarily used by gardeners, when used for intents other than its original purpose, the results are frequently gory." []
@ItemClass base(Item) studio("models/weapons/anaconda/ground/g_anaconda.mdl")= item_w_colt_anaconda : "Colt Anaconda.\n\nA .44 magnum revolver. Feelin' lucky punk? A large caliber monster with the power to stop almost anyone dead in his tracks. Alternate Fire Mode: Fan." []
@ItemClass base(Item) studio("models/weapons/crossbow/ground/g_crossbow.mdl")= item_w_crossbow : "Crossbow.\n\nA modern variant of an ancient Chinese weapon. Fires silently, but has to be cocked before each shot." []
@ItemClass base(Item) studio("models/weapons/crossbow/ground/g_crossbow.mdl")= item_w_crossbow_flaming : "Flaming Crossbow.\n\nA modern variant of an ancient Chinese weapon. Fires silently, but has to be cocked before each shot." []
@ItemClass base(Item) studio("models/weapons/desert_eagle/ground/g_desert_eagle.mdl")= item_w_deserteagle : "McLusky .50 Caliber.\n\nThe McLusky is one of the few gas-operated handguns ever produced, and one of the most powerful and heavy pistols available on the market." []
@ItemClass base(Item) studio("models/weapons/fire_axe/ground/g_fire_axe.mdl")= item_w_fireaxe : "Fire Axe.\n\nTruly, a tool for madmen. Who else would attack fire with a blade?" []
@ItemClass base(Item) studio("models/weapons/flamethrower/ground/g_flamethrower_r.mdl")= item_w_flamethrower : "Flamethrower.\n\nFlamethrowers,in one form or another, have been used since ancient times. It propels burning fuel in a several foot arc, scorching everything in its path." []
@ItemClass base(Item) studio("models/weapons/pistol_glock/ground/g_pistol_glock.mdl")= item_w_glock_17c : "Brokk 17c.\n\nA 9mm standard pistol with a polymer grip and guide rod (instead of metal) that makes it lighter than other pistols. It can be found in use by most law enforcement agencies..." []
@ItemClass base(Item) studio("models/weapons/grenade/pineapple/ground/g_pineapple.mdl")= item_w_grenade_frag : "Fragmentation Grenade.\n\nPull pin for fun and profit." []
@ItemClass base(Item) studio("models/weapons/m37/world/w_m37.mdl")= item_w_ithaca_m_37 : "Utica M37.\n\nThe 12 gauge M37 is designed for close quarters use as a home defense weapon. Tried and true service for military and law enforcement, the m37 features all metal parts and a bottom feed and ejector for both rights and lefties. It has moderate recoil and is fairly light for ease of use." []
@ItemClass base(Item) studio("models/weapons/katana/world/g_katana.mdl")= item_w_katana : "Katana.\n\nA light, slightly curved traditional Japanese sword designed for quick slashing attacks. To Kindred, a competent swordsman is far more dangerous than a sharpshooter." []
@ItemClass base(Item) studio("models/weapons/knife/world/g_knife.mdl")= item_w_knife : "Knife.\n\nSome knives, throughout their entire existence, are never used for any malicious purpose. This ain't one of them." []
@ItemClass base(Item) studio("models/weapons/submachine_mac10/ground/g_submachine_mac10.mdl")= item_w_mac_10 : "Braddock 9mm.\n\nA small, light machine pistol that fires a 9mm pistol round, not made for accuracy as much as to deliver the largest amount of ordinance in the shortest period of time..." []
@ItemClass base(Item) studio("models/items/occult_katana/ground/katana.mdl")= item_w_occultblade : "Tal'mahe'Ra Blade.\n\nThis sword was forged by the Tal'mahe'Ra, a vanished sect of Kindred that purportedly ventured into the lands of the dead. It seems unaturally light and attacks twice as fast as a normal blade." []
@ItemClass base(Item) studio("models/weapons/rifle_rem700/ground/g_rifle_rem700.mdl")= item_w_remington_m_700 : "'Jaime Sue'.\n\nThis is a standard rifle for sport hunting. It features a zoom mode for killing made easy." []
@ItemClass base(Item) studio("models/weapons/severed_arm/ground/g_severed_arm.mdl")= item_w_severed_arm : "A severed arm.\n\nAlthough the previous owner probably misses it, you can still put it to good use." []
@ItemClass base(Item) studio("models/weapons/katana/world/g_katana.mdl")= item_w_sheriff_sword : "Sheriff Sword [Unused weapon].\n\nYou shouldn't have this!" []
@ItemClass base(Item) studio("models/weapons/sledgehammer/ground/g_sledgehammer.mdl")= item_w_sledgehammer : "Sledgehammer.\n\nA heavy hammer ostensibly used for construction. Great for getting that song out of someone's head, as well as anything else inside." []
@ItemClass base(Item) studio("models/weapons/rifle_steyraug/ground/g_rifle_steyraug_r.mdl")= item_w_steyr_aug : "Steyr Aug.\n\nEven if the Steyr Aug was lackluster as a weapon, it would still have a lot going for it aesthetically, but this lightweight Austrian sub-machine gun has proved reliable and effective, making it a popular weapon in militaries around the world..." []
@ItemClass base(Item) studio("models/weapons/supershotgun/ground/g_supershotgun.mdl")= item_w_supershotgun : "Jaegerspas XV.\n\nThe Jaegerspas automatic shotgun looks and fires more like an assault rifle than a traditional shotgun. It delivers bursts of deadly shot at a devastating pace. The Jaegerspas has both semi-automatic and pump action functionality." []
@ItemClass base(Item) studio("models/weapons/ThirtyEight/ground/g_ThirtyEight.mdl")= item_w_thirtyeight : "Thirtyeight.\n\nThis is a cheap, small-caliber handgun used by start-up hoods in alleys across the country. Also known as a purse gun." []
@ItemClass base(Item) studio("models/weapons/throwing_star/ground/g_throwing_star.mdl")= item_w_throwing_star : "Throwing Star.\n\nWhen you wish upon a throwing star, you wish you had infomodel, wieldmodels and a projectile model so you could finish implemented the damn thing." []
@ItemClass base(Item) studio("models/weapons/tireiron/world/g_tireiron.mdl")= item_w_tire_iron : "Tire Iron.\n\nHeavy, metal, blunt. Could be used for fixing a flat, sure." []
@ItemClass base(Item) studio("models/weapons/torch/ground/g_torch.mdl")= item_w_torch : "Torch.\n\nFor when you want to get medieval on someone's ass." []
@ItemClass base(Item) studio("models/weapons/submachine_uzi/ground/g_uzi.mdl")= item_w_uzi : "Lassiter Killmatic.\n\nThe Lassiter Killmatic was developed to be a reliable and compact gun, robust enough to take a lot of punishment, and accurate enough to dish it out in a hurry... Limited recoil and climb make one-handed firing feasible." []

// unused weapons
@ItemClass base(Item) = item_w_chang_blade : "Chang Brothers Blade [Unused weapon].\n\nBlade used by Chang Brother's Boss." []
@ItemClass base(Item) = item_w_chang_claw : "Chang Brothers Claws [Unused weapon].\n\nClaw used by Chang Brother's Boss." []
@ItemClass base(Item) = item_w_claws : "Claws [Unused weapon]." []
@ItemClass base(Item) = item_w_claws_ghoul : "Ghoul Claws [Unused weapon]." []
@ItemClass base(Item) = item_w_claws_protean4 : "Claws [Unused weapon].\n\nProtean 4." []
@ItemClass base(Item) = item_w_claws_protean5 : "Claws [Unused weapon].\n\nProtean 5." []
@ItemClass base(Item) = item_w_gargoyle_fist : "Gargoyle Melee [Unused weapon]." []
@ItemClass base(Item) = item_w_hengeyokai_fist : "Hengeyokai Fists [Unused weapon]." []
@ItemClass base(Item) = item_w_manbat_claw : "ManBat Melee [Unused weapon]." []
@ItemClass base(Item) = item_w_mingxiao_melee : "Ming Xiao Melee [Unused weapon]." []
@ItemClass base(Item) = item_w_mingxiao_spit : "Ming Xiao's Spit [Unused weapon]." []
@ItemClass base(Item) = item_w_mingxiao_tentacle : "Ming Xiao Tentacles [Unused weapon]." []
@ItemClass base(Item) = item_w_sabbatleader_attack : "Sabbat Leader Attack [Unused weapon]." []
@ItemClass base(Item) = item_w_tzimisce_melee : "Tzimisce Melee [Unused weapon]." []
@ItemClass base(Item) = item_w_tzimisce2_claw : "Tzimisce 2 Claw [Unused weapon]." []
@ItemClass base(Item) = item_w_tzimisce2_head : "Tzimisce 2 Head [Unused weapon]." []
@ItemClass base(Item) = item_w_tzimisce3_claw : "Tzimisce 3 Claw [Unused weapon]." []
@ItemClass base(Item) = item_w_unarmed : "Unarmed [Unused].\n\nNo weapon readied." []
@ItemClass base(Item) = item_w_werewolf_attacks : "Werewolf Attack [Unused weapon]." []
@ItemClass base(Item) = item_w_wolf_head : "Wolf Head [Unused weapon]." []

@ItemClass base(Item) studio("models/weapons/katana/world/g_katana.mdl")= item_w_avamp_blade : "Asian Vampire Blade [Unused weapon].\n\nBlade used by Asian Vampire Boss." []
@ItemClass base(Item) studio("models/scenery/misc/changball/changball.mdl")= item_w_chang_energy_ball : "Fragmentation Grenade [Unused weapon].\n\nPull pin for fun and profit." []
@ItemClass base(Item) studio("models/scenery/misc/gio_spirit/gio_spirit.mdl")= item_w_chang_ghost : "Chang Ghost Projectile [Unused weapon].\n\nSpawned when a coffin is broken open." []
@ItemClass base(Item) studio("models/weapons/fists/info/i_fists.mdl")= item_w_fists : "Fists (Unarmed).\n\nNo weapon readied." []
@ItemClass base(Item) studio("models/weapons/rifle_rem700/ground/g_rifle_rem700_bach.mdl")= item_w_rem_m_700_bach : "Bach's 700P Rifle [Unused weapon].\n\nThis is a standard tactical rifle most commonly employed by SWAT teams.  It features a 20X Scope to pick off beads of sweat off the target's forehead." []
@ItemClass base(Item) studio("models/weapons/fists/info/i_fists.mdl")= item_w_zombie_fists : "Zombie fists [Unused weapon]." []

//@PointClass base(Item) = weapon_physcannon : "HL2 Physcannon [not used directly]." []
//@PointClass base(Item) = weapon_physgun : "HL2 Physgun [not used directly]." []
//@PointClass base(Item) studio("models/weapons/pistol/world/w_pistol.mdl")= weapon_pistol : "HL2 Pistol [Unused]." []








































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// SOUND
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// ambient_soundscheme [VTMB-specific, soundscape-based]
//===================================================================================================================

@PointClass
base (
	Targetname,
	c_VEnableDisable
)
iconsprite("editor/env_soundscape.vmt")
= ambient_soundscheme : 
	"[VTMB] An 'env_soundscape'-similar entity to control sound in an area. The active soundscheme at any time is the last one that had line-of-sight to the player, and was within the radius."
[
	sep_ascmain(string) readonly: "------------------------------------"

	scheme_file(vsndscheme) : "Sound Scheme File" : "sm_hub_streets" : "The name of the Sound Scheme to use. \nCorresponds to an entry in the 'sound/schemes/<name>.txt' file. \n\nIf you are using a custom scheme file (not presented in list) - please, use the full moddir-relative paths, like 'sound/Schemes/MyScheme.txt'." =
	[
	// SndSchemeList:
		"sound/schemes/609.txt" : "609" 
		"sound/schemes/alley.txt" : "alley" 
		"sound/schemes/asphole_sounds.txt" : "asphole_sounds" 
		"sound/schemes/bar_sounds.txt" : "bar_sounds" 
		"sound/schemes/beachhouse.txt" : "beachhouse" 
		"sound/schemes/beachhouse_dennis_talk_temp.txt" : "beachhouse_dennis_talk_temp" 
		"sound/schemes/c_theater1.txt" : "c_theater1" 
		"sound/schemes/c_theater2.txt" : "c_theater2" 
		"sound/schemes/ch_hub_1.txt" : "ch_hub_1" 
		"sound/schemes/ch_temple_4.txt" : "ch_temple_4" 
		"sound/schemes/ch_zhaos_1.txt" : "ch_zhaos_1" 
		"sound/schemes/cops_outside.txt" : "cops_outside" 
		"sound/schemes/elizabethdane_exterior.txt" : "elizabethdane_exterior" 
		"sound/schemes/elizabethdane_interior.txt" : "elizabethdane_interior" 
		"sound/schemes/epicdemo.txt" : "epicdemo" 
		"sound/schemes/glaze.txt" : "glaze" 
		"sound/schemes/glaze2.txt" : "glaze2" 
		"sound/schemes/gp_giovanni_1.txt" : "gp_giovanni_1" 
		"sound/schemes/gp_giovanni_2.txt" : "gp_giovanni_2" 
		"sound/schemes/gp_giovanni_2a.txt" : "gp_giovanni_2a" 
		"sound/schemes/gp_giovanni_2b.txt" : "gp_giovanni_2b" 
		"sound/schemes/gp_giovanni_3.txt" : "gp_giovanni_3" 
		"sound/schemes/gp_giovanni_4.txt" : "gp_giovanni_4" 
		"sound/schemes/gp_giovanni_5.txt" : "gp_giovanni_5" 
		"sound/schemes/hollow_interior.txt" : "hollow_interior" 
		"sound/schemes/hollywood_main.txt" : "hollywood_main" 
		"sound/schemes/hw_609_1_exterior.txt" : "hw_609_1_exterior" 
		"sound/schemes/hw_609_1_interior.txt" : "hw_609_1_interior" 
		"sound/schemes/hw_ash_sewer_1.txt" : "hw_ash_sewer_1" 
		"sound/schemes/hw_ash_sewer_2.txt" : "hw_ash_sewer_2" 
		"sound/schemes/hw_ash_sewer_3.txt" : "hw_ash_sewer_3" 
		"sound/schemes/hw_asphole_1.txt" : "hw_asphole_1" 
		"sound/schemes/hw_cemetery.txt" : "hw_cemetery" 
		"sound/schemes/hw_chinese_1_boss.txt" : "hw_chinese_1_boss" 
		"sound/schemes/hw_chinese_1_int.txt" : "hw_chinese_1_int" 
		"sound/schemes/hw_chinese_1_post.txt" : "hw_chinese_1_post" 
		"sound/schemes/hw_jewelry_1.txt" : "hw_jewelry_1" 
		"sound/schemes/hw_luckystar_1.txt" : "hw_luckystar_1" 
		"sound/schemes/hw_luckystar_1_exterior.txt" : "hw_luckystar_1_exterior" 
		"sound/schemes/hw_metalhead_1.txt" : "hw_metalhead_1" 
		"sound/schemes/hw_sewer_1.txt" : "hw_sewer_1" 
		"sound/schemes/hw_warrens_base.txt" : "hw_warrens_base" 
		"sound/schemes/hw_warrens_quiet.txt" : "hw_warrens_quiet" 
		"sound/schemes/hw_warrens_1.txt" : "hw_warrens_1" 
		"sound/schemes/hw_warrens_2.txt" : "hw_warrens_2" 
		"sound/schemes/hw_warrens_3.txt" : "hw_warrens_3" 
		"sound/schemes/hw_warrens_4.txt" : "hw_warrens_4" 
		"sound/schemes/hw_warrens4_base.txt" : "hw_warrens4_base" 
		"sound/schemes/hw_warrens_5.txt" : "hw_warrens_5" 
		"sound/schemes/hw_warrens_5.txt" : "hw_warrens_5" 
		"sound/schemes/kamikazezen.txt" : "kamikazezen" 
		"sound/schemes/la_abandoned_building_1.txt" : "la_abandoned_building_1" 
		"sound/schemes/la_bradbury_1.txt" : "la_bradbury_1" 
		"sound/schemes/la_bradbury_2.txt" : "la_bradbury_2" 
		"sound/schemes/la_bradbury_3.txt" : "la_bradbury_3" 
		"sound/schemes/la_bradbury_3_boss.txt" : "la_bradbury_3_boss" 
		"sound/schemes/la_chantry_1.txt" : "la_chantry_1" 
		"sound/schemes/la_confession_1.txt" : "la_confession_1" 
		"sound/schemes/la_crackhouse_1.txt" : "la_crackhouse_1" 
		"sound/schemes/la_empire_1.txt" : "la_empire_1" 
		"sound/schemes/la_empire_2.txt" : "la_empire_2" 
		"sound/schemes/la_expipe_1.txt" : "la_expipe_1" 
		"sound/schemes/la_hospital_1.txt" : "la_hospital_1" 
		"sound/schemes/la_hub_1.txt" : "la_hub_1" 
		"sound/schemes/la_library_1.txt" : "la_library_1" 
		"sound/schemes/la_library_2.txt" : "la_library_2" 
		"sound/schemes/la_malkavian_1.txt" : "la_malkavian_1" 
		"sound/schemes/la_malkavian_2.txt" : "la_malkavian_2" 
		"sound/schemes/la_malkavian_2_outside.txt" : "la_malkavian_2_outside" 
		"sound/schemes/la_malkavian_3.txt" : "la_malkavian_3" 
		"sound/schemes/la_malkavian_4.txt" : "la_malkavian_4" 
		"sound/schemes/la_malkavian_4_fire.txt" : "la_malkavian_4_fire" 
		"sound/schemes/la_malkavian_5.txt" : "la_malkavian_5" 
		"sound/schemes/la_museum_1.txt" : "la_museum_1" 
		"sound/schemes/la_plaguebearer_sewer.txt" : "la_plaguebearer_sewer" 
		"sound/schemes/la_plaguebearer_sewer_base.txt" : "la_plaguebearer_sewer_base" 
		"sound/schemes/la_plaguebearer_sewer_2.txt" : "la_plaguebearer_sewer_2" 
		"sound/schemes/la_sewer_1.txt" : "la_sewer_1" 
		"sound/schemes/la_skyline_1.txt" : "la_skyline_1" 
		"sound/schemes/la_ventruelobby_1.txt" : "la_ventruelobby_1" 
		"sound/schemes/la_ventrue_1_chambers.txt" : "la_ventrue_1_chambers" 
		"sound/schemes/la_ventrue_2.txt" : "la_ventrue_2" 
		"sound/schemes/la_ventrue_3.txt" : "la_ventrue_3" 
		"sound/schemes/la_ventrue_3_roof.txt" : "la_ventrue_3_roof" 
		"sound/schemes/la_ventrue_credits.txt" : "la_ventrue_credits" 
		"sound/schemes/la_ventrue_credits2.txt" : "la_ventrue_credits2" 
		"sound/schemes/la_ventrue_gauntlet_1.txt" : "la_ventrue_gauntlet_1" 
		"sound/schemes/la_ventrue_gauntlet_roof_1.txt" : "la_ventrue_gauntlet_roof_1" 
		"sound/schemes/lotusblossom.txt" : "lotusblossom" 
		"sound/schemes/netcafe.txt" : "netcafe" 
		"sound/schemes/netcafe_tape.txt" : "netcafe_tape" 
		"sound/schemes/oceanhouse_basement.txt" : "oceanhouse_basement" 
		"sound/schemes/oceanhouse_exterior.txt" : "oceanhouse_exterior" 
		"sound/schemes/oceanhouse_interior.txt" : "oceanhouse_interior" 
		"sound/schemes/oceanhouse_interior_floor3.txt" : "oceanhouse_interior_floor3" 
		"sound/schemes/old_abandoned_building.txt" : "old_abandoned_building" 
		"sound/schemes/parkinggarage.txt" : "parkinggarage" 
		"sound/schemes/quiet_outdoor.txt" : "quiet_outdoor" 
		"sound/schemes/ramen.txt" : "ramen" 
		"sound/schemes/sewers.txt" : "sewers" 
		"sound/schemes/sewers_2.txt" : "sewers_2" 
		"sound/schemes/sewers_base.txt" : "sewers_base" 
		"sound/schemes/sewers_no_music_base.txt" : "sewers_no_music_base" 
		"sound/schemes/sm_apartments_1.txt" : "sm_apartments_1" 
		"sound/schemes/sm_apartment_interior.txt" : "sm_apartment_interior" 
		"sound/schemes/sm_asylum_main_hall.txt" : "sm_asylum_main_hall" 
		"sound/schemes/sm_asylum_office.txt" : "sm_asylum_office" 
		"sound/schemes/sm_bailbonds.txt" : "sm_bailbonds" 
		"sound/schemes/sm_basement_1.txt" : "sm_basement_1" 
		"sound/schemes/sm_diner_1.txt" : "sm_diner_1" 
		"sound/schemes/sm_gallery_1.txt" : "sm_gallery_1" 
		"sound/schemes/sm_hub_parking_garage.txt" : "sm_hub_parking_garage" 
		"sound/schemes/sm_hub_streets.txt" : "sm_hub_streets" 
		"sound/schemes/sm_hub_tunnel_pier.txt" : "sm_hub_tunnel_pier" 
		"sound/schemes/sm_junkyard_1.txt" : "sm_junkyard_1" 
		"sound/schemes/sm_junkyard_1_int.txt" : "sm_junkyard_1_int" 
		"sound/schemes/sm_medical_1.txt" : "sm_medical_1" 
		"sound/schemes/sm_pier_1.txt" : "sm_pier_1" 
		"sound/schemes/sm_sewers_1.txt" : "sm_sewers_1" 
		"sound/schemes/sm_shreknet_1.txt" : "sm_shreknet_1" 
		"sound/schemes/sm_streets.txt" : "sm_streets" 
		"sound/schemes/sm_tatoo.txt" : "sm_tatoo" 
		"sound/schemes/sm_tatoo_basement.txt" : "sm_tatoo_basement" 
		"sound/schemes/sm_tripspawnshop.txt" : "sm_tripspawnshop" 
		"sound/schemes/sm_warehouse_interior.txt" : "sm_warehouse_interior" 
		"sound/schemes/sm_warehouse_trainstation.txt" : "sm_warehouse_trainstation" 
		"sound/schemes/soc_cave.txt" : "soc_cave" 
		"sound/schemes/soc_ext.txt" : "soc_ext" 
		"sound/schemes/soc_int.txt" : "soc_int" 
		"sound/schemes/sp_giovanni_1.txt" : "sp_giovanni_1" 
		"sound/schemes/sp_giovanni_2a.txt" : "sp_giovanni_2a" 
		"sound/schemes/sp_giovanni_4.txt" : "sp_giovanni_4" 
		"sound/schemes/sp_giovanni_5.txt" : "sp_giovanni_5" 
		"sound/schemes/sp_observatory_1.txt" : "sp_observatory_1" 
		"sound/schemes/sp_observatory_2.txt" : "sp_observatory_2" 
		"sound/schemes/sp_soc_1.txt" : "sp_soc_1" 
		"sound/schemes/sp_soc_2.txt" : "sp_soc_2" 
		"sound/schemes/sp_soc_3.txt" : "sp_soc_3" 
		"sound/schemes/sp_soc_4 cave in.txt" : "sp_soc_4 cave in" 
		"sound/schemes/sp_soc_4.txt" : "sp_soc_4" 
		"sound/schemes/sp_taxi.txt" : "sp_taxi" 
		"sound/schemes/sp_tutorial_city.txt" : "sp_tutorial_city" 
		"sound/schemes/sp_tutorial_sabbat_alley.txt" : "sp_tutorial_sabbat_alley" 
		"sound/schemes/sp_tutorial_sabbat_chop.txt" : "sp_tutorial_sabbat_chop" 
		"sound/schemes/sp_tutorial_sabbat_near.txt" : "sp_tutorial_sabbat_near" 
		"sound/schemes/sp_tutorial_underground.txt" : "sp_tutorial_underground" 
		"sound/schemes/temple_1.txt" : "temple_1" 
		"sound/schemes/temple_2.txt" : "temple_2" 
		"sound/schemes/temple_3.txt" : "temple_3" 
		"sound/schemes/test1.txt" : "test1" 
		"sound/schemes/test2.txt" : "test2" 
		"sound/schemes/tutorial.txt" : "tutorial" 
		"sound/schemes/vesuvius.txt" : "vesuvius" 
		"sound/schemes/zhaos_interior.txt" : "zhaos_interior" 
	]

	// Inputs
	input FadeIn(integer) : "Fades the sound up to full volume over a specified number of seconds, with a range from 0 to 100 seconds."
	input FadeOut(integer) : "Fades the sound to silence over a specified number of seconds, with a range from 0 to 100 seconds."
]






































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// BUTTONS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// prop_button [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_button
[
	model(studio) : "Button Model" : : "Button prop model. \nClick arrow button and scroll down if you want to use one of game's default models." =
	[
		"models/scenery/misc/Intercom/Intercom.mdl" : "models/scenery/misc/Intercom/Intercom.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_Up.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_Up.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_Dn.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_Dn.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_B.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_B.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_G.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_G.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_1.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_1.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_2.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_2.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_3.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_3.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_4.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_4.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_5.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_5.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_6.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_6.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_7.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_7.mdl"
		"models/scenery/structural/Elevator_Dial/ElevButton_PH.mdl" : "models/scenery/structural/Elevator_Dial/ElevButton_PH.mdl"
		"models/scenery/structural/SmSewer/SewerMap.mdl" : "models/scenery/structural/SmSewer/SewerMap.mdl"
	]

	sep_butmain(string) readonly: "------------------------------------"

	// main prefs
	locked(choices) : "Start Locked" : 0 : "Spawn in locked state." = [ 0: "No" 1: "Yes" ]

	use_icon(choices) : "Use Icon" : 31 : "An icon that indicates unlocked state of this entity." =
	[
		 0: "None"
		31: "Elevator button: Up"
		32: "Elevator button: Down"
		28: "Elevator button: B"
		29: "Elevator button: G"
		21: "Elevator button: 1"
		22: "Elevator button: 2"
		23: "Elevator button: 3"
		24: "Elevator button: 4"
		25: "Elevator button: 5"
		26: "Elevator button: 6"
		27: "Elevator button: 7"
		49: "Elevator button: PH"
		12: "Switch (wall)"
		64: "Switch (power)"
		 7: "TV screen"

		15: "Talk NPC (male)"
		14: "Talk NPC (female)"
		51: "Sewer Transition map"
	]
	locked_icon(choices) : "Locked Icon" : 30 : "An icon that indicates locked state of this entity." =
	[
		 0: "None"
		30: "Elevator button: Locked"
		 3: "Lock"
	]
	soundgroup(choices) : "Sound Group" : "elevator_button" : "The group of sounds relative to 'sound/usable/switches/<groupname>/<action>.wav' that specifies 'on/off' sounds." = 
	[
		"" : "None"
		"elevator_button" : "Elevator Button"
		"large_metal_lever" : "Large Metal Lever"
		"manhole_cover" : "Manhole Cover"
		"medium_metal_switch" : "Medium Metal Switch"
		"small_metal_switch" : "Small Metal Switch"
		"wall_light_switch" : "Wall Light Switch"
		"radio" : "Radio"
		"tv" : "TV"
	]

	sep_butsnds(string) readonly: "------------------------------------"

	// specific
	current_state(choices) : "Current State" : 0 : "Current button state [not tested]." =
	[
		0:0 1:1 2:2 3:3 4:4 5:5 6:6 7:7 8:8
	]
	max_states(choices) : "Maximum States" : 1 : "Maximum nubmer of button states [not tested]." =
	[
		0:0 1:1 2:2 3:3 4:4 5:5 6:6 7:7 8:8
	]
	
	// Inputs
	input Lock(void) : "Lock the button, preventing it from functioning."
	input Unlock(void) : "Unlock the button, allowing it to function."
	input Press(void) : "Activate the button as if it was pressed."
	input ToggleLock(void) : "Toggles button state between locked and unlocked."
	input SetState(integer) : "Sets button state."
	
	// Outputs
	output OnPressed(void) : "Fired when the button is pressed."
	output OnPressedLocked(void) : "Fired when button pressed but has locked state."
	output OnSetState1(void) : "Fired when button goes to selected state."
	output OnSetState2(void) : "Fired when button goes to selected state."
	output OnSetState3(void) : "Fired when button goes to selected state."
	output OnSetState4(void) : "Fired when button goes to selected state."
	output OnSetState5(void) : "Fired when button goes to selected state."
	output OnSetState6(void) : "Fired when button goes to selected state."
	output OnSetState7(void) : "Fired when button goes to selected state."
	output OnSetState8(void) : "Fired when button goes to selected state."
]

@PointClass
base (
	Studiomodel,
	Parentname,
	e_prop_button,
	RenderFields
)
//line (
//	255 255 255,
//	targetname,
//	parentname
//)
studioprop()
= prop_button :
	"[VTMB] A point entity that's used for a player-useable button. When used by the player, it moves to a pressed position or plays animation."
[
	// RF order fix
]





































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// AI Script Entities
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// aiscripted_sequence [VTMB-specific, scripted_sequence based]
//====================================================================================================================

@PointClass
base (
	BaseScripted
)
sphere(m_flRadius)
studio("models/editor/scriptedsequence.mdl")
= aiscripted_sequence :
	"[VTMB] Grabs an NPC and makes them play a specified set of animations. The NPC can be told to move to the scripted sequence position or can be told to play the script wherever they currently are."+
	"Multiple scripted sequences of the same name will frame-synchronize in the action animation once all the actors have moved to position."+
	"This allows tight interaction between actors (one actor grabbing another, hitting them, etc.) The flow is as follows:\n\n"+
	"1) Move to position using the specified movement animation. If 'Move to Position' is set to NONE, skip to step 2.\n"+
	"2) If forced to wait for another actor to move to position, play the pre-action idle animation, otherwise skip to step 3. If there is no pre-action idle specified, ACT_IDLE is used.\n"+
	"3) Fire the OnBeginSequence output.\n"+
	"4) Play the action animation. If no action animation is specified, skip to step 5.\n"+
	"5) Play the post-action idle animation. If none is specified, skip to step 6. If the 'Loop in Post Idle' spawnflag is set, keep playing the post-action idle until the script is cancelled. If no post-action idle animation is specified, ACT_IDLE is used.\n"+
	"6) Fire the OnEndSequence output.\n"+
	"7) If a next script to play is specified, hand the NPC to the next script and repeat this process for that script.\n\n"+
	"The MoveToPosition input runs steps 1 and 2, then waits while playing the pre-action idle animation until the BeginSequence input is received.\n\n"+
	"If the sequence has motion extraction in it, set the 'Don't Teleport NPC On End' spawnflag."
[
	m_iFinishSchedule(choices) : "Finish Schedule (?)" : 0 : "[VTMB] Unknown yet..." = [ 0:0 1:1 ]

	spawnflags(Flags) = 
	[
		4 : "Repeatable" : 0
		8 : "Leave Corpse" : 0
		16 : "Start on Spawn" : 0
		32: "No Interruptions" : 0
		64: "Override AI" : 0
		128: "Don't Teleport NPC On End" : 0
		256: "Loop in Post Idle" : 0
		512: "Priority Script" : 0
		4096: "Allow actor death" : 0
		8192: "Flag 8192 (unknown yet)" : 0
	]
]







































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// CAMERA Entities
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// CLASS: VCamKeyframe [VTMB-specific, KeyFrame-based]
//====================================================================================================================

@BaseClass
base (
	Targetname
)
= VCamKeyframe
[
	sep_ctrmain(string) readonly: "------------------------------------"

	// common
	NextKey(target_destination) : "Next KeyFrame" : : "Name of the next keyframe along this keyframe path."
	MoveSpeed(integer) : "Move Speed (units/s)" : 64
	MoveTime(float) : "Move Time (sec)" : 1 : "[VTMB] Unknown yet..."

	sep_ctradd1(string) readonly: "------------------------------------"

	Corner(choices) : "Move Corner" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "0 (unknown yet)"
		1 : "1 (unknown yet)"
	]
	FocalLength(float) : "Focal Length" : "28.2" : "[VTMB] Unknown yet. \nDefault value is '28.2'."
	PositionInterpolator(choices) : "Position Interpolator" : 1 =
	[
		0 : "Linear"
		1 : "Catmull-Rom Spline"
	]
	Pause(float) : "Pause Time (sec)" : 0 : "[VTMB] Unknown yet..."

	sep_ctrunk1(string) readonly: "------------------------------------"

	RateIn(float) : "In Rate (?)" : 1 : "[VTMB] Unknown yet..."
	RateOut(float) : "Out Rate (?)" : 1 : "[VTMB] Unknown yet..."
	Roll(float) : "Roll Speed": 0 : "Amount of roll in degrees per second [not tested]."
	TimeControl(choices) : "Time Modifier" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "Linear (?)"
		1 : "Accel (?)"
		2 : "Deaccel (?)"
	]
	
	// Outputs
	output OnReachedKeyframe(void) : "[VTMB] Fired when keyframe reached [not tested]."
	output OnLeavingKeyframe(void) : "[VTMB] Fired when keyframe leaving [not tested]."
]





//====================================================================================================================
// camera_keyframe [VTMB-specific]
//====================================================================================================================

@KeyFrameClass
base (
	VCamKeyframe
)
color(255 170 0)
studio("models/editor/axis_helper_thick.mdl")
keyframe()
= camera_keyframe :
	"[VTMB] Camera KeyFrame"
[
]





//====================================================================================================================
// camera_track [VTMB-specific]
//====================================================================================================================

@KeyFrameClass
base (
	VCamKeyframe
)
size(-3 -3 -3, 3 3 3)
color(255 170 0)
studio("models/editor/axis_helper_thick.mdl")
= camera_track :
	"[VTMB] An entity used to build paths for camera to follow [-?]."
[
	sep_ctrspec(string) readonly: "------------------------------------"

	FromPlayerTime(string) : "Moving time from player": 0 : "Unknown yet..."
	ToPlayerTime(string) : "Moving time to player": 0 : "Unknown yet..."
	HoldAtEnd(choices) : "Hold at moving end": 1 : "Unknown yet..." = [ 0: "No" 1: "Yes" ]

	// Inputs
	input PlayAsCameraTarget(void) : "[VTMB: untested connection]"
	input PlayAsCameraPosition(void) : "[VTMB: untested connection]"
	input RestoreCameraToPlayerControl(void) : "[VTMB] Restores camera state to player-controllable."

	// Outputs
	output OnAnimationCompleted(void) : "[VTMB] Fired when camera animation complete."
]





//===================================================================================================================
// camera_cinematic [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname
)
studioprop("models/editor/camera.mdl")
= camera_cinematic :
	"[VTMB] A cinematic camera entity that controls the player's view. While it's active, the player will see out of the camera."
[
	sep_cammain(string) readonly: "------------------------------------"

	shotname(vcamerashot) : "Camera Shot Name" : "vdata/CameraShots/NPCFollow.txt" : "The name of the CameraShot preset to use. Corresponds to an entry in the vdata/camerashots/<name>.txt file. \nClick arrow button and scroll down if you want to use one of default in-game definitions." =
	[
	// CameraShotsList:
		"vdata/CameraShots/Center.txt" : "Center"
		"vdata/CameraShots/DialogDefault.txt" : "DialogDefault"
		"vdata/CameraShots/DialogMediumShot.txt" : "DialogMediumShot"
		"vdata/CameraShots/FuncMonitor.txt" : "FuncMonitor"
		"vdata/CameraShots/Gary_Moves.txt" : "Gary_Moves"
		"vdata/CameraShots/HackCam.txt" : "HackCam"
		"vdata/CameraShots/LongApproachCloseup.txt" : "LongApproachCloseup"
		"vdata/CameraShots/LookAtTarget_Snap.txt" : "LookAtTarget_Snap"
		"vdata/CameraShots/LookAtTargetHead_Snap.txt" : "LookAtTargetHead_Snap"
		"vdata/CameraShots/LowCenter.txt" : "LowCenter"
		"vdata/CameraShots/NPCFollow.txt" : "NPCFollow"
		"vdata/CameraShots/NPCFollowCut.txt" : "NPCFollowCut"
		"vdata/CameraShots/NPCFollowMove.txt" : "NPCFollowMove"
	]
	point_player(choices) : "Point to Player" : 0 : "Unknown yet..." = [ 0: "No" 1: "Yes" ]

	sep_camadds(string) readonly: "------------------------------------"

	startent(target_destination) : "Start Entity" : : "Entity that camera starts moving from."
	endent(target_destination) : "End Entity" : : "Entity that camera ends moving to."
	target1(target_destination) : "Target Entity 1" : : "Camera target entity 1 [not tested]."
	target2(target_destination) : "Target Entity 2" : : "Camera target entity 2 [not tested]."

	sep_camanim(string) readonly: "------------------------------------"

	animname(string) : "Animation Name" : : "Unknown yet. Supported by source code but never used in game."
	
	spawnflags(flags) =
	[
		1 : "Flag 1 (unknown yet)" : 0
		2 : "Flag 2 (unknown yet)" : 0
		4 : "Flag 4 (unknown yet)" : 0
	]

	// Inputs
	input StartShot(void) : "Starts this camera shot."
	input EndShot(void) : "Ends this camera shot."
	
// found in source code, usage unknown
	input SetFOV(integer) : "[VTMB: unknown input] Supported by source code but never used in game."
	input StartCamera(string) : "[VTMB: unknown input] Supported by source code but never used in game."
	input EndCamera(string) : "[VTMB: unknown input] Supported by source code but never used in game."
	// outputs
	output OnCameraBegin(void) : "[VTMB: unknown output] Supported by source code but never used in game."
	output OnCameraComplete(void) : "[VTMB: unknown output] Supported by source code but never used in game."
]





//====================================================================================================================
// security_camera [VTMB-specific]
//====================================================================================================================

@BaseClass
= e_security_camera
[
	model(studio) : "Camera Model" : "models/scenery/furniture/securitycam/securitycam.mdl" : "Camera prop model." =
	[
		"models/scenery/misc/securitycam/cam.mdl" : "models/scenery/misc/securitycam/cam.mdl"
		"models/scenery/furniture/securitycam/securitycam.mdl" : "models/scenery/furniture/securitycam/securitycam.mdl"
	]
	sep_scamview(string) readonly: "------------------------------------"

	fieldofview(integer) : "Field Of View (degs)" : 40 : "Camera's FOV, in degrees [not tested]."
	radius(choices) : "Max. Radius of View" : 192 : "Maximum radius camera may see around." =
	[
		 64 : 64
		 96 : 96
		128 : 128
		160 : 160
		192 : 192
		224 : 224
		256 : 256
		384 : 384
		512 : 512
		768 : 768
	]
	blindspot(integer) : "Blind Spot (units)" : 64 : "Zone, which can not get in camera [not tested]."

	sep_scamtime(string) readonly: "------------------------------------"

	turntime(float) : "Turn Time (sec)" : "5.0" : "The time of one complete camera's turn."
	zoom_time(float) : "Zoom Time (sec)" : "1.5" : "When the camera sees target, this time will be taken for focusing on it."
	pausetime(float) : "Rest Time (sec)" : "2.0" : "Pause time between camera rotations."
	rotdegrees(integer) : "Rotate Degrees" : 90 : "Max. degree the camera may rotate to."

	sep_scamsnds(string) readonly: "------------------------------------"

	alarmsnd(sound)	: "Alarm Sound" : "environmental/electronic/security_camera_alarm.wav" : "Sound played when camera goes into alarm state. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"environmental/electronic/security_camera_alarm.wav" : "Environmental/Electronic/Security_Camera_Alarm.wav"
		"environmental/machines/security_alarm.wav" : "Environmental/Machines/Security_Alarm.wav"
	]
	pansnd(sound) : "Pan Sound" : "environmental/electronic/security_camera_pan.wav" : "Plays when camera pans. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"environmental/electronic/security_camera_pan.wav" : "Environmental/Electronic/Security_Camera_Pan.wav"
	]
	zoominsnd(sound) : "Zoom-In Sound" : "environmental/electronic/security_camera_zoom_in.wav" : "Sound played when camera zooms in. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"environmental/electronic/security_camera_zoom_in.wav" : "Environmental/Electronic/Security_Camera_Zoom_In.wav"
	]
	zoomoutsnd(sound) : "Zoom-Out Sound" : "environmental/electronic/security_camera_zoom_out.wav" : "Sound played when camera zooms out. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"environmental/electronic/security_camera_zoom_out.wav" : "Environmental/Electronic/Security_Camera_Zoom_Out.wav"
	]

	sep_scamphys(string) readonly: "------------------------------------"

	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
	health(float) : "Strength" : "1.0" : "Camera's health points that will spent before it breaks. \n'0' = not breakable."

	spawnflags(flags) =
	[
		1 : "Flag 1 (unknown yet)" : 0
	]

	// Inputs
	input Enable(void) : "Enable this entity."
	input Disable(void) : "Disable this entity."
	input Toggle(void) : "Toggles state of entity between ON and OFF."

//	input physdamagescale(float) : "Sets the value that scales damage energy when this character is hit by a physics object. NOTE: 0 means this feature is disabled for backwards compatibility."

	// Outputs
	output OnPanToEnd(void) : "Fired when camera pans to start [not tested]."
	output OnPanToStart(void) : "Fired when camera pans to end [not tested]."
	output OnPlayerDiscovered(void) : "Fired when player saw it."
]

@PointClass
base (
	Studiomodel,
	Parentname,
	o_VBreakable,
	e_security_camera,
	RenderFields
)
//line (
//	255 255 255,
//	targetname,
//	parentname
//)
sphere(radius)
studioprop()
= security_camera :
	"[VTMB] Security Camera prop that send alarm when player is in its Field of View."
[
	// RF order fix
]





//====================================================================================================================
// point_camera [VTMB-specific]
//====================================================================================================================

@PointClass
base (
	Targetname,
	Parentname
)
line (
	255 255 255,
	targetname,
	parentname
)
halfgridsnap
studioprop("models/editor/camera.mdl")
= point_camera : 
	"[VTMB] Camera point entity that translates captured area image to other objects like monitors."
[
	sep_pcmain(string) readonly: "------------------------------------"

	FOV(integer) : "Field of View (degs)" : 90 : "Camera's field of view."
	look_dest(vecline) : "Look Destination (X Y Z)" :  : "Camera's look destination (world's X/Y/Z-origin)."

	// inputs:
	input FollowEntity(void) : "[VTMB] Set entity that camera will follow to [not tested]."
]





//===================================================================================================================
// env_floating_camera [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	TargetnameRot
)
studioprop("models/editor/camera.mdl")
= env_floating_camera :
	"[VTMB] Camera entity that does floating moving according given values."
[
	sep_fcmain(string) readonly: "------------------------------------"

	amplitude(float) : "Amplitude (inches)" : 3 : "Set floating amplitude, in inches."
	duration(float) : "Duration (seconds)" : 2 : "Set floating duration, in seconds."
	frequency(float) : "Frequency (per sec)" : 3 : "Set number of floatings per one second."

	// intputs
	input StartWaves(void) : "Start camera's wave floating."
	input StopWaves(void) : "Stop camera's wave floating."
]




























	
	
	
	








//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// PARTICLE Effects
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


@BaseClass
base (
	TargetnameRot
)
= BaseParticleParams
[
	sep_bpmain(string) readonly: "------------------------------------"

	active(choices) : "Start Active" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]
	particle_definition(vparticle) : "Particle Script" : "Fire1_emitter" : "Particle effect. \nThis is particle definition script related to 'particles/<name>.txt' file. \nYou may also define custom scripts." =
	[
	// ParticleList:
		"Airplane_emitter" : "Airplane_emitter"
		"Andrei_Summon-emitter" : "Andrei_Summon-emitter"
		"BarrelFireChargeEmitter" : "BarrelFireChargeEmitter"
		"BarrelFireEmitter" : "BarrelFireEmitter"
		"Blood_Entrails_emitter" : "Blood_Entrails_emitter"
		"Blood_Guardian_Death_emitter" : "Blood_Guardian_Death_emitter"
		"Blood_Guardian_Summon_emitter" : "Blood_Guardian_Summon_emitter"
		"BloodTrickle_emitter" : "BloodTrickle_emitter"
		"BlowSmoke_emitter" : "BlowSmoke_emitter"
		"Bradbury_WagonWheel_emitter" : "Bradbury_WagonWheel_emitter"
		"C_Theater_Collum_emitter" : "C_Theater_Collum_emitter"
		"CarLight_emmiter" : "CarLight_emmiter"
		"Chang_Teleport_Out_emitter" : "Chang_Teleport_Out_emitter"
		"Chantry_Teleport_emitter" : "Chantry_Teleport_emitter"
		"Cigar_emitter" : "Cigar_emitter"
		"Cigar_Smoke1" : "Cigar_Smoke1"
		"CigGlow_CigInhale_emitter" : "CigGlow_CigInhale_emitter"
		"CigGlow_CigInhale_glow" : "CigGlow_CigInhale_glow"
		"CigGlow_CigInhale_halo" : "CigGlow_CigInhale_halo"
		"CigGlow_CigInhale_smoke1" : "CigGlow_CigInhale_smoke1"
		"CigGlow_CigInhale_smoke2" : "CigGlow_CigInhale_smoke2"
		"CigGlow_CigInhale_spark" : "CigGlow_CigInhale_spark"
		"CigGlow_CigInhale_spark2" : "CigGlow_CigInhale_spark2"
		"CigGlow_GlowStart_emitter" : "CigGlow_GlowStart_emitter"
		"CigGlow_SmokeBlow_emitter" : "CigGlow_SmokeBlow_emitter"
		"CigGlow_Spark_emitter" : "CigGlow_Spark_emitter"
		"CigSmoke_CigInhale_emitter" : "CigSmoke_CigInhale_emitter"
		"CityLights_emitter" : "CityLights_emitter"
		"CityLights_emitter2" : "CityLights_emitter2"
		"D_Animalisim_BodySmoke_emitter" : "D_Animalisim_BodySmoke_emitter"
		"D_Animalism_Pestilence_emitter" : "D_Animalism_Pestilence_emitter"
		"D_Animalism_Wolf_Into_emitter" : "D_Animalism_Wolf_Into_emitter"
		"D_Animalism_Wolf_Into_emitter2" : "D_Animalism_Wolf_Into_emitter2"
		"D_Dominate_Possession_emitter" : "D_Dominate_Possession_emitter"
		"D_ObfuscateBroke_emitter" : "D_ObfuscateBroke_emitter"
		"D_ObfuscateIn_emitter" : "D_ObfuscateIn_emitter"
		"D_ObfuscateOut_emitter" : "D_ObfuscateOut_emitter"
		"D_Potence_1BP_emitter" : "D_Potence_1BP_emitter"
		"D_Potence_1BP_emitter_FlashStart" : "D_Potence_1BP_emitter_FlashStart"
		"D_Potence_1BP_emitter_Hand" : "D_Potence_1BP_emitter_Hand"
		"D_Potence_DeathBlow2_emitter" : "D_Potence_DeathBlow2_emitter"
		"Demo_Cloud_emitter" : "Demo_Cloud_emitter"
		"Demo_Leaf_Rain_emitter" : "Demo_Leaf_Rain_emitter"
		"Demo_Leaf_Rain_emitter2" : "Demo_Leaf_Rain_emitter2"
		"Demo_River_Mist_emitter" : "Demo_River_Mist_emitter"
		"Detonator_Light_emitter" : "Detonator_Light_emitter"
		"Drip_emitter" : "Drip_emitter"
		"Embrace_Bleeding_Neck" : "Embrace_Bleeding_Neck"
		"Embrace_Bleeding_Neck2" : "Embrace_Bleeding_Neck2"
		"Embrace_Bleeding_Neck2_Female" : "Embrace_Bleeding_Neck2_Female"
		"Embrace_Bleeding_Neck_Female" : "Embrace_Bleeding_Neck_Female"
		"Epilogue_Consuming_Darkness" : "Epilogue_Consuming_Darkness"
		"Epilogue_Ventrue_Fire_emitter" : "Epilogue_Ventrue_Fire_emitter"
		"Ethereal_Flame_emitter_01" : "Ethereal_Flame_emitter_01"
		"Ethereal_Flame_emitter_01-burst" : "Ethereal_Flame_emitter_01-burst"
		"Ethereal_Flame_emitter_02" : "Ethereal_Flame_emitter_02"
		"Ethereal_Flame_emitter_04" : "Ethereal_Flame_emitter_04"
		"Ethereal_Flame_emitter_04-tornado" : "Ethereal_Flame_emitter_04-tornado"
		"Ethereal_Fling_emitter" : "Ethereal_Fling_emitter"
		"Explosion_TowerCrush_emitter" : "Explosion_TowerCrush_emitter"
		"Falling_Dust_emitter" : "Falling_Dust_emitter"
		"Fire1_BlowOut_emitter" : "Fire1_BlowOut_emitter"
		"Fire1_BlowOut_emitter2" : "Fire1_BlowOut_emitter2"
		"Fire1_BlowOut_emitter3" : "Fire1_BlowOut_emitter3"
		"Fire1_BlowOut_emitter4" : "Fire1_BlowOut_emitter4"
		"Fire1_emitter" : "Fire1_emitter"
		"Fire2_emitter" : "Fire2_emitter"
		"Fire3_emitter" : "Fire3_emitter"
		"Fire_Smokey_Air_emitter" : "Fire_Smokey_Air_emitter"
		"FirePlace_emitter" : "FirePlace_emitter"
		"FirePlace_emitter2" : "FirePlace_emitter2"
		"Flame_Gout_emitter" : "Flame_Gout_emitter"
		"Fly_emitter" : "Fly_emitter"
		"FuFlame_Stationary" : "FuFlame_Stationary"
		"FuFlame_Stationary_Mirror" : "FuFlame_Stationary_Mirror"
		"Gargoyle_Land-emitter" : "Gargoyle_Land-emitter"
		"Gasoline_Fire_emitter" : "Gasoline_Fire_emitter"
		"Gasoline_Fire_Start_emitter" : "Gasoline_Fire_Start_emitter"
		"Gasoline_Fire_Trail_emitter" : "Gasoline_Fire_Trail_emitter"
		"Gasoline_Fire_Wall-of-Fire-Emitter" : "Gasoline_Fire_Wall-of-Fire-Emitter"
		"GasRoom_emitter" : "GasRoom_emitter"
		"GasRoom_emitter2" : "GasRoom_emitter2"
		"GlowyWierd_emitter" : "GlowyWierd_emitter"
		"Impact_Flesh_emitter" : "Impact_Flesh_emitter"
		"Impact_FleshBase_emitter" : "Impact_FleshBase_emitter"
		"Impact_Metal_emitter" : "Impact_Metal_emitter"
		"ImpactFX_Sparks_blue" : "ImpactFX_Sparks_blue"
		"ImpactFX_SparkSpray" : "ImpactFX_SparkSpray"
		"Incense_emitter" : "Incense_emitter"
		"LA_CrackHouse_1_Bishop_Vick_1_emitter" : "LA_CrackHouse_1_Bishop_Vick_1_emitter"
		"Molotov_Emitter" : "Molotov_Emitter"
		"Moth_emitter" : "Moth_emitter"
		"MuzzleFlash_emitter" : "MuzzleFlash_emitter"
		"N_DivineSight_emitter" : "N_DivineSight_emitter"
		"Painting_Healing_emitter" : "Painting_Healing_emitter"
		"Pilot_Flame_emitter" : "Pilot_Flame_emitter"
		"Pilot_Flame_emitter_mirror" : "Pilot_Flame_emitter_mirror"
		"Prince_Decapitation_emitter" : "Prince_Decapitation_emitter"
		"Prince_DrippingBlood_emitter" : "Prince_DrippingBlood_emitter"
		"Prince_Slashed_emitter" : "Prince_Slashed_emitter"
		"Rain_Follow_emitter" : "Rain_Follow_emitter"
		"Rain_Follow2_emitter" : "Rain_Follow2_emitter"
		"Smoke1" : "Smoke1"
		"Smoke2" : "Smoke2"
		"Snuff_BloodExplosion_emitter" : "Snuff_BloodExplosion_emitter"
		"Sp_LoneWolf_Debris_emitter" : "Sp_LoneWolf_Debris_emitter"
		"Sp_LoneWolf_Smoke_emitter" : "Sp_LoneWolf_Smoke_emitter"
		"Sp_LoneWolf_Smokey_Air_emitter" : "Sp_LoneWolf_Smokey_Air_emitter"
		"Sp_NinesIntro_HeadBat_emitter" : "Sp_NinesIntro_HeadBat_emitter"
		"Sp_NinesIntro_HeadBlast_emitter" : "Sp_NinesIntro_HeadBlast_emitter"
		"Sp_NinesIntro_TummyBlast_emitter" : "Sp_NinesIntro_TummyBlast_emitter"
		"Sp_Observatory_2_Ash_emitter" : "Sp_Observatory_2_Ash_emitter"
		"Sp_Observatory_2_Tree_Fire2_emitter" : "Sp_Observatory_2_Tree_Fire2_emitter"
		"Sp_Observatory_2_Tree_FireSky_emitter" : "Sp_Observatory_2_Tree_FireSky_emitter"
		"Sp_VentrueTower_Explosion_emitter" : "Sp_VentrueTower_Explosion_emitter"
		"SpaMist_emitter" : "SpaMist_emitter"
		"Sparks_Warrens_Computers_emitter" : "Sparks_Warrens_Computers_emitter"
		"Sprinkler_emitter" : "Sprinkler_emitter"
		"StaryCeiling_emitter" : "StaryCeiling_emitter"
		"StaryNight_emitter" : "StaryNight_emitter"
		"StaryNight_emitter_large" : "StaryNight_emitter_large"
		"SteamRelease_Constant_emitter" : "SteamRelease_Constant_emitter"
		"SteamRelease_Timer" : "SteamRelease_Timer"
		"StoveFireEmitter" : "StoveFireEmitter"
		"Temple_Teleport_emitter" : "Temple_Teleport_emitter"
		"Torch_emitter" : "Torch_emitter"
		"Tourette_Shoots_Herself_emitter" : "Tourette_Shoots_Herself_emitter"
		"Trem_Fireshield_emitter" : "Trem_Fireshield_emitter"
		"Trem_Fireshield_Hit_emitter" : "Trem_Fireshield_Hit_emitter"
		"Trem_Firewall_emitter" : "Trem_Firewall_emitter"
		"TZ_BloodTrickle_emitter" : "TZ_BloodTrickle_emitter"
		"TZ_Moth_emitter" : "TZ_Moth_emitter"
		"Vesuvius" : "Vesuvius"
		"Warehoue_Explosion_Hud_emitter" : "Warehoue_Explosion_Hud_emitter"
		"Warehs_Expln_Long_Wndw2_emitter" : "Warehs_Expln_Long_Wndw2_emitter"
		"Warehs_Expln_Long_Wndw_emitter" : "Warehs_Expln_Long_Wndw_emitter"
		"Warehs_Expln_Long_Wndw_NS_emitter" : "Warehs_Expln_Long_Wndw_NS_emitter"
		"Warehs_Expln_Sm_Wndw_emitter" : "Warehs_Expln_Sm_Wndw_emitter"
		"Warehs_Expln_Top_Wndw_WS_emitter" : "Warehs_Expln_Top_Wndw_WS_emitter"
		"Warrens_Tube_End_emitter" : "Warrens_Tube_End_emitter"
		"Warrens_Tube_Water_emitter" : "Warrens_Tube_Water_emitter"
		"WaterDrops" : "WaterDrops"
		"WaterDrops_Timer" : "WaterDrops_Timer"
		"WaterFallMist_emitter" : "WaterFallMist_emitter"
		"WaterFallTrickle_emitter" : "WaterFallTrickle_emitter"
		"WaterMist_emitter" : "WaterMist_emitter"
	]
	ramp_scale(float) : "Scale (Density)" : "1.0" : "Multiplier for selected particle effect density. \n'1' is default (single density), '2' - effect is twice denser, '0.5' - effect is twice rarefied, etc."

	// inputs
	input TurnOn(void): "Turns on the particle effect."
	input TurnOff(void): "Turns off the particle effect."
	input SetRateScale(float): "Sets particle rate scale."
]




//===================================================================================================================
// env_particle [VTMB-specific, info_particle_system prototype]
//===================================================================================================================

@PointClass
base (
	TargetnameRot,
	Parentname,
	BaseParticleParams
)
line (
	255 255 255,
	targetname,
	parentname
)
studio("models/editor/cone_helper.mdl")
sphere(spawnbounds)
= env_particle :
	"[VTMB] An entity that spawns the particle, defined in particle scripts."
[
	sep_epmain(string) readonly: "------------------------------------"

	ramp_time(float) : "Ramp Time" : : "Unknown yet. \nFound values are 0-10."

	attach_type(choices) : "Attaching Type" : 0 : "Particle attaching type. \n0 is default (point), 11 is world-wide. Others not known exactly." =
	[
		-1 : "Not Attached"
		 0 : "0 (Default, Point)"
		 1 : "1 (Unknown yet)"
		 2 : "2 (Unknown yet)"
		 5 : "5 (Unknown yet)"
		 6 : "6 (Unknown yet)"
		 9 : "9 (Unknown yet)"
		10 : "10 (Unknown yet)"
		11 : "11 (World/Player)"
		14 : "14 (HUD?)"
		17 : "17 (Unknown yet)"
	]
	bone(choices) : "Attaching Bone" : : "Model's bone the particle attached to. Parent entity must be specified. \nEmpty value means use default entity's origin." =
	[
		"" : "<none>"
		"Bip01 Head" : "Bip01 Head"
		"Bip01 L Hand" : "Bip01 L Hand"
		"Bip01 R Hand" : "Bip01 R Hand"
		"Bip01 Neck" : "Bip01 Neck"
		"Bip01 Pelvis" : "Bip01 Pelvis"
		"Bip01 Spine" : "Bip01 Spine"
		"Bip01 Spine01" : "Bip01 Spine01"
		"Bip01 Spine02" : "Bip01 Spine02"
		"Bip01 Spine03" : "Bip01 Spine03"
		"fireorigin" : "FireOrigin"
		"flash" : "Flash"
		"particle" : "Particle"
	]
	attach_point(string) : "Attaching Point [?]" :  : "Unknown parameter. \nNot found on game maps but found in game code."
	spawnbounds(integer) : "Particle Bounds" : 512 : "Max. radius of particle effect that cast around its origin. \nFound values are 128-512 [not tested]."

	// inputs
	input SetAttachType(void): "Sets attaching type."
	input SetRampTime(void): "Sets ramp time [not tested]."
	input AttachToPlayerViewmodel(integer): "[VTMB: untested connection]."
]




//===================================================================================================================
// env_particle_hud [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname
)
iconsprite("editor/env_particles.vmt")
= env_particle_hud :
	"[VTMB] An entity that spawns particle in player's HUD [not tested properly]."
[
	sep_pthmain(string) readonly: "------------------------------------"

	active(choices) : "Start Active" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]
	particle_definition(vparticle) : "Particle Script" : "particles/Ethereal_HUD_boom-emitter.txt" : "Particle effect. \nThis is particle definition script related to 'particles/<name>.txt' file. \nYou may also define custom scripts." =
	[
	// ParticleList:
		"particles/Ethereal_HUD_Boom-emitter.txt" : "Ethereal_HUD_Boom-emitter"
		"particles/Warehoue_Explosion_Hud_emitter.txt" : "Warehoue_Explosion_HUD_emitter"
	]
	attach_type(choices) : "Attach Type" : 14 : "Particle attaching type. \n0 is point, 11 is world, 14 used for HUD. Others not known exactly." =
	[
		-1 : "Not Attached"
		 0 : "0 (Point)"
		 1 : "1 (Unknown yet)"
		 2 : "2 (Unknown yet)"
		 5 : "5 (Unknown yet)"
		 6 : "6 (Unknown yet)"
		 9 : "9 (Unknown yet)"
		10 : "10 (Unknown yet)"
		11 : "11 (World/Player)"
		14 : "14 (Default for env_particle_hud)"
		17 : "17 (Unknown yet)"
	]
	sep_pthadd(string) readonly: "------------------------------------"

	hud_draw_third(choices) : "Draw Third HUD Elements" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
]




//===================================================================================================================
// func_particle [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	BaseParticleParams
)
= func_particle :
	"[VTMB] A brush entity that creates particle effect in its volume."
[
	particle_definition(vparticle) : "Particle Script" : "Rain_Box_emitter" : "Particle effect. \nThis is particle definition script related to 'particles/<name>.txt' file. \nYou may also define custom scripts." =
	[
	// ParticleList:
		"Bradbury_Blood_rain" : "Bradbury_Blood_rain"
		"FireBrush_Large_Floor_emitter" : "FireBrush_Large_Floor_emitter"
		"FireBrush_Large_Wall_emitter" : "FireBrush_Large_Wall_emitter"
		"FireBrush_Medium_Floor_emitter" : "FireBrush_Medium_Floor_emitter"
		"FireBrush_Medium_Wall_emitter" : "FireBrush_Medium_Wall_emitter"
		"FireBrush_Small_Floor_emitter" : "FireBrush_Small_Floor_emitter"
		"FireBrush_Small_Wall_emitter" : "FireBrush_Small_Wall_emitter"
		"Rain_Box_emitter" : "Rain_Box_emitter"
		"Rain_Box_NoPrecip_emitter" : "Rain_Box_NoPrecip_emitter"
		"Rain_Box__NoPrcipEmitter" : "Rain_Box__NoPrcipEmitter"
	]
]




//===================================================================================================================
// params_particle [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname
)
iconsprite("editor/env_particles.vmt")
size(-2 -2 -2, 2 2 2)
= params_particle :
	"[VTMB] A point entity that defines particle effect parameters applying to various objects [not tested]."
[
	sep_ppmain(string) readonly: "------------------------------------"

	particle_definition(vparticle) : "Particle Script" : "particles/D_ObfuscateIn_Emitter.txt" : "Particle effect. \nThis is particle definition script related to 'particles/*.txt' file. \nYou may also define custom scripts." =
	[
	// ParticleList:
		"particles/D_ObfuscateIn_Emitter.txt" : "D_ObfuscateIn_Emitter"
		"particles/Dialog_Domination_emitter.txt" : "Dialog_Domination_emitter"
		"particles/Dialog_Presence_emitter.txt" : "Dialog_Presence_emitter"
		"particles/Lasombra_Teleport_In.txt" : "Lasombra_Teleport_In"
		"particles/Lasombra_Teleport_In-body.txt" : "Lasombra_Teleport_In-body"
		"particles/Lasombra_Teleport_Out.txt" : "Lasombra_Teleport_Out"
		"particles/Lasombra_Teleport_Out-body.txt" : "Lasombra_Teleport_Out-body"
	]
	attach_type(choices) : "Attaching Type" : 2 : "Particle attaching type. \n0 is default (point), 11 is world-wide. Others not known exactly." =
	[
		-1 : "Not Attached"
		 0 : "0 (Point)"
		 1 : "1 (Unknown yet)"
		 2 : "2 (Default for params_particle)"
		 5 : "5 (Unknown yet)"
		 6 : "6 (Unknown yet)"
		 9 : "9 (Unknown yet)"
		10 : "10 (Unknown yet)"
		11 : "11 (World/Player)"
		14 : "14 (HUD?)"
		17 : "17 (Unknown yet)"
	]
]





//===================================================================================================================
// point_explosion [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	TargetnameRot,
	Parentname
)
line (
	255 255 255,
	targetname,
	parentname
)
iconsprite("editor/env_physexplosion.vmt")
= point_explosion :
	"[VTMB] An entity that creates an explosion with defined parameters."
[
	sep_ptemain(string) readonly: "------------------------------------"

	explosion_params(target_destination) : "Explosion Parameters Entity" : : "A link to the 'params_explosion' entity that defines common explosion parameters."

	spawnflags(flags) =
	[
		1 : "Flag 1 (unknown yet)" : 0
	]

	// Inputs
	input Explode(void) : "Starts explosion."
]





//===================================================================================================================
// params_explosion [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	TargetnameRot
)
size(-2 -2 -2, 2 2 2)
color(160 32 32)
sphere(dmg_radius)
sphere(shk_radius)
iconsprite("editor/env_physexplosion.vmt")
= params_explosion :
	"[VTMB] An entity that defines explosion parameters that shared with 'point_explosion'."
[
	sep_pemain(string) readonly: "------------------------------------"

	dmg_amount(integer) : "Damage Amount" : 20 : "Amount of health points that takes away when explosion commits."
	dmg_radius(integer) : "Damage Radius" : 500 : "Maximum radius in which the damage takes."

	particle(vparticle) : "Particle Effect" : "particles/Explosion2_emitter.txt" : "Explosion effect. \nThis is particle definition script related to 'particles/<name>.txt' file. \nYou can also define custom scripts." =
	[
	// ParticleList:
		"particles/BarrelFireExplosionEmitter.txt" : "particles/BarrelFireExplosionEmitter.txt"
		"particles/C_Theater_Collum_Emitter.txt" : "particles/C_Theater_Collum_emitter.txt"
		"particles/C_Theater_Collum_Emitter_move_up" : "particles/C_Theater_Collum_emitter_move_up"
		"particles/Cold_Explosion_emitter.txt" : "particles/Cold_Explosion_emitter.txt"
		"particles/D_Thaum_Bld_Cauldron_Explode_Tgt_Emitter.txt" : "particles/D_Thaum_Bld_Cauldron_Explode_Tgt_emitter.txt"
		"particles/Electrical_Sparks_Emitter.txt" : "particles/Electrical_Sparks_emitter.txt"
		"particles/Explosion1_emitter.txt" : "particles/Explosion1_emitter.txt"
		"particles/Explosion2_emitter.txt" : "particles/Explosion2_emitter.txt"
		"particles/Explosion_TowerCrush_emitter.txt" : "particles/Explosion_TowerCrush_emitter.txt"
		"particles/Impact_Dirt_Emitter.txt" : "particles/Impact_Dirt_emitter.txt"
		"particles/Impact_Glass_Emitter.txt" : "particles/Impact_Glass_emitter.txt"
		"particles/Impact_Metal_Emitter.txt" : "particles/Impact_Metal_emitter.txt"
		"particles/la_malkavian2_spark_emitter.tx" : "particles/LA_Malkavian2_Spark_emitter.txt"
		"particles/LightBulb_Pop_emitter.txt" : "particles/LightBulb_Pop_emitter.txt"
		"particles/Sparks_Warrens_Computers_emitter.txt" : "particles/Sparks_Warrens_Computers_emitter.txt"
		"particles/temple_spike_emitter.txt" : "particles/Temple_Spike_emitter.txt"
		"particles/wall_break_emitter.txt" : "particles/wall_break_emitter.txt"
		"particles/Zombie_Summon_Emitter.txt" : "particles/Zombie_Summon_emitter.txt"
	]

	sep_pedmg(string) readonly: "------------------------------------"

	damage_breakables(choices) : "Damage Breakables" : 1 : "If set 'Yes', explosion will be able to take damage to breakable objects." = [ 0 : "No" 1 : "Yes" ]
	damage_npcs(choices) : "Damage NPCs" : 1 : "If set 'Yes', explosion will be able to take damage to NPCs." = [ 0 : "No" 1 : "Yes" ]
	damage_players(choices) : "Damage Player" : 1 : "If set 'Yes', explosion will be able to take damage to player." = [ 0 : "No" 1 : "Yes" ]

	sep_peshk(string) readonly: "------------------------------------"

	shk_amp(integer) : "Shake Amplitude" : 4 : "[VTMB] Unknown yet..."
	shk_dur(integer) : "Shake Duration" : 2 : "[VTMB] Unknown yet..."
	shk_freq(integer) : "Shake Frequency" : 2 : "[VTMB] Unknown yet..."
	shk_inair(choices) : "Shake In-Air" : 1 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]
	shk_radius(integer) : "Shake Radius" : 1024 : "[VTMB] Unknown yet..."

	sep_pesnd(string) readonly: "------------------------------------"

	snd_name(sound) : "Explosion Sound File" : "Weapons/Ranged/Detonation.wav" : "The sound that is played during the explosion. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"Area/Downtown/Bradbury/barrel_explosion.wav" : "Area/Downtown/Bradbury/Barrel_Explosion.wav"
		"Area/Downtown/Bradbury/wall_break2.wav" : "Area/Downtown/Bradbury/Wall_Break2.wav"
		"Area/Downtown/Ventrue_Tower/Manbat_Cab.wav" : "Area/Downtown/Ventrue_Tower/Manbat_Cab.wav"
		"Area/Hollywood/Asian_Theater/Smash_Pillars_1.wav" : "Area/Hollywood/Asian_Theater/Smash_Pillars_1.wav"
		"Area/Santa_Monica/Ocean_House/Floor_Crash.wav" : "Area/Santa_Monica/Ocean_House/Floor_Crash.wav"
		"Area/Special/Tutorial/ExplosionSabbat2.wav" : "Area/Special/Tutorial/ExplosionSabbat2.wav"
		"Disciplines/Thaumaturgy/cauldron_hit.wav" : "Disciplines/Thaumaturgy/Cauldron_Hit.wav"
		"Environmental/City/glass breaks.wav" : "Environmental/City/Glass Breaks.wav"
		"Environmental/Interior/LightBulb_Pop.wav" : "Environmental/Interior/LightBulb_Pop.wav"
		"Environmental/Machines/sparks02.wav" : "Environmental/Machines/Sparks02.wav"
		"Environmental/Machines/sparks03.wav" : "Environmental/Machines/Sparks03.wav"
		"Epic/Explosion8.wav" : 	"Epic/Explosion8.wav"
		"Epic/Explosion_Glass.wav" : "Epic/Explosion_Glass.wav"
		"surfaces/sand/bullet_norm_impact1.wav" : "Surfaces/Sand/Bullet_Norm_Impact1.wav"
		"Weapons/Ranged/Crossbow/Attack_1.wav" : "Weapons/Ranged/Crossbow/Attack_1.wav"
		"Weapons/Ranged/Detonation.wav" : "Weapons/Ranged/Detonation.wav"
	]
	snd_dist(integer) : "Explosion Sound Radius" : 1500 : "Max explosion sound hearing distance."
	snd_pitch_min(integer) : "Explosion Sound Min Pitch" : 95 : "Minimum pitch that explosion sound can randomly use."
	snd_pitch_max(integer) : "Explosion Sound Max Pitch" : 105 : "Minimum pitch that explosion sound can randomly use."

	sep_pedls(string) readonly: "------------------------------------"

	dl_color(color255) : "DL Color [-?]" : "255 128 64" : "[VTMB] Unknown yet..."
	dl_decay(integer) : "DL Decay [-?]" : 1500 : "[VTMB] Unknown yet..."
	dl_time(float) : "DL Time [-?]" : "2.0" : "[VTMB] Unknown yet..."
	dl_exponent(float) : "DL Exponent [-?]" : 0 : "[VTMB] Unknown yet..."
	dl_radius(integer) : "DL Radius [-?]" : 500 : "[VTMB] Unknown yet..."
	
	spawnflags(flags) =
	[
		1 : "Flag 1 (unknown yet)" : 1
		2 : "Flag 2 (unknown yet)" : 1
		4 : "Flag 4 (unknown yet)" : 1
		8 : "Flag 8 (unknown yet)" : 1
		32 : "Flag 32 (unknown yet)" : 1
		64 : "Flag 64 (unknown yet)" : 1
		128 : "Flag 128 (unknown yet)" : 0
		512 : "Flag 512 (unknown yet)" : 0
		8192 : "Flag 8192 (unknown yet)" : 0
	]

	// outputs
	output OnBreak(void) : "Fired when entity breaks [not tested]."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// EVENTS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// events_player [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname
)
iconsprite("editor/scripted_sentence.vmt")
= events_player :
	"[VTMB] Entity that use connections to define the events that happen to a player. \nNote: May be only one on map."
[
	targetname(target_source) : "Name" : "playercontroller" : "The name that other entities refer to this entity by."
	enabled(choices) : "Enabled" : 1 : "Turn entity state On or Off." = [ 0 : "No" 1 : "Yes" ]

	// Inputs
	input EnableOutputs(void) : "Enables all entity's I/O connections [not tested]."
	input DisableOutputs(void) : "Disables all entity's I/O connections [not tested]."
	input CreateControllerNPC(void) : "Creates NPC controller [not tested]."
	input RemoveControllerNPC(void) : "Removes NPC controller [not tested]."
	input AwardExp(string) : "Awards player with defined experience points."
	input ClearDialogCombatTimers(void) : "Clears dialog combat timers [not tested]."
	input ImmobilizePlayer(void) : "Denying the player movement [not tested]."
	input MobilizePlayer(void) : "Allow player to move [not tested]."
	input RemoveDisciplines(void) : "Removes defeined disciplines."
	input RemoveDisciplinesNow(void) : "Removes defeined disciplines right now [not tested]."
	input MakePlayerUnkillable(void) : "Makes the player unkillable."
	input MakePlayerKillable(void) : "Returns the player to be killable."

	// Outputs
	output OnFrenzyBegin(void) : "Fired when player's frenzy begins."
	output OnFrenzyEnd(void) : "Fired when player's frenzy ends."
	output OnWolfMorphBegin(void) : "Fired when wolf morph begins."
	output OnWolfMorphEnd(void) : "Fired when wolf morph ends."
	output OnPlayerTookDamage(void) : "Fired when player took some damage."
	output OnPlayerKilled(void) : "Fired when player dead."
	output OnPlayerSoundLoud(void) : "Unknown for now [need testing]..."
	output OnActivateAuspex(void) : "Fired when player activates 'Auspex' discipline."
	output OnActivateCelerity(void) : "Fired when player activates 'Celerity' discipline."
	output OnActivateCorpusVampirus(void) : "Fired when player activates 'Corpus Vampirus' discipline."
	output OnActivateFortitude(void) : "Fired when player activates 'Fortitude' discipline."
	output OnActivateObfuscate(void) : "Fired when player activates 'Obfuscate' discipline."
	output OnActivatePotence(void) : "Fired when player activates 'Potence' discipline."
	output OnActivatePresense(void) : "Fired when player activates 'Presense' discipline."
	output OnActivateProtean(void) : "Fired when player activates 'Protean' discipline."
	output OnActivateAnimalismLvl1(void) : "Fired when player activates 'Animalism' (level 1) discipline."
	output OnActivateAnimalismLvl2(void) : "Fired when player activates 'Animalism' (level 2) discipline."
	output OnActivateDementationLvl1(void) : "Fired when player activates 'Dementation' (level 1) discipline."
	output OnActivateDementationLvl2(void) : "Fired when player activates 'Dementation' (level 2) discipline."
	output OnActivateDominateLvl1(void) : "Fired when player activates 'Dominate' (level 1) discipline."
	output OnActivateDominateLvl2(void) : "Fired when player activates 'Dominate' (level 2) discipline."
	output OnActivateThaumaturgyLvl1(void) : "Fired when player activates 'Thaumaturgy' (level 1) discipline."
	output OnActivateThaumaturgyLvl2(void) : "Fired when player activates 'Thaumaturgy' (level 2) discipline."
]




//===================================================================================================================
// events_world [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname,
	o_VUsableExt
)
iconsprite("editor/scripted_sentence.vmt")
= events_world :
	"[VTMB] Entity that use connections to define the events that happen to the world. \nNote: May be only one on map."
[
	targetname(target_source) : "Name" : "world" : "The name that other entities refer to this entity by."

	// inputs
	input SetSafeArea(integer) : "Sets area safety type."
	input SetCopWaitArea(integer) : "Sets cop waiting area."
	input SetCopGrace(integer) : "Sets cop grace [unknown yet]."
	input SetNosferatuTolerant(integer) : "Sets nosferatu-tolerant area."
	input SetNoFrenzyArea(integer) : "Sets this area as frenzy-impossible."
	input AIEnable(integer) : "Enables AI [unknown yet]."
	input FadeGlobalWetness(integer) : "Fade global wetness (on rain start or end)."
	input HideCutsceneInterferingEntities(void) : "Hides cutscene-related interfering entities [untested]."
	input UnhideCutsceneInterferingEntities(void) : "Unhides cutscene-related interfering entities [untested]."
	input PlayEndCredits(void) : "Show end-game credits."
	input ClearDialogCombatTimers(void) : "Clear dialog combat timers [unknown yet]."
	input SetParent(string) : "Changes the entity's parent in the movement hierarchy."
	input ClearParent(void) : "Removes this entity from the the movement hierarchy, leaving it free to move independently."

	// outputs
	output OnCopsOutside(void) : "Fired when the cops outside."
	output OnCopsComing(void) : "Fired when the cops are coming."
	output OnStartCopPursuitMode(void) : "Fired when cop pursuit mode stars."
	output OnEndCopPursuitMode(void) : "Fired when cop pursuit mode ends."
	output OnStartCopAlertMode(void) : "Fired when cop alert mode starts."
	output OnEndCopAlertMode(void) : "Fired when cop alert mode ends."
	output OnStartHunterPursuitMode(void) : "Fired when hunter alert mode starts."
	output OnEndHunterPursuitMode(void) : "Fired when hunter alert mode ends."
	output OnMasqueradeLevel1(void) : "Fired when player's masquerade level reaches 1 point."
	output OnMasqueradeLevel2(void) : "Fired when player's masquerade level reaches 2 point."
	output OnMasqueradeLevel3(void) : "Fired when player's masquerade level reaches 3 point."
	output OnMasqueradeLevel4(void) : "Fired when player's masquerade level reaches 4 point."
	output OnMasqueradeLevel5(void) : "Fired when player's masquerade level reaches 5 point."
	output OnMasqueradeLevelChanged(void) : "Fired when player's masquerade level changed."
	output OnPlayerHasNoBlood(void) : "Fired when player needs blood."
	output OnCombatMusicStart(void) : "Fired when combat music starts playing."
	output OnCombatMusicEnd(void) : "Fired when combat music stops playing."
	output OnAlertMusicStart(void) : "Fired when alert music starts playing."
	output OnAlertMusicEnd(void) : "Fired when alert music stops playing."
	output OnNormalMusicStart(void) : "Fired when normal music starts playing."
	output OnNormalMusicEnd(void) : "Fired when normal music stops playing."
]







































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// FILTERS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// filter_activator_feat [VTMB-specific]
//===================================================================================================================

@FilterClass
base (
	BaseFilter
)
iconsprite("editor/filter_class.vmt")
= filter_activator_feat :
	"[VTMB] A Filter entity that activates selected feature [not tested]."
[
	feat_name(choices) : "Feat Name" : "inspection" : "Feature to activate [not tested]." =
	[
		"inspection" : "inspection"
		"" : "(unknown yet)"
	]
	feat_level(choices) : "Feat Level" : 5 : "Activating feature's level (0-10) [not tested]." =
	[
		0:0 1:1 2:2 3:3 4:4 5:5 6:6 7:7 8:8 9:9 10:10
	]
]




//===================================================================================================================
// filter_activator_inventory [VTMB-specific]
//===================================================================================================================

@FilterClass
base (
	BaseFilter
)
iconsprite("editor/filter_class.vmt")
= filter_activator_inventory :
	"[VTMB] A Filter entity that activates selected item [not tested]."
[
	item_name(itemclass) : "Item Name" : : "Item that will be activated."
]




//===================================================================================================================
// filter_activator_mass [VTMB-specific, filter_activator_mass_greater-based]
//===================================================================================================================

@FilterClass
base (
	BaseFilter
)
iconsprite("editor/filter_class.vmt")
= filter_activator_mass :
	"[VTMB] A filter that filters by the mass of the activator."
[
	filtermass(float) : "Filter Mass" : 25 : "The mass to filter by. If the filter mode is Allow, only entities whose "+
		"mass is greater than the give float will pass the filter. If the filter mode is Disallow, "+
		"all entities EXCEPT those whose mass is greater than the given float will pass the filter."
	filterweight(float) : "Filter Weight" : 25 : "[VTMB] Unknown yet..."
]







































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// FUNCTION Entities
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// func_elevator [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	Targetname,
	p_Origin
)
= func_elevator :
	"[VTMB] A brush entity that simulates the elevator functions."
[
	sep_elvflrs(string) readonly: "------------------------------------"

	numfloors(choices) : "Number of Floors" : 2 : "Defines the number of floors, used by elevator." =
	[
		1 : "1"
		2 : "2"
		3 : "3"
		4 : "4"
		5 : "5"
		6 : "6"
		7 : "7"
		8 : "8"
	]	
	floor1(float) : "Floor 1 Height" : 0 : "Defines height the 1st floor is (in units)."
	floor2(float) : "Floor 2 Height" : 0 : "Defines height the 2nd floor is (in units)."
	floor3(float) : "Floor 3 Height" : 0 : "Defines height the 3rd floor is (in units)."
	floor4(float) : "Floor 4 Height" : 0 : "Defines height the 4th floor is (in units)."
	floor5(float) : "Floor 5 Height" : 0 : "Defines height the 5th floor is (in units)."
	floor6(float) : "Floor 6 Height" : 0 : "Defines height the 6th floor is (in units)."
	floor7(float) : "Floor 7 Height" : 0 : "Defines height the 7th floor is (in units)."
	floor8(float) : "Floor 8 Height" : 0 : "Defines height the 8th floor is (in units)."

	sep_elvadd1(string) readonly: "------------------------------------"

	locked(choices) : "Start Locked" : 0 : "Be locked until output will sent by some action." = [ 0 : "No" 1 : "Yes" ]	
	Speed(integer) : "Movement Speed" : 35 : "The speed at which the elevator moves, units per second."

	startsound(sound) : "Start Sound" : "environmental/machines/elevator_operation.wav" : "Sound played when the elevator starts moving. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"Environmental/Machines/elevator_operate.wav" : "Environmental/Machines/Elevator_Operate.wav"
		"Environmental/Machines/elevator_operation.wav" : "Environmental/Machines/Elevator_Operation.wav"
		"Environmental/Machines/service_elevator_begin.wav" : "Environmental/Machines/Service_Elevator_Begin.wav"
	]
	stopsound(sound) : "Stop Sound" : "environmental/machines/elevator_stop.wav" : "Sound played when the elevator stops moving. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"Environmental/Machines/elevator_ding.wav" : "Environmental/Machines/Elevator_Ding.wav"
		"Environmental/Machines/elevator_stop.wav" : "Environmental/Machines/Elevator_Stop.wav"
		"Environmental/Machines/service_elevator_end.wav" : "Environmental/Machines/Service_Elevator_End.wav"
	]

	blockdamage(float) : "Block Damage" : 0 : "The amount of damage to do to any entity that blocks the brushes, per frame."

	// inputs
	input SnapToFloor(integer) : "[VTMB: untested connection]"
	input GotoFloor(integer) : "Go to selected floor."
	input Lock(void) : "Lock the elevator doors, preventing it from functioning."
	input Unlock(void) : "Unlock the elevator doors, allowing it to function."
	input CallCurrentFloorOutputs(void) : "[VTMB] Call outputs OnReachFloorN and OnPassFloorN [not tested]."
	input Open(void) : "Open the elevator door."
	input Close(void) : "Close the elevator door."
	input SetPosition(string) : "Move the elvevator's brush to a specific position [not tested]."
	input StartMoving(void) : "Start elevator moving."
	input StopMoving(void) : "Stop elevator moving."
	input ToggleMovement(void) : "Toggle elevator movement between start and stop."
	input SetSpeed(float) : "Set elevator moving speed."

	// outputs
	output OnMoveStart(void) : "Fired when the elevator started its moving."
	output OnReachFloorAny(void) : "Fired when the elevator reaches ANY floor."
	output OnPassFloorAny(void) : "Fired when the elevator passes ANY floor."
	output OnReachFloor1(void) : "Fired when the elevator reaches floor 1."
	output OnReachFloor2(void) : "Fired when the elevator reaches floor 2."
	output OnReachFloor3(void) : "Fired when the elevator reaches floor 3."
	output OnReachFloor4(void) : "Fired when the elevator reaches floor 4."
	output OnReachFloor5(void) : "Fired when the elevator reaches floor 5."
	output OnReachFloor6(void) : "Fired when the elevator reaches floor 6."
	output OnReachFloor7(void) : "Fired when the elevator reaches floor 7."
	output OnReachFloor8(void) : "Fired when the elevator reaches floor 8."
	output OnPassFloor2(void) : "Fired when the elevator passes floor 2."
	output OnPassFloor3(void) : "Fired when the elevator passes floor 3."
	output OnPassFloor4(void) : "Fired when the elevator passes floor 4."
	output OnPassFloor5(void) : "Fired when the elevator passes floor 5."
	output OnPassFloor6(void) : "Fired when the elevator passes floor 6."
	output OnPassFloor7(void) : "Fired when the elevator passes floor 7."
	output OnStop(void) : "Fired when the elevator stopped its moving."
	output OnReachStart(void) : "Fired when elevator's brush reaches its start point."
	output OnReachEnd(void) : "Fired when elevator's brush reaches its end point."
	output OnMoveTowardsStart(void) : "[VTMB] Fired whenever the elevator starts moving towards."
	output OnMoveTowardsEnd(void) : "[VTMB] Fired whenever the elevator stops moving towards."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// INTERFACE
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// hud_timer [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname
)
iconsprite("editor/logic_timer.vmt")
= hud_timer :
	"[VTMB] Countdown timer that shows on HUD and fires script when complete."
[
	sep_htmain(string) readonly: "------------------------------------"

	count_time(integer) : "Count Time" : 30 : "Countdowns to script execution."
	count_type(choices) : "Count Type" : -1 : "Sets the countdown method [not tested]." =
	[
		-1 : "-1 (Default)"
		 0 : "Type 0 (unknown yet)"
		 1 : "Type 1 (unknown yet)"
	]

	// inputs
	input count_time(integer) : "Set count time value."
	input RestartTimer(void) : "Restart timer."
	input ResetTimer(void) : "Reset timer to initial state."
	input StartTimer(void) : "Start timer."
	input PauseTimer(void) : "Pause timer."
	input Show(void) : "Display timer on screen."
	input Hide(void) : "Hide timer indication."

	// outputs
	output OnTimerComplete(void) : "Fired when countdown complete."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// Hints & Nodes
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// CLASS: AnimEvents [VTMB-specific]
//===================================================================================================================

@BaseClass = AnimEvents
[
// Outputs
	output OnAnimEvent1(void) : "[VTMB: untested connection]"
	output OnAnimEvent2(void) : "[VTMB: untested connection]"
	output OnAnimEvent3(void) : "[VTMB: untested connection]"
	output OnAnimEvent4(void) : "[VTMB: untested connection]"
	output OnAnimEvent5(void) : "[VTMB: untested connection]"
	output OnAnimEvent6(void) : "[VTMB: untested connection]"
	output OnAnimEvent7(void) : "[VTMB: untested connection]"
	output OnAnimEvent8(void) : "[VTMB: untested connection]"
]


//===================================================================================================================
// CLASS: info_node_special [VTMB-specific]
//===================================================================================================================

@BaseClass base(HintNode,AnimEvents) = info_node_special : 
	"[VTMB] Special NPC-related node."
[
	group_id(integer) : "Group ID" : 1 : "[VTMB] Unknown..."
	hint_rating(integer) : "Hint Rating" : 3 : "[VTMB] Unknown..."
	target_name(target_destination) : "Target Name" : : "[VTMB] Not used at NPC-related nodes. Unknown..."
	target_angle_range(float) : "Target Angle Range" : 60 : "[VTMB] Unknown..."
	target_dist_min(integer) : "Target Max Distance" : 256 : "[VTMB] Unknown..."
	target_dist_max(integer) : "Target Min Distance" : 32000 : "[VTMB] Unknown..."
]



//===================================================================================================================
// info_node_crosswalk [VTMB-specific]
//===================================================================================================================

@PointClass base(HintNode) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_crosswalk :
	"[VTMB] Unrecognized info_node..."
[
	input Walk(void) : "[VTMB: untested connection]"
	input DontWalk(void) : "[VTMB: untested connection]"
]



//===================================================================================================================
// specific nodes [VTMB-specific]
//===================================================================================================================

@PointClass base(info_node_special) studio("models/editor/ground_node_cover_med.mdl") = info_node_cover_med [	hinttype(choices) : "Hint" : 100 = [ 100 : "Untested VTMB's (100)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node_cover_low.mdl") = info_node_cover_low [	hinttype(choices) : "Hint" : 101 = [ 101 : "Untested VTMB's (101)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node_cover_corner.mdl") = info_node_cover_corner [	hinttype(choices) : "Hint" : 10200 = [ 10200 : "Untested VTMB's (10200)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") = info_node_shoot_at [	hinttype(choices) : "Hint" : 10400 = [ 10400 : "Untested VTMB's (10400)" ]]

@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_patrol_point
[
	hinttype(choices) : "Hint" : 10000 = [ 10000 : "Untested VTMB's (10000)" ]
	ip_percent(integer) : "ID Percent [-?]" : 100 : "[VTMB] Unknown..."
]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_kick_at
[
	hinttype(choices) : "Hint" : 10300 = [ 10300 : "Untested VTMB's (10300)" ]
	output OnNPCKicked(void) : "Fired when NPC killed [not tested]."
]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_kick_over
[
	hinttype(choices) : "Hint" : 10300 = [ 10300 : "Untested VTMB's (10300)" ]
	output OnNPCKicked(void) : "Fired when NPC killed [not tested]."
]




//===================================================================================================================
// specific_npc-based nodes [VTMB-specific]
//===================================================================================================================

@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_top  [	hinttype(choices) : "Hint" : 16000 = [ 16000 : "Untested Sabbat's (16000)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_bottom  [	hinttype(choices) : "Hint" : 16000 = [ 16000 : "Untested Sabbat's (16000)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_arch [	hinttype(choices) : "Hint" : 16002 = [ 16002 : "Untested Sabbat's (16002)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_dive [	hinttype(choices) : "Hint" : 16003 = [ 16003 : "Untested Sabbat's (16003)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_nojump [	hinttype(choices) : "Hint" : 16004 = [ 16004 : "Untested Sabbat's (16004)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_sabbat_hide [	hinttype(choices) : "Hint" : 16005 = [ 16005 : "Untested Sabbat's (16005)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_teleport_1 [	hinttype(choices) : "Hint" : 17000 = [ 17000 : "Untested Bach's (17000)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_teleport_2 [	hinttype(choices) : "Hint" : 17001 = [ 17001 : "Untested Bach's (17001)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_teleport_3 [	hinttype(choices) : "Hint" : 17002 = [ 17002 : "Untested Bach's (17002)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_teleport_4 [	hinttype(choices) : "Hint" : 17003 = [ 17003 : "Untested Bach's (17003)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_run_1 [	hinttype(choices) : "Hint" : 17004 = [ 17004 : "Untested Bach's (17004)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_bach_run_2 [	hinttype(choices) : "Hint" : 17005 = [ 17005 : "Untested Bach's (17005)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_chang_column [	hinttype(choices) : "Hint" : 18000 = [ 18000 : "Untested Chang's (18000)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_chang_jumpbase [	hinttype(choices) : "Hint" : 18001 = [ 18001 : "Untested Chang's (18001)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_chang_teleport [	hinttype(choices) : "Hint" : 18002 = [ 18002 : "Untested Chang's (18002)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_chang_ledge [	hinttype(choices) : "Hint" : 18003 = [ 18003 : "Untested Chang's (18003)" ]]
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_manbat_fly_to_point [	hinttype(choices) : "Hint" : 20000 = [ 20000 : "Untested Manbat's (20000)" ]]

@PointClass base(Node) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_tzimisce []
@PointClass base(Node) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_tzimisce_claw_left []
@PointClass base(Node) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_tzimisce_claw_right []
@PointClass base(Node) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_werewolf []
@PointClass base(info_node_special) studio("models/editor/ground_node.mdl") color(232 219 8) = info_node_werewolf_hint
[
	hinttype(choices) : "Hint" : 15000 = 
	[ 
		15000 : "Untested Werewolf's (15000)" 
		15001 : "Untested Werewolf's (15001)" 
		15002 : "Untested Werewolf's (15002)" 
		15003 : "Untested Werewolf's (15003)" 
		15004 : "Untested Werewolf's (15004)" 
		15005 : "Untested Werewolf's (15005)" 
		15006 : "Untested Werewolf's (15006)" 
		15008 : "Untested Werewolf's (15008)" 
		15011 : "Untested Werewolf's (15011)" 
		15012 : "Untested Werewolf's (15012)" 
		15013 : "Untested Werewolf's (15013)" 
		15014 : "Untested Werewolf's (15014)" 
		15015 : "Untested Werewolf's (15015)" 
		15016 : "Untested Werewolf's (15016)" 
		15017 : "Untested Werewolf's (15017)" 
		15018 : "Untested Werewolf's (15018)" 
	]
	UserData(string) : "User Data [-?]" : 200 : "[VTMB] Unknown..."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// INFO Entities
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// point_target [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	TargetnameRot
)
iconsprite("editor/info_target.vmt")
= point_target :
	"[VTMB] Same as 'info_target' but also accepts Pitch/Yaw/Roll directions. \nAn entity that does nothing. \nVery useful as a positioning entity for other entities to refer to (i.e. the endpoint of an env_beam)."
[
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// Inspections, Conversations
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// class: InspectionBase [VTMB-specific]
//===================================================================================================================

@BaseClass
= p_Inspection
[
	sep_inspmain(string) readonly: "------------------------------------"
	inspection(choices) : "Inspection Level" : 5 : "[VTMB] Required inspection level? [not tested]." = 
	[
		 0 : "Level 0"
		 1 : "Level 1"
		 2 : "Level 2"
		 3 : "Level 3"
		 4 : "Level 4"
		 5 : "Level 5"
		 6 : "Level 6"
		 7 : "Level 7"
		 8 : "Level 8"
		 9 : "Level 9"
		10 : "Level 10"
	]
]


//===================================================================================================================
// inspection_brush [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	Targetname,
	c_VEnableDisable,
	p_Inspection
)
= inspection_brush :
	"[VTMB] Brush entity that helps player inspection somehow [unfortunately, that's all I know about it]."
[
]


//===================================================================================================================
// inspection_node [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname,
	Parentname,
	c_VEnableDisable,
	p_Inspection
)
line (
	255 255 255,
	targetname,
	parentname
)
studio("models/editor/ground_node.mdl") = inspection_node : 
	"[VTMB] Inspection node. \nCreating an inspection_node and settings its parent to an object within the room is a fast way to add sparklies to objects you want the PC to always find."
[
	// outputs
	output OnPlayerPickup(void): "Fired when player pick-ups the parent object [not tested]."
]






//===================================================================================================================
// Class: InterstingPlaceBase [VTMB-specific]
//===================================================================================================================

@BaseClass
base (
	TargetnameRot,
	AnimEvents
)
size(-8 -8 -8, 8 8 32)
= InterstingPlaceBase
[
	enabled(choices) : "Start Enabled" : 1 : "Enables this entity by default." = [ 0 : "No" 1 : "Yes" ]
	sep_ipbmain(string) readonly: "------------------------------------"

	// inputs
	input Enable(void) : "Activate entity."
	input Disable(void) : "Deactivate entity."
]


//===================================================================================================================
// intersting_place [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	InterstingPlaceBase
)
color(224 224 0)
= intersting_place :
	"[VTMB] Interesting places can be visualized as phone booth sized boxes that attract NPCs that meet certain criteria.\n"+
	"When an eligible NPC enters the 'phone booth', they will perform whatever actions the interesting place has associated with it.\n"+
	"Interesting Places, their NPC types and their actions are defined in:\n\n"+
	"'vdata/system/InterestingPlaceTypeList.txt'. \n\n"+
	"Interesting_places can't be instantiated dynamically. Ent_info doesn't even acknowledge the class exists.\n\n"+
	"NOTE: Info_nodes are needed to use this properly."
[
	type(choices) : "Action Type" : "Idle" : "Action that NPC will do [not tested]. \nGoes to 'vdata/system/interestingplacetypelist.txt' definitions." =
	[
	// TypeList:
		"arms_crossed" : "arms_crossed"
		"Barstool" : "Barstool"
		"bed_sleep_left" : "bed_sleep_left"
		"bed_sleep_right" : "bed_sleep_right"
		"bloodvomit" : "bloodvomit"
		"bum_idle" : "bum_idle"
		"bum_rest" : "bum_rest"
		"bum_sleep" : "bum_sleep"
		"can_drink" : "can_drink"
		"cards_forward_left" : "cards_forward_left"
		"cards_forward_right" : "cards_forward_right"
		"Cars" : "Cars"
		"cellphone" : "cellphone"
		"cigarette" : "cigarette"
		"Citizen_Idle" : "Citizen_Idle"
		"conversation_normal" : "conversation_normal"
		"conversation_wine" : "conversation_wine"
		"couch_sit" : "couch_sit"
		"cower1" : "cower1"
		"cower2" : "cower2"
		"cower3" : "cower3"
		"Dance" : "Dance"
		"diner_booth_back_left" : "diner_booth_back_left"
		"diner_booth_back_left_deep" : "diner_booth_back_left_deep"
		"diner_booth_back_right" : "diner_booth_back_right"
		"diner_booth_back_right_deep" : "diner_booth_back_right_deep"
		"diner_booth_forward_left" : "diner_booth_forward_left"
		"diner_booth_forward_left_deep" : "diner_booth_forward_left_deep"
		"diner_booth_forward_right" : "diner_booth_forward_right"
		"diner_booth_forward_right_deep" : "diner_booth_forward_right_deep"
		"Doggy" : "Doggy"
		"Doorknock" : "Doorknock"
		"Doors" : "Doors"
		"Drama" : "Drama"
		"graffiti" : "graffiti"
		"guard_drunk" : "guard_drunk"
		"guard_whistling" : "guard_whistling"
		"Idle" : "Idle"
		"madness" : "madness"
		"operate_computer" : "operate_computer"
		"operate_panel" : "operate_panel"
		"payphone" : "payphone"
		"piss" : "piss"
		"praying" : "praying"
		"ready_onehanded_weapon" : "ready_onehanded_weapon"
		"ready_twohanded_weapon" : "ready_twohanded_weapon"
		"wall_lean" : "wall_lean"
		"zombie_bang_gate" : "zombie_bang_gate"
		"zombie_reach_gate" : "zombie_reach_gate"
	]
	max_npcs(choices) : "Maximum NPCs" : 1 : "Maximum number of NPCs that can use this entity [not tested]. \nGame maps contains number from 1 to 50." =
	[
		0:0 1:1 2:2 3:3 4:4 5:5 6:6 7:7 8:8 20:20 50:50
	]

	sep_ipvals(string) readonly: "------------------------------------"

	min_time(float) : "Minimum Time" : "5.0" : "[VTMB] Unknown yet..."
	max_time(float) : "Maximum Time" : "10.0" : "[VTMB] Unknown yet..."
	min_bounds(string) : "Minimum Bounds" : "-16 -16 0" : "[VTMB] Unknown yet..."
	max_bounds(string) : "Maximum Bounds" : "16 16 72" : "[VTMB] Unknown yet..."

	sep_ipmisc(string) readonly: "------------------------------------"

	holster_weapon(choices) : "Holster Weapon" : 0 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]
	match_orientation(choices) : "Match Orientation" : 1 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]
	rating(choices) : "Rating (0-5)" : 3 : "[VTMB] Unknown yet..." = [ 0:0 1:1 2:2 3:3 4:4 5:5 ]
	group_id(choices) : "Group ID (1-32)" : 1 : "[VTMB] Unknown yet..." =
	[
		 1 : 1
		 2 : 2
		 3 : 3
		 4 : 4
		 5 : 5
		 6 : 6
		 7 : 7
		 8 : 8
		 9 : 9
		10 : 10
		11 : 11
		12 : 12
		13 : 13
		14 : 14
		15 : 15
		16 : 16
		17 : 17
		18 : 18
		19 : 19
		20 : 20
		21 : 21
		22 : 22
		23 : 23
		24 : 24
		25 : 25
		26 : 26
		27 : 27
		28 : 28
		29 : 29
		30 : 30
		31 : 31
		32 : 32
	]
	testflags(choices) : "Test Flags (?)" : 4 : "[VTMB] Unknown yet..." = [ "":"None" 1:1 2:2 4:4 8:8 ]
	
	// outputs
	output OnNPCArrived(void) : "Fired when some NPC arrived [-?]."
	output OnNPCLeft(void) : "Fired when some NPC left [-?]."
]


//===================================================================================================================
// intersting_place_conversation [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	InterstingPlaceBase
)
color(224 127 0)
sphere(audible_dist)
= intersting_place_conversation :
	"[VTMB] See Intersting_Place. \n\nConversation marks nodes that attract 2 NPCs at the same time..."
[
	interesting_places(target_destination) : "Interesting Place" : : "Target 'intersting_place' entity to be used [not tested]."
	min_time(float) : "Minimum Time" : "5.0" : "[VTMB] Unknown yet..."
	max_time(float) : "Maximum Time" : "10.0" : "[VTMB] Unknown yet..."

	sep_ipcsnd(string) readonly: "------------------------------------"

	audible_dist(integer) : "Audible Distance" : 800 : "Sets the conversation audiblity, in units."
	sound_loop(sound) : "Sound Loop File" : "Environmental/People/Conversation1.wav" : "Sound played many times over. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"Environmental/People/Conversation1.wav" : "Environmental/People/Conversation1.wav"
		"Environmental/People/Conversation2.wav" : "Environmental/People/Conversation2.wav"
		"Environmental/People/Conversation3.wav" : "Environmental/People/Conversation3.wav"
		"Environmental/People/Conversation4.wav" : "Environmental/People/Conversation4.wav"
		"Environmental/People/Conversation5.wav" : "Environmental/People/Conversation5.wav"
		"Environmental/People/Conversation6.wav" : "Environmental/People/Conversation6.wav"
		"Environmental/People/Distant_Conversation5.wav" : "Environmental/People/Distant_Conversation5.wav"
		"Environmental/People/Distant_Conversation7.wav" : "Environmental/People/Distant_Conversation7.wav"
	]
	sound_once(sound) : "Sound Played Once" :  : "Sound played just once, then disable." =
	[
		"null.mp3" : "null.mp3"
	]
	sound_occluded(choices) : "Sound Occluded (?)" : 1 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]

	sep_ipcmisc(string) readonly: "------------------------------------"

	player_dist(float) : "Distance from Player" : 10 : "[VTMB] Unknown yet..."
	turn_towards_talker(choices) : "Turn Towards Talker" : 1 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]

	// outputs
	output OnConversationEnd(void) : "Fired when converstation ends."
	output OnNewTalker(void) : "Fired when new talker appears [not tested]."
	output OnOneOffSoundComplete(void) : "Fired when sound stopped playing [not tested]."
	output OnPlayerLeftRadius(void) : "Fired when player left given radius (what of?) [not tested]."
	output OnPlayerTooClose(void) : "Fired when player is too close to target [not tested]."

	// inputs
	input PlayOneOffSound(void) : "[VTMB: untested connection]"
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// LOGICAL Entities
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// Class: LogicConditionBase [VTMB-specific]
//===================================================================================================================

@BaseClass
base (
	Targetname
)
= o_LogicConditions
[
	// connections
	input Test(void) : "[VTMB: untested conection]"
	output OnTrue(void) : "[VTMB: untested conection]"
	output OnFalse(void) : "[VTMB: untested conection]"
]

@BaseClass
= p_LogicConditions
[
	sep_lncmain(string) readonly: "------------------------------------"

	condition(choices) : "Condition" : "COND_NONE" : "Condition definition name." =
	[
	 // Complete.
		"COND_NONE" : "NONE"
		"COND_BEHIND_ENEMY" : "BEHIND ENEMY"
		"COND_BEING_ATTACKED" : "BEING ATTACKED"
		"COND_BETTER_WEAPON_AVAILABLE" : "BETTER WEAPON AVAILABLE"
		"COND_CAN_MELEE_ATTACK1" : "CAN MELEE ATTACK1"
		"COND_CAN_MELEE_ATTACK2" : "CAN MELEE ATTACK2"
		"COND_CAN_POUNCE" : "CAN POUNCE"
		"COND_CAN_RANGE_ATTACK1" : "CAN RANGE ATTACK1"
		"COND_CAN_RANGE_ATTACK2" : "CAN RANGE ATTACK2"
		"COND_CLAW_HINT_INVALID" : "CLAW HINT INVALID"
		"COND_CLAW_HINT_SPECIAL_INVALID" : "CLAW HINT SPECIAL INVALID"
		"COND_COMFORT" : "COMFORT"
		"COND_COVER_FAILURE" : "COVER FAILURE"
		"COND_CRIMINAL_ATTACK_LEVEL" : "CRIMINAL ATTACK LEVEL"
		"COND_CRIMINAL_FLEE_LEVEL" : "CRIMINAL FLEE LEVEL"
		"COND_CROSSWALK_DONTWALK" : "CROSSWALK DONTWALK"
		"COND_CROSSWALK_WALK" : "CROSSWALK WALK"
		"COND_DETECTED_ATTACK" : "DETECTED ATTACK"
		"COND_ENEMY_BLOCKED" : "ENEMY BLOCKED"
		"COND_ENEMY_DEAD" : "ENEMY DEAD"
		"COND_ENEMY_FACING_ME" : "ENEMY FACING ME"
		"COND_ENEMY_OCCLUDED" : "ENEMY OCCLUDED"
		"COND_ENEMY_TOO_FAR" : "ENEMY TOO FAR"
		"COND_ENEMY_UNREACHABLE" : "ENEMY UNREACHABLE"
		"COND_EXTENDED_BLOCKED_BY_FRIEND" : "EXTENDED BLOCKED BY FRIEND"
		"COND_FLOATING_OFF_GROUND" : "FLOATING OFF GROUND"
		"COND_FLYING_NPC_HIT" : "FLYING NPC HIT"
		"COND_FLYING_WALL_HIT" : "FLYING WALL HIT"
		"COND_GIVE_WAY" : "GIVE WAY"
		"COND_HAVE_ENEMY_LOS" : "HAVE ENEMY LOS"
		"COND_HAVE_ENEMY_THROW_LOS" : "HAVE ENEMY THROW LOS"
		"COND_HAVE_TARGET_LOS" : "HAVE TARGET LOS"
		"COND_HEAR_BUGBAIT" : "HEAR BUGBAIT"
		"COND_HEAR_BULLET_IMPACT" : "HEAR BULLET IMPACT"
		"COND_HEAR_COMBAT" : "HEAR COMBAT"
		"COND_HEAR_DANGER" : "HEAR DANGER"
		"COND_HEAR_FLANK_SOUND" : "HEAR FLANK SOUND"
		"COND_HEAR_FLINCH" : "HEAR FLINCH"
		"COND_HEAR_PHYSICS_DANGER" : "HEAR PHYSICS DANGER"
		"COND_HEAR_PLAYER" : "HEAR PLAYER"
		"COND_HEAR_THUMPER" : "HEAR THUMPER"
		"COND_HEAR_WORLD" : "HEAR WORLD"
		"COND_HEAVY_DAMAGE" : "HEAVY DAMAGE"
		"COND_HINT_INVALID" : "HINT INVALID"
		"COND_HIT_BY_DOOR" : "HIT BY DOOR"
		"COND_IGNORE_UNKNOWN" : "IGNORE UNKNOWN"
		"COND_INSIDE_INTERRUPT_DIST" : "INSIDE INTERRUPT DIST"
		"COND_INSIDE_INTERRUPT_DIST_E" : "INSIDE INTERRUPT DIST E"
		"COND_INSIDE_INTERRUPT_DIST_F" : "INSIDE INTERRUPT DIST F"
		"COND_INTERRUPT_TIME" : "INTERRUPT TIME"
		"COND_INVESTIGATE_LEVEL" : "INVESTIGATE LEVEL"
		"COND_INVESTIGATE_SIGHT" : "INVESTIGATE SIGHT"
		"COND_INVESTIGATE_SOUND" : "INVESTIGATE SOUND"
		"COND_KICK_PROP_INVALID" : "KICK PROP INVALID"
		"COND_KNOCKBACK" : "KNOCKBACK"
		"COND_LIGHT_DAMAGE" : "LIGHT DAMAGE"
		"COND_LOST_ENEMY" : "LOST ENEMY"
		"COND_LOST_UNKNOWN" : "LOST UNKNOWN"
		"COND_LOW_PRIMARY_AMMO" : "LOW PRIMARY AMMO"
		"COND_NEW_ENEMY" : "NEW ENEMY"
		"COND_NO_PRIMARY_AMMO" : "NO PRIMARY AMMO"
		"COND_NO_SECONDARY_AMMO" : "NO SECONDARY AMMO"
		"COND_NO_WEAPON" : "NO WEAPON"
		"COND_NOT_FACING_ATTACK" : "NOT FACING ATTACK"
		"COND_NPC_FREEZE" : "NPC FREEZE"
		"COND_NPC_UNFREEZE" : "NPC UNFREEZE"
		"COND_ON_FIRE" : "ON FIRE"
		"COND_OUTSIDE_INTERRUPT_DIST" : "OUTSIDE INTERRUPT DIST"
		"COND_OUTSIDE_INTERRUPT_DIST_E" : "OUTSIDE INTERRUPT DIST E"
		"COND_OUTSIDE_INTERRUPT_DIST_F" : "OUTSIDE INTERRUPT DIST F"
		"COND_PASS_OUT" : "PASS OUT"
		"COND_PLAYER_ON_HEAD" : "PLAYER ON HEAD"
		"COND_PLAYER_PUSHING" : "PLAYER PUSHING"
		"COND_PLAYER_SNARL_RANGE" : "PLAYER SNARL RANGE"
		"COND_PROVOKED" : "PROVOKED"
		"COND_REPEATED_DAMAGE" : "REPEATED DAMAGE"
		"COND_SCHEDULE_DONE" : "SCHEDULE DONE"
		"COND_SEE_CORPSE" : "SEE CORPSE"
		"COND_SEE_CORPSE_FRIEND" : "SEE CORPSE FRIEND"
		"COND_SEE_DISLIKE" : "SEE DISLIKE"
		"COND_SEE_ENEMY" : "SEE ENEMY"
		"COND_SEE_FEAR" : "SEE FEAR"
		"COND_SEE_HATE" : "SEE HATE"
		"COND_SEE_NEMESIS" : "SEE NEMESIS"
		"COND_SEE_PLAYER" : "SEE PLAYER"
		"COND_SEE_SOUND_SOURCE" : "SEE SOUND SOURCE"
		"COND_SEE_UNKNOWN" : "SEE UNKNOWN"
		"COND_SHOULD_BLOCK" : "SHOULD BLOCK"
		"COND_SHOULD_CHARGE" : "SHOULD CHARGE"
		"COND_SHOULD_DODGE" : "SHOULD DODGE"
		"COND_SHOULD_INTERACT" : "SHOULD INTERACT"
		"COND_SHOULD_KICK" : "SHOULD KICK"
		"COND_SHOULD_LOITER" : "SHOULD LOITER"
		"COND_SHOULD_STEPBACK" : "SHOULD STEPBACK"
		"COND_SMELL" : "SMELL"
		"COND_SQUAD_LOS_ENEMY" : "SQUAD LOS ENEMY"
		"COND_SQUAD_SEE_ENEMY" : "SQUAD SEE ENEMY"
		"COND_STOP_BACKUP" : "STOP BACKUP"
		"COND_SUPERNATURAL_ATTACK_LEVEL" : "SUPERNATURAL ATTACK LEVEL"
		"COND_SUPERNATURAL_FLEE_LEVEL" : "SUPERNATURAL FLEE LEVEL"
		"COND_TARGET_OCCLUDED" : "TARGET OCCLUDED"
		"COND_TASK_FAILED" : "TASK FAILED"
		"COND_TOO_CLOSE_FOR_RANGED" : "TOO CLOSE FOR RANGED"
		"COND_TOO_CLOSE_TO_ATTACK" : "TOO CLOSE TO ATTACK"
		"COND_TOO_FAR_FOR_MELEE" : "TOO FAR FOR MELEE"
		"COND_TOO_FAR_TO_ATTACK" : "TOO FAR TO ATTACK"
		"COND_UNKNOWN_ADVANCING" : "UNKNOWN ADVANCING"
		"COND_UNKNOWN_HOLDING" : "UNKNOWN HOLDING"
		"COND_UNKNOWN_RETREATING" : "UNKNOWN RETREATING"
		"COND_UNKNOWN_RUN_TIMER" : "UNKNOWN RUN TIMER"
		"COND_WAITING_ATTACK_TIME" : "WAITING ATTACK TIME"
		"COND_WAS_BUMPED" : "WAS BUMPED"
		"COND_WAY_CLEAR" : "WAY CLEAR"
		"COND_WEAPON_BLOCKED_BY_FRIEND" : "WEAPON BLOCKED BY FRIEND"
		"COND_WEAPON_HAS_LOS" : "WEAPON HAS LOS"
		"COND_WEAPON_PLAYER_IN_SPREAD" : "WEAPON PLAYER IN SPREAD"
		"COND_WEAPON_PLAYER_NEAR_TARGET" : "WEAPON PLAYER NEAR TARGET"
		"COND_WEAPON_SIGHT_OCCLUDED" : "WEAPON SIGHT OCCLUDED"
		"COND_WEAPON_THROUGH_WALL" : "WEAPON THROUGH WALL"
	]
]



//===================================================================================================================
// logic_case_toggle [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	logic_case
)
iconsprite("editor/logic_case.vmt")
= logic_case_toggle :
	"[VTMB] Toggleable logic_case [not tested]."
[
	sep_caset(string) readonly: "------------------------------------"
	InitialCase(integer) : "Initial Case (0-160)" : 1 : "Defines initial case from which toggle starts."

	// inputs
	input InValueDelta(integer) : "[VTMB: untested connection]"
]




//===================================================================================================================
// logic_npc_condition [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	o_LogicConditions,
	p_LogicConditions
)
iconsprite("editor/logic_branch.vmt")
= logic_npc_condition :
	"[VTMB] Creates conditions for NPC-related events [not tested]."
[
	target_npc(target_destination) : "Target NPC" : : "The name of target NPC."
]




//===================================================================================================================
// logic_squad_condition [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	o_LogicConditions,
	p_LogicConditions
)
iconsprite("editor/logic_branch.vmt")
= logic_squad_condition :
	"[VTMB] Creates conditions for Squad-related (entity families?) events [not tested]."
[
	squad_name(target_destination) : "Squad Name" : : "The name of Squad (entity families?) [not tested]."
]




//===================================================================================================================
// logic_pythoncheck [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	EnableDisable,
	o_LogicConditions
)
iconsprite("editor/logic_branch.vmt")
= logic_pythoncheck :
	"[VTMB] Checks condition given by Python function and fires specified output [not tested]."
[
	sep_lpcmain(string) readonly: "------------------------------------"
	python_script(string) : "Python Command" : "FindPlayer().IsMale()" : "Defines checking condition. \nMay be a function, variable or script."
]




//===================================================================================================================
// logic_visibility_test [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname
)
sphere(radius)
line (
	144 144 128,
	targetname,
	source_ent,
	targetname,
	target_ent
)
iconsprite("editor/logic_branch.vmt")
= logic_visibility_test :
	"[VTMB] A point entity that checks visiblity between two entities [not tested].\nRarely used."
[
	sep_lvtmain(string) readonly: "------------------------------------"

	source_ent(target_destination) : "Source Entity Name" : : "The source entity that will estimate visiblity of target [not tested]."
	target_ent(target_destination) : "Target Entity Name" : : "The target entity that's visiblity checks [not tested]."
	radius(integer) : "Activity Radius" : 768 : "Radius that logic_visibility_test active [not tested]."

	// inputs
	input CheckVisibility(void) : "Check Visiblity of object."
	// outputs
	output OnCanSeeTarget(void) : "Fired when entity detects target in it's FOV."
	output OnNotSeeTarget(void) : "Fired when entity unable to detect target in it's FOV."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
//
// Moving, Keyframes and Ropes
//
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// func_keyframed_mover [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	Targetname,
	p_Origin
)
color(255 170 0)
animator()
size(-8 -8 -8, 8 8 8)
= func_keyframed_mover : 
	"[VTMB] Keyframed Move Behavior."
[
	sep_kfmmain(string) readonly: "------------------------------------"

	start_key(target_destination) : "Start Keyframe" : : "Source entity that will be used as starting point."
	speed(integer) : "Moving Speed" : 64 : "Moving speed."
	direction(vector) : "Moving Direction" : 0 : "Set the moving direction [-?]."
	
	spawnflags(flags) =
	[
		1: "Flag 1 (unknown yet)" : 0
	]
	
	// inputs
	input MoveForwards(void) : "Starts move forwards."
	input MoveBackwards(void) : "Starts move backwards."
	input StopMoving(void) : "Stops moving."
	input SetSpeed(float) : "Set moving speed."
	input SnapToKeyframe(string) : "Snaps to selected keyframe [not tested]."

	// outputs
	output OnReachedBeginning(void) : "Fired when moving reached its beginning [not tested]."
	output OnReachedEnd(void) : "Fired when moving reached its end [not tested]."
	output OnReachedKeyframe(void) : "Fired when defined keyframe reached."
]




//===================================================================================================================
// mover_keyframe [VTMB-specific]
//===================================================================================================================

@MoveClass
base (
	Targetname
)
animator()
color(255 170 0)
studio("models/editor/axis_helper.mdl")
= mover_keyframe :
	"[VTMB] Keyframe mover behavior [not tested]."
[
	sep_kfmmain(string) readonly: "------------------------------------"
	NextKey(target_destination) : "Next KeyFrame" : : "Name of the next keyframe along this keyframe path."

	// outputs
	output OnReached(void) : "Fired whenever the mover reaches a goal position."
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// PHYSICS Point Entities
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// phys_animlink [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname
)
iconsprite("editor/multisource.vmt")
= phys_animlink :
	"[VTMB] Defines an entity that animates other entity? [rarely used, not tested yet]."
[
	sep_anmain(string) readonly: "------------------------------------"

	animator(target_destination) : "Animator Entity" : : "[VTMB] Defines source entity's name [not tested]."
	animator_bone(choices) : "Animator Bone" :  : "[VTMB] Defines source entity's bone the target entity will be attached to [not tested]." =
	[
		"" : "<none>"
		"prop_static" : "prop_static"
	]

	sep_anmprp(string) readonly: "------------------------------------"

	attached(target_destination) : "Attached Entity" : : "[VTMB] The name of target entity that will be animated by 'Animator entity' [not tested]."
	attached_bone(choices) : "Attached Bone" : "Bip01 Head" : "[VTMB] The name of target entity's bone that will be attached to 'Animator entity' [not tested]." =
	[
		"" : "<none>"
		"Bip01 Head" : "Bip01 Head"
		"Bip01 L Hand" : "Bip01 L Hand"
		"Bip01 R Hand" : "Bip01 R Hand"
		"Bip01 Neck" : "Bip01 Neck"
		"Bip01 Pelvis" : "Bip01 Pelvis"
		"Bip01 Spine" : "Bip01 Spine"
		"Bip01 Spine01" : "Bip01 Spine01"
		"Bip01 Spine02" : "Bip01 Spine02"
		"Bip01 Spine03" : "Bip01 Spine03"
	]
	sep_anmang(string) readonly: "------------------------------------"

	attach_angle(angle) : "Attach Angle (Z X Y)" : "0 0 0" : "[VTMB] Unknown yet..."
	attach_offset(angle) : "Attach Offset (Z X Y)" : "0 0 0" : "[VTMB] Unknown yet..."
]






































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// TRIGGERS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// trigger_bomb_site [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger,
	Parentname,
	p_Origin
)
line (
	255 255 255,
	targetname,
	parentname
)
= trigger_bomb_site :
	"[VTMB] A trigger that defines the site for laying bomb (e.g. astrolite)."
[
	// outputs
	output OnBombPlaced(void) : "Fired when the bomb placed."
	output OnBombDefused(void) : "Fired when the bomb defused."
]




//===================================================================================================================
// trigger_checkvolume [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger
)
= trigger_checkvolume :
	"[VTMB] A trigger that checks entities to be in trigger's volume [not tested]."
[
	// connections
	input CheckNow(void) : "Done checking an entity now [not tested]."
	output OnEntityInVolume(void) : "Fires input when entity is within trigger's volume."
]




//===================================================================================================================
// trigger_discipline_context [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger
)
= trigger_discipline_context : 
	"[VTMB] Untested trigger entity..."
[
	sep_trig(string) readonly: "------------------------------------"

	Discipline_Context(choices) : "Discipline Context" : 4 : "[VTMB] Unknwon yet..." =
	[
		0 : "Context 0 [-?]"
		1 : "Context 1 [-?]"
		2 : "Context 2 [-?]"
		3 : "Context 3 [-?]"
		4 : "Context 4 [-?]"
	]
]




//===================================================================================================================
// trigger_electric_bugaloo [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger,
	o_VUsableExt
)
= trigger_electric_bugaloo :
	"[VTMB] Dance trigger which used in clubs. \nPlayer (or other character) can dance by +USE if he's in it's volume."
[
]




//===================================================================================================================
// trigger_environmental_audio [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger
)
= trigger_environmental_audio :
	"[VTMB] A trigger that creates DSP environmental sound effects in it's volume (in HL2 it was using as part of 'env_soundscape' entity)."
[
	sep_trig(string) readonly: "------------------------------------"

	room_type(choices) : "DSP Room Type" : 1 : "DSP preset that creates any sound effects like echo, reverb, etc." =
	[
		0 : "Normal (Off)"
		1 : "Generic (Auto)"
		2 : "Metal Small"
		3 : "Metal Medium"
		4 : "Metal Large"
		5 : "Tunnel Small"
		6 : "Tunnel Medium"
		7 : "Tunnel Large"
		8 : "Chamber Small"
		9 : "Chamber Medium"
		10: "Chamber Large"
		11: "Bright Small"
		12: "Bright Medium"
		13: "Bright Large"
		14: "Water 1"
		15: "Water 2"
		16: "Water 3"
		17: "Concrete Small"
		18: "Concrete Medium"
		19: "Concrete Large"
		20: "Big 1"
		21: "Big 2"
		22: "Big 3"
		23: "Cavern Small"
		24: "Cavern Medium"
		25: "Cavern Large"
		26: "Weirdo 1"
		27: "Weirdo 2"
		28: "Weirdo 3"
		102: "ROOM EMPTY SMALL BRIGHT"
		103: "ROOM EMPTY HUGE DULL"
		104: "ROOM DIFFUSE SMALL BRIGHT"
		105: "ROOM DIFFUSE HUGE DULL"
		106: "DUCT EMPTY SMALL BRIGHT"
		107: "DUCT EMPTY HUGE DULL"
		108: "DUCT DIFFUSE SMALL BRIGHT"
		109: "DUCT DIFFUSE HUGE DULL"
		110: "HALL EMPTY SMALL BRIGHT"
		111: "HALL EMPTY HUGE DULL"
		112: "HALL DIFFUSE SMALL BRIGHT"
		113: "HALL DIFFUSE HUGE DULL"
		114: "TUNNEL EMPTY SMALL BRIGHT"
		115: "TUNNEL EMPTY HUGE DULL"
		116: "TUNNEL DIFFUSE SMALL BRIGHT"
		117: "TUNNEL DIFFUSE HUGE DULL"
		118: "STREET EMPTY SMALL BRIGHT"
		119: "STREET EMPTY HUGE DULL"
		120: "STREET DIFFUSE SMALL BRIGHT"
		121: "STREET DIFFUSE HUGE DULL"
		122: "ALLEY EMPTY SMALL BRIGHT"
		123: "ALLEY EMPTY HUGE DULL"
		124: "ALLEY DIFFUSE SMALL BRIGHT"
		125: "ALLEY DIFFUSE HUGE DULL"
		126: "COURTYARD EMPTY SMALL BRIGHT"
		127: "COURTYARD EMPTY HUGE DULL"
		128: "COURTYARD DIFFUSE SMALL BRIGHT"
		129: "COURTYARD DIFFUSE HUGE DULL"
		130: "OPENSPACE EMPTY SMALL BRIGHT"
		131: "OPENSPACE EMPTY HUGE DULL"
		132: "OPENSPACE DIFFUSE SMALL BRIGHT"
		133: "OPENSPACE DIFFUSE HUGE DULL"
		134: "TUNNEL EMPTY HUGE DULL"
	]
]




//===================================================================================================================
// trigger_inventory_check [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger,
	Parentname,
	p_Origin
)
line (
	255 255 255,
	targetname,
	parentname
)
= trigger_inventory_check :
	"[VTMB] A trigger that checks specified inventory item availability and generate the dependent output."
[
	sep_trig(string) readonly: "------------------------------------"
	itemname(itemclass) : "Item to Check" : "item_g_astrolite" : "The name of player's inventory item that will be checked by trigger."

	// connections
	output OnPlayerHasItem(void) : "Fired whether a player has selected item."
]




//===================================================================================================================
// trigger_player_activity_level [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger
)
= trigger_player_activity_level :
	"[VTMB] A trigger that manages player activity level [not tested]."
[
	sep_trig(string) readonly: "------------------------------------"

	criminal_level(choices) : "Criminal Level" : -1 : "Sets player's Criminal level to this value [not tested]." =
	[
		-1 : "Nothing"
		 1 : "Level 1"
		 2 : "Level 2"
		 3 : "Level 3"
		 4 : "Level 4"
		 5 : "Level 5"
		 6 : "Level 6"
	]
	supernatural_level(choices) : "Supernatural Level" : -1 : "Sets player's Supernatural level to this value [not tested]." =
	[
		-1 : "Nothing"
		 1 : "Level 1"
		 2 : "Level 2"
		 3 : "Level 3"
		 4 : "Level 4"
		 5 : "Level 5"
		 6 : "Level 6"
	]
	investigate_level(choices) : "Investigate Level" : -1 : "Sets player's Investigate level to this value [not tested]." =
	[
		-1 : "Nothing"
		 1 : "Level 1"
		 2 : "Level 2"
		 3 : "Level 3"
		 4 : "Level 4"
		 5 : "Level 5"
		 6 : "Level 6"
	]

	spawnflags(Flags) = 
	[
		32 : "Flag 32 (initial state?)" : 1
	]

	// inputs
	input SetCriminalLevel(integer) : "Set player's Criminal level."
	input SetSupernaturalLevel(integer) : "Set player's Supernatural level."
	input SetInvestigateLevel(integer) : "Set player's Investigate level."

	// outputs
	output OnTrigger(void) : "Fired whenever the trigger is activated."
]




//===================================================================================================================
// trigger_small_hull [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger
) = trigger_small_hull :
	"[VTMB] A trigger that somehow manages small hull? [unknown yet]."
[
]




//===================================================================================================================
// trigger_stealth_mod [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger
)
= trigger_stealth_mod :
	"[VTMB] A trigger that modifies the player's stealth abilities [not tested]."
[
	sep_trig(string) readonly: "------------------------------------"

	stealth_modifier(choices) : "Stealth Modifier Type" : 2 : "Select stealth modifier type defined in 'vdata/systems/stealth.txt' [not tested]." =
	[
		1 : "Modifier #1"
		2 : "Modifier #2"
		3 : "Modifier #3"
		4 : "Modifier #4"
		5 : "Modifier #5"
		6 : "Modifier #6"
		7 : "Modifier #7"
		8 : "Modifier #8"
		9 : "Modifier #9"
		10 : "Modifier #10"
	]
]




//===================================================================================================================
// trigger_werewolf_zone [VTMB-specific]
//===================================================================================================================

@SolidClass
base (
	VBaseTrigger
)
= trigger_werewolf_zone :
	"[VTMB] A trigger that defines werewolf zones (not tested)."
[
	sep_trig(string) readonly: "------------------------------------"

	target_name(target_destination) : "Target Destination" : : "The name of target entity [not tested]."
	zone_type(choices) : "Zone Type" : 2 : "Defines type of werewolf zone [not tested]." =
	[
		0 : "Zone #0 [-?]"
		1 : "Zone #1 [-?]"
		2 : "Zone #2 [-?]"
		3 : "Zone #3 [-?]"
		4 : "Zone #4 [-?]"
		5 : "Zone #5 [-?]"
		6 : "Zone #6 [-?]"
		7 : "Zone #7 [-?]"
		8 : "Zone #8 [-?]"
	]
]








































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// LOCKS
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//====================================================================================================================
// CLASS: VOpenable [VTMB-specific]
//====================================================================================================================

@BaseClass base(Studiomodel,Parentname,VUseIcons,VLockedIcons,o_VUsableExt,o_VBreakable) = VOpenable
[
	key_icon(choices) : "Key Icon" : 4 : "An icon that will be displayed near this entity when required key found." =
	[
		0: "None"
		0: " "
		0: " -- door icons --"
		10: "Door (Openable)"
		58: "Door (Player wanted)"
		59: "Door (Transition)"
		60: "Hatch (Transition)"
		0: " "
		0: " -- buttons, switches --"
		12: "Switch (wall)"
		64: "Switch (power)"
		31: "Elevator button: Up"
		32: "Elevator button: Down"
		21: "Elevator button: 1"
		22: "Elevator button: 2"
		23: "Elevator button: 3"
		24: "Elevator button: 4"
		25: "Elevator button: 5"
		26: "Elevator button: 6"
		27: "Elevator button: 7"
		28: "Elevator button: B"
		29: "Elevator button: G"
		49: "Elevator button: PH"
		30: "Elevator button: Locked"
		0: " "
		0: " -- locks, keys --"
		3:  "Default lock"
		4:  "Key"
		5:  "Access card"
		53: "Electronic lock"
		54: "Electronic lock (deny)"
		0: " "
		0: " -- sign icons --"
		18: "Note"
		40: "Clipboard"
		41: "Printed Papers"
		36: "Book"
		50: "Bus stop Map"
		51: "Sewer Transition map"
		57: "Sewer Lines map"
		46: "Giovanni book"
		0: " "
		0: " -- usable icons --"
		2:  "Computer"
		6:  "Lootable crate"
		7:  "TV monitor"
		43: "Phonograph"
		48: "Web camera"
		38: "Reel recorder"
		42: "Projector light"
		34: "Valve wheel"
		61: "Pedestal"
		35: "Stove"
		37: "Sconce"
		16: "Tubes"
		0: " "
		0: " -- talking icons --"
		15: "Talk NPC (Male)"
		14: "Talk NPC (Female)"
		8:  "Phone"
		47: "Payphone"
		0: " "
		0: " -- place icons --"
		17: "Use Bomb"
		55: "Breakable"
		62: "Dance (Male)"
		63: "Dance (Female)"
		0: " "
		0: " -- other icons --"
		9:  "Physic Hand"
		19: "Stealth succeed"
		20: "Stealth chance"
		33: "Sword"
		45: "Slaughter"
		52: "Skull"
		73: "Pushable prop"
		66: "Malk Chaos"
		67: "Malk Key"
		68: "Malk Mind"
		69: "Malk Order"
		70: "Malk Sight"
		71: "Malk Time"
		72: "Malk Mind"
		0: " "
		0: " -- unused icons --"
		1:  "Carry body (unused)"
		13: "Switch 1 (13)"
		39: "Key (39)"
		44: "Phonograph (44)"
		56: "Bus stop Map (56)"
		11: "Empty (11)"
		65: "Empty (65)"
	]
]






@BaseClass
base (
	Studiomodel,
	Parentname,
	o_VUsableExt
)
= c_Lockable1
[
	model(studio) : "Model" :  : "Lock prop model." = []
	sep_lockmain(string) readonly: "------------------------------------"

	use_icon(choices) : "Use Icon" : 0 : "An icon that indicates when player can be able to use this entity and it is openable." = 
	[
		0 : "None"
		10: "Door (default)"
		53: "Electronic lock"
	]
	locked_icon(choices) : "Locked Icon" : 3 : "An icon that indicates locked state of this entity." = 
	[
		0 : "None"
		3 : "Default lock"
		54: "Electronic lock (locked)"
		58: "Door (player wanted)"
	]
	locksnd(sound) : "Locked Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the player tries to use entity, and fails because it's locked. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"environmental/electronic/button_click_1.wav" : "Environmental/Electronic/Button_Click_1.wav"
	]
	sep_lockkeys(string) readonly: "------------------------------------"
]

@BaseClass
= c_Lockable2
[
	key_icon(choices) : "Key Icon" : 4 : "An icon that will be displayed near this entity when the required key found." =
	[
		0: "None"
		4: "Key"
		5: "Access card"
	]
	key_name(itemclass) : "Open Key Name" :  : "The name of key type that unlock this. \nUse 'item_k_<name>' classes to specify required key."
	delete_key(choices) : "Delete Key on Open" : 0 : "Removes key from the player's inventory when object unlocked." = [ 0 : "No" 1 : "Yes" ]

	sep_lockskil(string) readonly: "------------------------------------"

	skilltype(choices) : "Skill Type" : 1 : "Defines player's skill type, e.g. hacking, lockpicking, etc." =
	[
		1 : "Lockpicking"
		2 : "Hacking"
		3 : "Code-breaking"
	]
	difficulty(choices) : "Difficulty" : 0 : "Entity's unlock difficulty. Only with sufficient skill level, the player will be able to open it." =
	[
		0:0 1:1 2:2 3:3 4:4 5:5 6:6 7:7 8:8 9:9 10:10
	]
	diceroll(choices) : "Dice-Roll" : 0 : "[VTMB] Make attempt to open it anyway [not tested]." = [ 0 : "No" 1 : "Yes" ]

	// inputs
 	input Lock(void) : "Lock the entity."
	input Unlock(void) : "Open the entity's lock."
	input ResetDifficulty(void) : "Reset lock's difficulty to default."

	// outputs
	output OnSkillSuccess(void) : "Fired when the skill level matches the player's one."
	output OnSkillFail(void) : "Fired when the skill level not matches the player's one."
	output OnSkillBotch(void) : "Fired when the skill level botched [-?]."
	output OnSkillAttemptBegin(void) : "Fired when player attempts to unlock entity."
	output OnSkillAttemptCycle(void) : "Fired when player in process of entity unlocking..."
]






//====================================================================================================================
// item_container_lock [VTMB-specific]
//====================================================================================================================

@BaseClass
= e_item_container_lock
[
	requires_key(choices) : "Requires Key" : 0 : "If 'Yes', item cannot be unlocked (or broken with lockpicks) without appropriate key." = [ 0 : "No" 1 : "Yes" ]
	electronic_key(choices) : "Electronic Keycard" : 0 : "Set 'Yes' if this entity have an electronic lock that requires appropriate keycard." = [ 0 : "No" 1 : "Yes" ]
]

@PointClass
base (
	c_Lockable1,
	e_item_container_lock,
	c_Lockable2
)
//line (
//	255 255 255,
//	targetname,
//	parentname
//)
studio()
= item_container_lock :
	"[VTMB] Lock for Item Container that requires Key or some Skill level to unlock."
[
	model(studio) : "Model" : "models/scenery/misc/padlock1/padlock1.mdl" : "Lock prop model." =
	[
		"models/scenery/misc/padlock1/padlock1.mdl" : "models/scenery/misc/padlock1/padlock1.mdl"
	]
	difficulty(choices) : "Difficulty" : 4 : "Entity's unlock difficulty. Only with sufficient skill level, the player will be able to open it." = []
]






//===================================================================================================================
// prop_doorknob [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_doorknob
[
	model(studio) : "Model" : "models/scenery/structural/doorknob_round/doorknob_round_brass.mdl" : "Door knob prop model." =
	[
		"models/scenery/misc/lock/lock_left.mdl" : "models/scenery/misc/lock/lock_left.mdl"
		"models/scenery/misc/lockhandle/lockhandle.mdl" : "models/scenery/misc/lockhandle/lockhandle.mdl"
		"models/scenery/misc/lockhandle/lockhandlebrass.mdl" : "models/scenery/misc/lockhandle/lockhandlebrass.mdl"
		"models/scenery/misc/safe/doorhandle.mdl" : "models/scenery/misc/safe/doorhandle.mdl"
		"models/scenery/structural/crypt/handle.mdl" : "models/scenery/structural/crypt/handle.mdl"
		"models/scenery/structural/dane/danedoor_handle.mdl" : "models/scenery/structural/dane/danedoor_handle.mdl"
		"models/scenery/structural/doorknob_push/doorknob_pushbarl.mdl" : "models/scenery/structural/doorknob_push/doorknob_pushbarl.mdl"
		"models/scenery/structural/doorknob_push/doorknob_pushbarr.mdl" : "models/scenery/structural/doorknob_push/doorknob_pushbarr.mdl"
		"models/scenery/structural/doorknob_round/doorknob_round_brass.mdl" : "models/scenery/structural/doorknob_round/doorknob_round_brass.mdl"
		"models/scenery/structural/doorknoba/doorknoba.mdl" : "models/scenery/structural/doorknoba/doorknoba.mdl"
		"models/scenery/structural/doorknoba/drknobantique.mdl" : "models/scenery/structural/doorknoba/drknobantique.mdl"
		"models/scenery/structural/doorknoba/drknobantiquel.mdl" : "models/scenery/structural/doorknoba/drknobantiquel.mdl"
		"models/scenery/structural/doorknoboffice/doorknoboffice.mdl" : "models/scenery/structural/doorknoboffice/doorknoboffice.mdl"
		"models/scenery/structural/malkavian/doorhandle.mdl" : "models/scenery/structural/malkavian/doorhandle.mdl"
		"models/scenery/structural/malkavian/doorhandle_left.mdl" : "models/scenery/structural/malkavian/doorhandle_left.mdl"
		"models/scenery/structural/Plaguebearer_sewer/plague_gatehandle.mdl" : "models/scenery/structural/Plaguebearer_sewer/plague_gatehandle.mdl"
	]
	use_icon(choices) : "Use Icon" : 10 : "An icon that indicates when player can be able to use this entity and it is openable." = []
	locksnd(sound) : "Locked Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the player tries to use entity, and fails because it's locked. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"environmental/electronic/button_click_1.wav" : "Environmental/Electronic/Button_Click_1.wav"
		"usable/openable/squeaky_metal door/locked.wav" : "Usable/Openable/Squeaky_Metal Door/Locked.wav"
		"usable/openable/standard_door/locked.wav" : "Usable/Openable/Standard_Door/Locked.wav"
	]
	diceroll(choices) : "Dice-Roll" : 1 : "[VTMB] Make attempt to open it anyway [not tested]." = []
	
	spawnflags(flags) =
	[
		1 : "Flag 1 (unknown yet)" : 0
		4 : "Flag 4 (unknown yet)" : 0
	]
]

@PointClass
base (
	c_Lockable1,
	c_Lockable2,
	e_prop_doorknob,
	RenderFields
)
//line (
//	255 255 255,
//	targetname,
//	parentname
//)
color(128 128 224)
studio()
= prop_doorknob :
	"[VTMB] A point entity for using as a player-useable doorknob. \n"+
	"Note: Don't forget to specify a parent door to this!"
[
]




//===================================================================================================================
// prop_doorknob_electronic [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	c_Lockable1,
	c_Lockable2
)
color(128 224 128)
studio()
= prop_doorknob_electronic :
	"[VTMB] A point entity for using as a player-useable electronic doorknob. \n"+
	"Note: Don't forget to specify a parent door to this!"
[
	model(studio) : "Model" : "models/scenery/misc/lock/lock.mdl" : "Door knob prop model." =
	[
		"models/scenery/misc/lock/lock.mdl" : "models/scenery/misc/lock/lock.mdl"
		"models/scenery/misc/lock/lock_left.mdl" : "models/scenery/misc/lock/lock_left.mdl"
		"models/scenery/structural/doorknoba/drknobantique.mdl" : "models/scenery/structural/doorknoba/drknobantique.mdl"
		"models/scenery/structural/doorknoba/drknobantiquel.mdl" : "models/scenery/structural/doorknoba/drknobantiquel.mdl"
		"models/scenery/structural/malkavian/doorhandle.mdl" : "models/scenery/structural/malkavian/doorhandle.mdl"
		"models/scenery/structural/malkavian/doorhandle_left.mdl" : "models/scenery/structural/malkavian/doorhandle_left.mdl"
	]
	use_icon(choices) : "Use Icon" : 53 : "An icon that indicates when player can be able to use this entity and it is openable." = []
	locked_icon(choices) : "Locked Icon" : 54 : "An icon that indicates locked state of this entity." = []
	locksnd(sound) : "Locked Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the player tries to use entity, and fails because it's locked. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"environmental/electronic/button_click_1.wav" : "Environmental/Electronic/Button_Click_1.wav"
		"environmental/electronic/deny_beep.wav" : "Environmental/Electronic/Deny_Beep.wav"
	]
	key_icon(choices) : "Key Icon" : 5 : "An icon that will be displayed near this entity when the required key found." = []
	difficulty(choices) : "Difficulty" : 1 : "Entity's unlock difficulty. Only with sufficient skill level, the player will be able to open it." = []
]






//===================================================================================================================
// prop_padlock [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	c_Lockable1,
	c_Lockable2
)
studio()
= prop_padlock :
	"[VTMB] A point entity for using as a player-openable padlock for some objects. \n"+
	"Note: Don't forget to specify a parent objects to this!"
[
	model(studio) : "Model" : "models/scenery/misc/padlock1/padlock1.mdl" : "Padlock prop model." =
	[
		"models/scenery/misc/padlock1/padlock1.mdl" : "models/scenery/misc/padlock1/padlock1.mdl"
	]
	use_icon(choices) : "Use Icon" : 53 : "An icon that indicates when player can be able to use this entity and it is openable." = []
	locked_icon(choices) : "Locked Icon" : 54 : "An icon that indicates locked state of this entity." = []
	locksnd(sound) : "Locked Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the player tries to use entity, and fails because it's locked. \nClick arrow button and scroll down if you want to use sounds from default game maps." =
	[
		"environmental/electronic/button_click_1.wav" : "Environmental/Electronic/Button_Click_1.wav"
		"environmental/electronic/deny_beep.wav" : "Environmental/Electronic/Deny_Beep.wav"
	]
	key_icon(choices) : "Key Icon" : 5 : "An icon that will be displayed near this entity when the required key found." = []
	difficulty(choices) : "Difficulty" : 5 : "Entity's unlock difficulty. Only with sufficient skill level, the player will be able to open it." = []

 // unique
	health(float) : "Strength" : 0 : "Padlock's health points that will spent before it breaks. \n'0' = not breakable."
]























































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// VTMB Specific Props
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// prop_clockhand [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_clockhand
[
	model(studio) : "Hand Model" : "models/scenery/misc/clock/hand.mdl" : "Clock-hand prop model. \nClick arrow button if you want to use game's default model." =
	[
		"models/scenery/misc/clock/hand.mdl" : "models/scenery/misc/clock/hand.mdl"
	]
	sep_clhmain(string) readonly: "------------------------------------"

	units_per_rot(choices) : "Seconds/Rotation" : 240 : "Num of units that clockhand pass at full rotation." =
	[
		1: "1 second"
		10: "10 seconds"
		30: "30 seconds"
		60: "60 (1 min)"
		90: "90 (1.5 min)"
		120: "120 (2 min)"
		180: "180 (3 min)"
		240: "240 (4 min)"
		300: "300 (5 min)"
		600: "600 (10 min)"
		900: "900 (15 min)"
		1800: "1800 (30 min)"
		2700: "2700 (45 min)"
		3600: "3600 (1 hour)"
	]
	rotational_axis(choices) : "Rotation Axis (Y/Z/X)" : 2 : "Hand's rotational axis." =
	[
		0 : "Y"
		1 : "Z"
		2 : "X"
	]
	timer_entity(target_destination) : "Timer Entity" : : "A link to the timer entity to control clock-hand rotation [not tested]."
	timer_elapsed(choices) : "Stop on Timer Elapsed" : 1 : "Stops rotating when timer given by timer entity is elapsed [not tested]." = [ 0: "No" 1: "Yes" ]
	units(integer) : "Num Units (?)" : 0 : "Number of units to use? [not tested]."
]

@PointClass
base (
	Studiomodel,
	e_prop_clockhand,
	RenderFields
)
studioprop()
= prop_clockhand :
	"[VTMB] A prop that simulates clock's hand behavior."
[
	// RF order fix
]





//===================================================================================================================
// prop_physics_contested [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_physics_contested
[
	sep_pprpcont(string) readonly: "------------------------------------"
	break_sound(sound) : "Break Sound" :  : "Sound played when the prop breaks." =
	[
		"debris/metal3.wav" : "debris/metal3.wav"
	]
	required_strength(integer) : "Required Strength" : 2 : "Player's strength that required to break it."
	
	// outputs
	output OnBreakConstraint(void) : "Fired when this prop constrains to break."
]

@PointClass
base (
	BasePropPhysics,
	e_prop_physics_contested,
	RenderFields
)
studioprop()
= prop_physics_contested :
	"[VTMB] Contested physics prop. Also see 'prop_physics'."
[
	// RF order fix
]





//===================================================================================================================
// prop_destructable [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_destructable
[
	model(studio) : "Model" : "models/scenery/misc/BoxesBreakable/BoxesBreakable_D0.mdl" : "Destructable prop model."

	sep_pprpmdls(string) readonly: "------------------------------------"

	// damage models
	dmg_model_1(studio) : "Damage Model 1" :  : "Spawn random of these models when entity damaged." = [ "models/scenery/misc/BoxesBreakable/BoxesBreakable_D1.mdl" : "models/scenery/misc/BoxesBreakable/BoxesBreakable_D1.mdl"]
	dmg_model_2(studio) : "Damage Model 2" :  : "Spawn random of these models when entity damaged." = [ "models/scenery/misc/BoxesBreakable/BoxesBreakable_D2.mdl" : "models/scenery/misc/BoxesBreakable/BoxesBreakable_D2.mdl"]
	dmg_model_3(studio) : "Damage Model 3" :  : "Spawn random of these models when entity damaged." = [ "models/scenery/misc/BoxesBreakable/BoxesBreakable_D3.mdl" : "models/scenery/misc/BoxesBreakable/BoxesBreakable_D3.mdl"]
	dmg_model_4(studio) : "Damage Model 4" :  : "Spawn random of these models when entity damaged."
	dmg_model_5(studio) : "Damage Model 5" :  : "Spawn random of these models when entity damaged."
	dmg_model_6(studio) : "Damage Model 6" :  : "Spawn random of these models when entity damaged."
	dmg_model_7(studio) : "Damage Model 7" :  : "Spawn random of these models when entity damaged."
	dmg_model_0(studio) : "Damage Model 0" :  : "Spawn random of these models when entity damaged."

	sep_pprpdest(string) readonly: "------------------------------------"

	collideable_gibs(choices) : "Collidable Gibs" : 0 : "[VTMB] Collide model's gibs with environment when it breaks [not tested]." = 
	[
		0 : "Mode 0 (unknown)"
		1 : "Mode 1 (unknown)"
		2 : "Mode 2 (unknown)"
	]
	// destruct-specs
	break_on_end(choices) : "Break on End" : 0 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]
	health(integer) : "Prop's Strength" : 0 : "[VTMB] Number of points of damage to take before breaking this prop. \n'0' = not breakable."
	damage_absorption(integer) : "Damage Absorption" : 0 : "[VTMB] Unknown yet..."
	dmg_filter_name(target_destination) : "Damage Filter" : : "Name of the filter entity that controls which entities can damage us."
	physics_level(integer) : "Physics Level" : 9999 : "[VTMB] Unknown yet..."
	only_dmg_on_input(choices) : "Damage Only on Input" : : "Make damage only if input specified." = [ "" : "No" 1 : "Yes" ]
	
	spawnflags(flags) =
	[
		8192 : "Flag 8192 (unknown yet)" : 0
	]
 
	// inputs
	input SetToDamageLevel(string) : "Sets to specified damage level [not tested]."
	input PlayAnimation(string) : "Plays selected animation [not tested]."
	
	// outputs
	output OnBreakLevel1(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel2(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel3(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel4(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel5(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel6(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel7(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLevel8(void) : "Fired when break level reaches present value [not tested]."
	output OnBreakLastLevel(void) : "Fired when break level reaches last value [not tested]."
]

@PointClass
base (
	Studiomodel,
	p_Global,
	o_VBreakable,
	e_prop_destructable,
	RenderFields
)
studioprop()
= prop_destructable :
	"[VTMB] Destructable physics prop. Also see 'prop_physics'."
[
	// RF order fix
]





//===================================================================================================================
// CLASS: VHackingBase [VTMB-specific]
//===================================================================================================================

@BaseClass
= VHackingBase
[
	// appearance
	colorscheme(choices) : "Screen Color Scheme" : 0 : "Defines color tint of screen elements." =
	[
		0 : "White (default)"
		1 : "White (tinted)"
		2 : "Orange"
		3 : "Green"
	]
	textrows(choices) : "Num of Text Rows" : 24 : "The number of text rows located on screen." =
	[
		 6 : "6 (keypad)"
		 8 : "8"
		24 : "24 (computer)"
		32 : "32"
	]
	textcolumns(choices) : "Num of Text Columns" : 36 : "The number of text columns located on screen." =
	[
		20 : "20 (keypad)"
		24 : "24"
		36 : "36 (computer)"
		42 : "42"
		56 : "56"
		72 : "72"
	]
	soundgroup(choices) : "Sound Group" : "old_computer" : "The group of sounds relative to 'usable/computers/<group-name>/<action>.wav' that specifies certain action sounds." =
	[
		"tech_computer" : "Tech Computer"
		"old_computer" : "Old Computer"
		"fancy_computer" : "Fancy Computer"
		"keypad" : "Keypad"
		"elevator_button" : "Elevator Button"
	]

	sep_hackhack(string) readonly: "------------------------------------"

	// hacking
	difficulty(choices) : "Hacking Difficulty" : 5 : "Hackable's breaking difficulty. Only with sufficient skill level, the player will be able to hack it." =
	[
		0 : "None"
		1 : "1"
		2 : "2"
		3 : "3"
		4 : "4"
		5 : "5"
		6 : "6"
		7 : "7"
		8 : "8"
		9 : "9"
		10 : "10"
	]
	skilltype(choices) : "Skill Type" : 2 : "Defines player's skill type, e.g. hacking, lockpicking, etc." =
	[
		1 : "Lockpicking"
		2 : "Hacking"
		3 : "Code-breaking"
	]
	diceroll(choices) : "Dice-Roll" :  : "Make attempt to hack it anyway [not tested]." = [ "": "No" 1: "Yes" ]

	spawnflags(flags) =
	[
		1 : "Flag 1 (unknown yet)" : 0
	]

	// inputs
	input ResetDifficulty(void) : "Reset hackable's difficulty level to default."

	// outputs
	output OnSkillSuccess(void) : "Fired when player's skill matches and hacking procedure was successful."
	output OnSkillFail(void) : "Fired when player's skill doesn't match and hacking procedure failed."
	output OnSkillBotch(void) : "Fired when player's skill botched hacking procedure [not tested]."
	output OnSkillAttemptBegin(void) : "Fired when player attempts to hack this object."
	output OnSkillAttemptCycle(void) : "Fired when player cycles his attempts to hack this object [not tested]."
]



//===================================================================================================================
// prop_hacking [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_hacking_1
[
	model(studio) : "Computer Model" : "models/scenery/furniture/computer/monitor_useable.mdl" : "Prop model of hackable object, as usual - monitors, laptops, panes etc. \nClick arrow key and scroll down if you want to use one of game's default model." =
	[
		"models/scenery/furniture/computer/monitor_useable.mdl" : "models/scenery/furniture/computer/monitor_useable.mdl"
		"models/scenery/furniture/computer_new/largemonitor_hackable.mdl" : "models/scenery/furniture/computer_new/largemonitor_hackable.mdl"
		"models/scenery/furniture/computer_new/monitor_hackable.mdl" : "models/scenery/furniture/computer_new/monitor_hackable.mdl"
		"models/scenery/misc/laptop/laptop2.mdl" : "models/scenery/misc/laptop/laptop2.mdl"
		"models/scenery/misc/laptop/laptop2clean.mdl" : "models/scenery/misc/laptop/laptop2clean.mdl"
		"models/scenery/misc/militarycomputer/militarycomputer2.mdl" : "models/scenery/misc/militarycomputer/militarycomputer2.mdl"
		"models/scenery/structural/sewer_computers/sewercomp_screen.mdl" : "models/scenery/structural/sewer_computers/sewercomp_screen.mdl"
	]
	sep_hackmain(string) readonly: "------------------------------------"

	// hackfile
	hack_file(choices) : "Definition File" : "vdata/HackTerminals/haven_pc.txt" : "This is 'vdata/HackTerminals/<name>.txt' related script file that contains the certain computer's data and it's interactions. \nClick arrow button and scroll down if you want to use one of game's default scripts." =
	[
	// HackTerminalsList:
		"vdata/HackTerminals/asianvamp_laptop.txt" : "asianvamp_laptop.txt"
		"vdata/HackTerminals/beachouse_computer.txt" : "beachouse_computer.txt"
		"vdata/HackTerminals/bertrams_computer.txt" : "bertrams_computer.txt"
		"vdata/HackTerminals/blood_bank_computer.txt" : "blood_bank_computer.txt"
		"vdata/HackTerminals/carson_computer.txt" : "carson_computer.txt"
		"vdata/HackTerminals/clinic_administration_computer.txt" : "clinic_administration_computer.txt"
		"vdata/HackTerminals/clinic_cis_computer.txt" : "clinic_cis_computer.txt"
		"vdata/HackTerminals/clinic_security_computer.txt" : "clinic_security_computer.txt"
		"vdata/HackTerminals/confessione3_computer.txt" : "confessione3_computer.txt"
		"vdata/HackTerminals/dane_computer.txt" : "dane_computer.txt"
		"vdata/HackTerminals/empire_lobby_computer.txt" : "empire_lobby_computer.txt"
		"vdata/HackTerminals/fu_server.txt" : "fu_server.txt"
		"vdata/HackTerminals/fu_terminals.txt" : "fu_terminals.txt"
		"vdata/HackTerminals/fu_terminals2.txt" : "fu_terminals2.txt"
		"vdata/HackTerminals/haven_pc.txt" : "haven_pc.txt"
		"vdata/HackTerminals/jeanette_laptop.txt" : "jeanette_laptop.txt"
		"vdata/HackTerminals/krime_computer.txt" : "krime_computer.txt"
		"vdata/HackTerminals/kilpatricks_computer.txt" : "kilpatricks_computer.txt"
		"vdata/HackTerminals/library_computer.txt" : "library_computer.txt"
		"vdata/HackTerminals/malcolm_computer.txt" : "malcolm_computer.txt"
		"vdata/HackTerminals/milligan_computer.txt" : "milligan_computer.txt"
		"vdata/HackTerminals/morgue_computer.txt" : "morgue_computer.txt"
		"vdata/HackTerminals/museum_computer.txt" : "museum_computer.txt"
		"vdata/HackTerminals/museum_computer_2.txt" : "museum_computer_2.txt"
		"vdata/HackTerminals/museum_computer_3.txt" : "museum_computer_3.txt"
		"vdata/HackTerminals/museum_computer_4.txt" : "museum_computer_4.txt"
		"vdata/HackTerminals/netcafe_computer.txt" : "netcafe_computer.txt"
		"vdata/HackTerminals/netcafe_computer_2.txt" : "netcafe_computer_2.txt"
		"vdata/HackTerminals/netcafe_computer_3.txt" : "netcafe_computer_3.txt"
		"vdata/HackTerminals/netcafe_computer_4.txt" : "netcafe_computer_4.txt"
		"vdata/HackTerminals/shortcut_computer.txt" : "shortcut_computer.txt"
		"vdata/HackTerminals/shrekhub1_terminal.txt" : "shrekhub1_terminal.txt"
		"vdata/HackTerminals/shrekhub2_terminal.txt" : "shrekhub2_terminal.txt"
		"vdata/HackTerminals/shrekhub3_metalop.txt" : "shrekhub3_metalop.txt"
		"vdata/HackTerminals/shrekhub3_metalsec.txt" : "shrekhub3_metalsec.txt"
		"vdata/HackTerminals/shrekhub4_terminal1.txt" : "shrekhub4_terminal1.txt"
		"vdata/HackTerminals/shrekhub4_terminal2.txt" : "shrekhub4_terminal2.txt"
		"vdata/HackTerminals/shrekhub4_terminal3.txt" : "shrekhub4_terminal3.txt"
		"vdata/HackTerminals/shrekhub4_terminal4.txt" : "shrekhub4_terminal4.txt"
		"vdata/HackTerminals/shrekhub4_terminal5.txt" : "shrekhub4_terminal5.txt"
		"vdata/HackTerminals/shrekhub4_terminal6.txt" : "shrekhub4_terminal6.txt"
		"vdata/HackTerminals/sinbin.txt" : "sinbin.txt"
		"vdata/HackTerminals/skyline_apt3.txt" : "skyline_apt3.txt"
		"vdata/HackTerminals/skyline_security.txt" : "skyline_security.txt"
		"vdata/HackTerminals/soc_int_hack.txt" : "soc_int_hack.txt"
		"vdata/HackTerminals/tawni_terminal.txt" : "tawni_terminal.txt"
		"vdata/HackTerminals/therese_pc.txt" : "therese_pc.txt"
		"vdata/HackTerminals/tutorial_computer.txt" : "tutorial_computer.txt"
		"vdata/HackTerminals/ventruetower2_terminal.txt" : "ventruetower2_terminal.txt"
		"vdata/HackTerminals/warrens2_computer.txt" : "warrens2_computer.txt"
	]
]

@BaseClass
= e_prop_hacking_2
[
	sep_hackadds(string) readonly: "------------------------------------"

	// other
	global_email(choices) : "Send Global Emails" : 0 : "Allow global-spreaded emails will send to this terminal [not tested]." = [ 0: "No" 1: "Yes" ]

	ss_start(float) : "S/S Start Time (?)" : "5.0" : "[VTMB] Unknown yet..."
	ss_delay(float) : "S/S Delay Time (?)" : "1.5" : "[VTMB] Unknown yet..."
	
	// outputs
	output OnTrigger0(void) : "Fired when trigger 0 activates."
	output OnTrigger1(void) : "Fired when trigger 1 activates."
	output OnTrigger2(void) : "Fired when trigger 2 activates."
	output OnTrigger3(void) : "Fired when trigger 3 activates."
	output OnTrigger4(void) : "Fired when trigger 4 activates."
	output OnTrigger5(void) : "Fired when trigger 5 activates."
	output OnTrigger6(void) : "Fired when trigger 6 activates."
	output OnTrigger7(void) : "Fired when trigger 7 activates."
]

@PointClass
base(
	Studiomodel,
	c_VEnableDisable,
	e_prop_hacking_1,
	VHackingBase,
	e_prop_hacking_2,
	o_VUsableExt,
	RenderFields
)
studioprop()
= prop_hacking :
	"[VTMB] A point entity that used as a hackable computer/terminal with useful information."
[
	// RF order fix
]




//===================================================================================================================
// prop_keypad [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_keypad
[
	model(studio) : "Keypad Model" : "models/scenery/furniture/alarmkeypad/alarmkeypad.mdl" : "Keypad's prop model. \nClick arrow key and scroll down if you want to use game's default model." =
	[
		"models/scenery/furniture/alarmkeypad/alarmkeypad.mdl" : "models/scenery/furniture/AlarmKeypad/AlarmKeypad.mdl"
	]
	sep_kpmain(string) readonly: "------------------------------------"

	passcode(string) : "Pass Code" : "1234" : "Pass code that unlock linked door."
	text_id(choices) : "Screen's Text ID" : "keypad example" : "An entry in 'vdata/hackterminals/prop_keypad.txt' that defines on-screen text header." =
	[
		"bloodbank" : "bloodbank"
		"fusynd" : "fusynd"
		"glaze" : "glaze"
		"hannahs" : "hannahs"
		"kamikazinet" : "kamikazinet"
		"museum_restricted" : "museum_restricted"
		"skyline_lootapt" : "skyline_lootapt"
		"keypad example" : "keypad example"
	]

	// outputs
	output OnCorrectPassword(void) : "Fired when entered the correct pass code."
	output OnIncorrectPassword(void) : "Fired when entered pass code is incorrect."
]

@PointClass
base (
	Studiomodel,
	c_VEnableDisable,
	e_prop_keypad,
	VHackingBase,
	o_VUsableExt,
	RenderFields
)
studioprop()
= prop_keypad :
	"[VTMB] Simply put - code lock."
[
	textrows(choices) : "Num of Text Rows" : 6 : "The number of text columns located on screen." = []
	textcolumns(choices) : "Num of Text Columns" : 20 : "The number of text columns located on screen." = []
	soundgroup(choices) : "Sound Group" : "keypad" : "The group of sounds relative to 'usable/computers/<group-name>/<action>.wav' that specifies certain action sounds." = []
	// RF order fix
]




//===================================================================================================================
// prop_haunted [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_haunted
[
	model(studio) : "Prop Model" : "models/scenery/furniture/vase/vaseb_demon.mdl" : "Haunted prop model. \nClick arrow button and scroll down if you want to use one of original maps' models." =
	[
		"models/scenery/furniture/kitchen/chef_knife_demon.mdl" : "models/scenery/furniture/kitchen/chef_knife_demon.mdl"
		"models/scenery/furniture/kitchen/cleaver_demon.mdl" : "models/scenery/furniture/kitchen/cleaver_demon.mdl"
		"models/scenery/furniture/kitchen/pana.mdl" : "models/scenery/furniture/kitchen/pana.mdl"
		"models/scenery/furniture/kitchen/panb.mdl" : "models/scenery/furniture/kitchen/panb.mdl"
		"models/scenery/furniture/kitchen/panc.mdl" : "models/scenery/furniture/kitchen/panc.mdl"
		"models/scenery/furniture/kitchen/pota_demon.mdl" : "models/scenery/furniture/kitchen/pota_demon.mdl"
		"models/scenery/furniture/kitchen/potb_demon.mdl" : "models/scenery/furniture/kitchen/potb_demon.mdl"
		"models/scenery/furniture/lampfancyhotel/lampfancyhotel_2demon.mdl" : "models/scenery/furniture/lampfancyhotel/lampfancyhotel_2demon.mdl"
		"models/scenery/furniture/lampfancyhotel/lampfancyhotel_demon.mdl" : "models/scenery/furniture/lampfancyhotel/lampfancyhotel_demon.mdl"
		"models/scenery/furniture/microwave/microwave_demon.mdl" : "models/scenery/furniture/microwave/microwave_demon.mdl"
		"models/scenery/furniture/Paintings/painting1_demon.mdl" : "models/scenery/furniture/Paintings/painting1_demon.mdl"
		"models/scenery/furniture/Paintings/picture2_demon.mdl" : "models/scenery/furniture/Paintings/picture2_demon.mdl"
		"models/scenery/furniture/Paintings/picture_demon.mdl" : "models/scenery/furniture/Paintings/picture_demon.mdl"
		"models/scenery/furniture/phone_stylish/phone3.mdl" : "models/scenery/furniture/phone_stylish/phone3.mdl"
		"models/scenery/furniture/TiffanyLamp/tiffanylamp_demon.mdl" : "models/scenery/furniture/TiffanyLamp/tiffanylamp_demon.mdl"
		"models/scenery/furniture/tzimisce_furiture/tzthing.mdl" : "models/scenery/furniture/tzimisce_furiture/tzthing.mdl"
		"models/scenery/furniture/vase/vasea_demon.mdl" : "models/scenery/furniture/vase/vasea_demon.mdl"
		"models/scenery/furniture/vase/vaseb_demon.mdl" : "models/scenery/furniture/vase/vaseb_demon.mdl"
		"models/scenery/misc/gio_spirit/gio_spirit.mdl" : "models/scenery/misc/gio_spirit/gio_spirit.mdl"
		"models/scenery/misc/paint_bucket_brush/paint_bucket2_demon.mdl" : "models/scenery/misc/paint_bucket_brush/paint_bucket2_demon.mdl"
		"models/scenery/misc/platters/platter_golda_demon.mdl" : "models/scenery/misc/platters/platter_golda_demon.mdl"
		"models/scenery/misc/rivet/rivet.mdl" : "models/scenery/misc/rivet/rivet.mdl"
		"models/scenery/misc/servicebell/servicebell_demon.mdl" : "models/scenery/misc/servicebell/servicebell_demon.mdl"
		"models/scenery/misc/toolboxes/toolbox_b_demon.mdl" : "models/scenery/misc/toolboxes/toolbox_b_demon.mdl"
		"models/scenery/pipes/valve_wheel/valve_wheel.mdl" : "models/scenery/pipes/valve_wheel/valve_wheel.mdl"
		"models/scenery/structural/chandelier/chandelier2_2demon.mdl" : "models/scenery/structural/chandelier/chandelier2_2demon.mdl"
		"models/gibs/hgibslarm_prop.mdl" : "models/gibs/hgibslarm_prop.mdl"
		"models/gibs/hgibslleg_prop.mdl" : "models/gibs/hgibslleg_prop.mdl"
		"models/gibs/hgibsrarm_prop.mdl" : "models/gibs/hgibsrarm_prop.mdl"
		"models/gibs/hgibsskull_prop.mdl" : "models/gibs/hgibsskull_prop.mdl"
		"models/gibs/hgibstorso_prop.mdl" : "models/gibs/hgibstorso_prop.mdl"
	]
	sep_hpfling(string) readonly: "------------------------------------"

	// fling values
	fling_dest(vecline) : "Fling Destination" :  : "The world's X/Y/Z-origin at which the prop will be flinged when player near it."
	target_player(choices) : "Fling to Player" : 0 : "If enabled, the player will be the fling target for this prop." = [ 0: "No" 1: "Yes" ]
	fling_particle(vparticle) : "Fling Particle" : "particles/ethereal_fling_emitter.txt" : "The particle script that spawns the fling effect particle. \nClick arrow button and scroll down if you want to use one of original maps' particles." =
	[
	// ParticleList:
		"particles/bloodcreature_emitter.txt" : "particles/BloodCreature_emitter.txt"
		"particles/ethereal_fling_emitter.txt" : "particles/Ethereal_Fling_emitter.txt"
		"particles/rivet_pop_emitter.txt" : "particles/Rivet_Pop_emitter.txt"
		"particles/sparks_big_emitter.txt" : "particles/Sparks_Big_emitter.txt"
	]
	fling_sound(sound) : "Fling Sound" : "Area/Santa_Monica/Ocean_House/Ethereal_Fling.wav" : "Sound played when the prop flings. \nClick arrow button and scroll down if you want to use one of original maps' sounds." =
	[
		"Area/Santa_Monica/Ocean_House/Ethereal_Fling.wav" : "Area/Santa_Monica/Ocean_House/Ethereal_Fling.wav"
		"Area/Santa_Monica/Ocean_House/Rivet_Pop1.wav" : "Area/Santa_Monica/Ocean_House/Rivet_Pop1.wav"
		"Area/Santa_Monica/Ocean_House/Rivet_Pop2.wav" : "Area/Santa_Monica/Ocean_House/Rivet_Pop2.wav"
		"Area/Santa_Monica/Ocean_House/Rivet_Pop3.wav" : "Area/Santa_Monica/Ocean_House/Rivet_Pop3.wav"
		"Character/monster/ghost/ghost_laugh1.wav" : "Character/monster/ghost/ghost_laugh1.wav"
		"Character/monster/ghost/ghost_protest1.wav" : "Character/monster/ghost/ghost_protest1.wav"
		"Character/monster/ghost/ghost_scream1.wav" : "Character/monster/ghost/ghost_scream1.wav"
		"Character/monster/ghost/ghost_scream2.wav" : "Character/monster/ghost/ghost_scream2.wav"
		"Character/monster/ghost/ghost_scream3.wav" : "Character/monster/ghost/ghost_scream3.wav"
		"Character/monster/ghost/ghost_sigh1.wav" : "Character/monster/ghost/ghost_sigh1.wav"
		"Character/monster/ghost/ghost_stand_back.wav" : "Character/monster/ghost/ghost_stand_back.wav"
	]
	velocity(integer) : "Fling Velocity" : 800 : "This is the speed which the object will fling to, in units per second."

	sep_hpshk(string) readonly: "------------------------------------"

	// shake values
	min_shake(integer) : "Min Shake Space" : 2 : "Minimum distance that prop will shake when player is near it, in units."
	max_shake(integer) : "Max Shake Space" : 5 : "Maximum distance that prop will shake when player is near it, in units."
	shake_sound(sound) : "Shake Sound" : "Area/Santa_Monica/Ocean_House/Ethereal_Shake.wav" : "Sound played when the prop shakes. \nClick arrow button and scroll down if you want to use one of original maps' sounds." =
	[
		"Area/Santa_Monica/Ocean_House/Ethereal_Shake.wav" : "Area/Santa_Monica/Ocean_House/Ethereal_Shake.wav"
		"Area/Santa_Monica/Ocean_House/Shakes/BellShake.wav" : "Area/Santa_Monica/Ocean_House/Shakes/BellShake.wav"
		"Area/Santa_Monica/Ocean_House/Shakes/PhoneShake.wav" : "Area/Santa_Monica/Ocean_House/Shakes/PhoneShake.wav"
		"Area/Santa_Monica/Ocean_House/Shakes/Shake1.wav" : "Area/Santa_Monica/Ocean_House/Shakes/Shake1.wav"
		"Area/Santa_Monica/Ocean_House/Shakes/Shake2.wav" : "Area/Santa_Monica/Ocean_House/Shakes/Shake2.wav"
		"Area/Santa_Monica/Ocean_House/Shakes/Shake3.wav" : "Area/Santa_Monica/Ocean_House/Shakes/Shake3.wav"
		"Area/Santa_Monica/Ocean_House/Shakes/Shake4.wav" : "Area/Santa_Monica/Ocean_House/Shakes/Shake4.wav"
		"Area/Santa_Monica/Ocean_House/Shakes/Shake5.wav" : "Area/Santa_Monica/Ocean_House/Shakes/Shake5.wav"
	]
	shake_particle(vparticle) : "Shake Particle" : "particles/Ethereal_Shake_Emitter.txt" : "The particle script that spawns the shake effect particle. \nClick arrow button and scroll down if you want to use original maps' particles." =
	[
	// ParticleList:
		"particles/Ethereal_Shake_Emitter.txt" : "particles/Ethereal_Shake_Emitter.txt"
	]
	stop_shake_fadeout(float) : "Shake Fade-out Time" : "1.2" : "The time required for full stopping of shaking, in seconds."

	sep_hpspn(string) readonly: "------------------------------------"

	// spin values
	spin_pitch_scale(float) : "Spin Pitch Scale" : "1.0" : "Override spin animation at Z axis."
	spin_yaw_scale(float) : "Spin Yaw Scale" : "1.0" : "Override spin animation at X axis."
	spin_roll_scale(float) : "Spin Roll Scale" : "1.0" : "Override spin animation at Y axis."

	sep_hpadds1(string) readonly: "------------------------------------"

	// physics
	damage(integer) : "Damage Points" : 10 : "Amount of health taken away when the prop attacks player."
	health(integer) : "Prop's Strength" : 0 : "Number of points of damage to take before breaking this prop. \n'0' = not breakable."
	break_sound(sound) : "Break Sound" : "Surfaces/Ceramic/Break.wav" : "Sound played when this prop breaks after flinging. \nClick arrow button and scroll down if you want to use one of original maps' sounds." =
	[
		"Area/Santa_Monica/Ocean_House/Shakes/BellBreak.wav" : "Area/Santa_Monica/Ocean_House/Shakes/BellBreak.wav"
		"Area/Santa_Monica/Ocean_House/Shakes/PhoneBreak.wav" : "Area/Santa_Monica/Ocean_House/Shakes/PhoneBreak.wav"
		"Surfaces/Ceramic/Break.wav" : "Surfaces/Ceramic/Break.wav"
	]

	sep_hpadds2(string) readonly: "------------------------------------"

	// animations
	demo_sequence(choices) : "Demo Animation" : "None" : "[VTMB] Default animation sequence for the model to be playing after spawning." = [ "None":"None" "spin":"spin" ]
	npc_transparent(choices) : "NPC-Transparent" : 1 : "[VTMB] NPCs are transparent for this object [not tested]." = [ 0 : "No" 1 : "Yes" ]

	// inputs
	input FlingNow(void) : "Fling right now."
	input StopShaking(void) : "Stop shaking."
	input StartShaking(void) : "Start shaking."
	input ShakeAndFling(void) : "Start shake and fling."
	
	// outputs
	output OnFling(void) : "Fired when object flinging."
	output OnBeginShake(void) : "Fired when object begins to shake."
	output OnEndShake(void) : "Fired when object ends to shake."
]

@PointClass
base (
	Studiomodel,
	e_prop_haunted,
	o_VBreakable,
	RenderFields
)
halfgridsnap
studioprop()
= prop_haunted :
	"[VTMB] Haunted prop. \nA point entity that responds to the player movement and flings itself to damage him."
[
	// RF Order fix
]



//===================================================================================================================
// prop_largehull_ignore [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Studiomodel,
	o_VBreakable
)
studioprop()
= prop_largehull_ignore :
	"[VTMB] Prop with unknown action [not tested fully]. \nFound at the 'observatory' and 'pillar2'..."
[
	sep_lhiphys(string) readonly: "------------------------------------"

	solid(choices) : "Collisions" : 6 : "Model's collision type." =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
]




//===================================================================================================================
// prop_mover [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_mover
[
	model(studio) : "Prop Model" :  : "Mover prop model. \nClick arrow button and scroll down if you want to use one of original maps' models." =
	[
		"models/items/CarStereo/Ground/CarStereo.mdl" : "models/items/CarStereo/Ground/CarStereo.mdl"
		"models/scenery/furniture/DiningTableOldBeachHouse/DiningTableOldBeachHouse.mdl" : "models/scenery/furniture/DiningTableOldBeachHouse/DiningTableOldBeachHouse.mdl"
		"models/scenery/misc/elevator/cage.mdl" : "models/scenery/misc/elevator/cage.mdl"
		"models/scenery/structural/warehouse/small_pallet.mdl" : "models/scenery/structural/warehouse/small_pallet.mdl"
		"models/scenery/vehicles/forklift/forklift_noWheels.mdl" : "models/scenery/vehicles/forklift/forklift_noWheels.mdl"
	]
	sep_movemov(string) readonly: "------------------------------------"

	move_dest(vecline) : "Move Destination" :  : "This entity's move end position (world's X/Y/Z origin)."
	move_speed(integer) : "Move Speed (units/sec)" : 45 : "Speed of entity's moving, in units per second."

	sep_moverot(string) readonly: "------------------------------------"

	rot_axis(choices) : "Rotation Axis" : 1 : "Defines prop rotation axis [not tested]." = 
	[
		0 : "Y"
		1 : "Z"
		2 : "X"
	]
	rot_dist(integer) : "Rotation Angle" : 90 : "Max allowed rotation angle around given axis [not tested]."
	rot_speed(integer) : "Rotation Speed" : 45 : "Speed of rotation moving [not tested]."

	sep_moveadds(string) readonly: "------------------------------------"

	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
	demo_sequence(choices) : "Demo Animation" : "None" : "Default animation sequence for the model to be playing after spawning." = [ "None":"None"  "idle":"Idle" ]
	npc_transparent(choices) : "NPC-Transparent" : 1 : "NPCs are transparent for this object [not tested]." = [ 0 : "No" 1 : "Yes" ]
	use_pref(choices) : "Use Preference" : 0 : "[VTMB] Unknown yet..." = [ 0: "No" 1: "Yes" ]

	// inputs
	input MoveToDest(void) : "[VTMB] Moves object to its destination position [not tested]."
	input MoveToHome(void) : "[VTMB] Moves object to its home position [not tested]."
	input RotateToDest(void) : "[VTMB] Rotates object to its destination position [not tested]."
	input RotateToHome(void) : "[VTMB] Rotates object to its home position [not tested]."

	// outputs
	output OnAngularMoveDone(void) : "Fires input when object done any angular moving."
	output OnLinearMoveDone(void) : "Fires input when object done any linear moving."
]

@PointClass
base (
	Studiomodel,
	e_prop_mover,
	RenderFields
)
halfgridsnap
studioprop()
= prop_mover :
	"[VTMB] Prop that moves various objects [-? not known properly yet]. \nFound at the 'beachhouse' map."
[
	// RF order fix
]



//===================================================================================================================
// prop_radio [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_radio
[
	model(studio) : "Model" : "models/scenery/misc/GehtoBlaster1/GehtoBlaster1.mdl" : "Radio prop model. \nClick arrow key and scroll down if you want to use original game's models." =
	[
		"models/scenery/misc/GehtoBlaster1/GehtoBlaster1.mdl" : "models/scenery/Misc/GehtoBlaster1/GehtoBlaster1.mdl"
		"models/scenery/furniture/Stereo/Stereo.mdl" : "models/scenery/Furniture/Stereo/Stereo.mdl"
	]
	sep_radmain(string) readonly: "------------------------------------"

	volume(float) : "Volume (1 = max)" : "0.8" : "The volume of playing sound."
	radius(float) : "Hearing Radius" : 800 : "Maximum radio hearing radius, in units."

	spawnflags(flags) = 
	[
		1 : "Start Turned On" : 0
	]

	//inputs
	input Activate(void) : "Activate radio."
	input Deactivate(void) : "Dectivate radio."
	input SetSoundOverrideEnt(string) : "Overrides specified entity to be used as a new sound source."
]

@PointClass
base (
	Studiomodel,
	e_prop_radio,
	RenderFields
)
studioprop()
sphere(radius)
= prop_radio :
	"[VTMB] The storyline-dependent radio. \n\nIf you want the custom tracks to be playable, put it as 'sound/radio/*.mp3' files and use 'vdata/system/radio_data.txt' script to define tracks and story-line dependencies."
[
	// RF order fix
]





//===================================================================================================================
// prop_sign [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_sign
[
	model(studio) : "Sign Model" : "models/items/Newspaper/Ground/Newspaper.mdl" : "Sign's world model." =
	[
		"models/items/ancient_text/Ground/ancient_text.mdl" : "models/items/ancient_text/Ground/ancient_text.mdl"
		"models/items/ChildsDrawing/ChildsDrawing.mdl" : "models/items/ChildsDrawing/ChildsDrawing.mdl"
		"models/items/Clipboard/Ground/Clipboard.mdl" : "models/items/Clipboard/Ground/Clipboard.mdl"
		"models/items/LinedPaper/Ground/LinedPaper.mdl" : "models/items/LinedPaper/Ground/LinedPaper.mdl"
		"models/items/nameplate/ground/nameplate.mdl" : "models/items/nameplate/ground/nameplate.mdl"
		"models/items/Newspaper/Ground/Newspaper.mdl" : "models/items/Newspaper/Ground/Newspaper.mdl"
		"models/items/Newspaper/Ground/Newspaper_burned.mdl" : "models/items/Newspaper/Ground/Newspaper_burned.mdl"
		"models/scenery/misc/busstop/la_map.mdl" : "models/scenery/misc/busstop/la_map.mdl"
		"models/scenery/misc/busstop/santamonica_map.mdl" : "models/scenery/misc/busstop/santamonica_map.mdl"
		"models/scenery/misc/monogram/monogram.mdl" : "models/scenery/misc/monogram/monogram.mdl"
		"models/scenery/structural/chinatown/busstopsign.mdl" : "models/scenery/structural/chinatown/busstopsign.mdl"
		"models/scenery/structural/hollywood/busstopsign.mdl" : "models/scenery/structural/hollywood/busstopsign.mdl"
		"models/scenery/structural/la/busstopsign.mdl" : "models/scenery/structural/la/busstopsign.mdl"
		"models/scenery/structural/santamonica/sanbusstop.mdl" : "models/scenery/structural/santamonica/sanbusstop.mdl"
		"models/scenery/structural/smsewer/sewermap.mdl" : "models/scenery/structural/smsewer/sewermap.mdl"
	]

	sep_signmain(string) readonly: "------------------------------------"

	definition_file(vsign) : "Sign Definition File" : "vdata/signs/Newspaper_All.txt" : "Script containing sign definitions. \n"+
													  "This is 'vdata/signs/<name>.txt' related file. \nYou can also specify a custom scripts." =
	[
	// SignList:
		"vdata/Signs/Childs_Drawing.txt" : "Childs_Drawing.txt"
		"vdata/Signs/Chinatown_A.txt" : "Chinatown_A.txt"
		"vdata/Signs/Chinatown_B.txt" : "Chinatown_B.txt"
		"vdata/Signs/Chinatown_C.txt" : "Chinatown_C.txt"
		"vdata/Signs/Chinatown_D.txt" : "Chinatown_D.txt"
		"vdata/Signs/ChinatownSewer1.txt" : "ChinatownSewer1.txt"
		"vdata/Signs/Clinic_Phil_Note.txt" : "Clinic_Phil_Note.txt"
		"vdata/Signs/DowntownSewer1.txt" : "DowntownSewer1.txt"
		"vdata/Signs/DowntownSewer2.txt" : "DowntownSewer2.txt"
		"vdata/Signs/DowntownSewer3.txt" : "DowntownSewer3.txt"
		"vdata/Signs/DowntownSewer4.txt" : "DowntownSewer4.txt"
		"vdata/Signs/Empire_Note.txt" : "Empire_Note.txt"
		"vdata/Signs/Flynns_Password.txt" : "Flynns_Password.txt"
		"vdata/Signs/Hollywood_A.txt" : "Hollywood_A.txt"
		"vdata/Signs/Hollywood_B.txt" : "Hollywood_B.txt"
		"vdata/Signs/Hollywood_C.txt" : "Hollywood_C.txt"
		"vdata/Signs/HollywoodSewer1.txt" : "HollywoodSewer1.txt"
		"vdata/Signs/HollywoodSewer2.txt" : "HollywoodSewer2.txt"
		"vdata/Signs/LA_A.txt" : "LA_A.txt"
		"vdata/Signs/LA_B.txt" : "LA_B.txt"
		"vdata/Signs/LA_C.txt" : "LA_C.txt"
		"vdata/Signs/LA_D.txt" : "LA_D.txt"
		"vdata/Signs/LA_E.txt" : "LA_E.txt"
		"vdata/Signs/LA_F.txt" : "LA_F.txt"
		"vdata/Signs/Malcolm_Password_Note.txt" : "Malcolm_Password_Note.txt"
		"vdata/Signs/MalkMansion_Clue_1.txt" : "MalkMansion_Clue_1.txt"
		"vdata/Signs/MalkMansion_Clue_2.txt" : "MalkMansion_Clue_2.txt"
		"vdata/Signs/Mercurios_Note.txt" : "Mercurios_Note.txt"
		"vdata/Signs/Museum_Note.txt"  :  "Museum_Note.txt"
		"vdata/Signs/Museum_Note_2.txt" : "Museum_Note_2.txt"
		"vdata/Signs/Museum_Note_3.txt" : "Museum_Note_3.txt"
		"vdata/Signs/Newspaper_All.txt" : "Newspaper_All.txt"
		"vdata/Signs/Newspaper_Epidemic.txt" : "Newspaper_Epidemic.txt"
		"vdata/Signs/Newspaper_OH_1.txt" : "Newspaper_OH_1.txt"
		"vdata/Signs/Newspaper_OH_2.txt" : "Newspaper_OH_2.txt"
		"vdata/Signs/Newspaper_OH_3.txt" : "Newspaper_OH_3.txt"
		"vdata/Signs/Newspaper_OH_4.txt" : "Newspaper_OH_4.txt"
		"vdata/Signs/Newspaper_OH_5.txt" : "Newspaper_OH_5.txt"
		"vdata/Signs/Newspaper_OH_6.txt" : "Newspaper_OH_6.txt"
		"vdata/Signs/Newspaper_OH_7.txt" : "Newspaper_OH_7.txt"
		"vdata/Signs/Newspaper_Serial_Killer.txt" : "Newspaper_Serial_Killer.txt"
		"vdata/Signs/Newspaper_Tawni.txt" : "Newspaper_Tawni.txt"
		"vdata/Signs/Newspaper_War_1.txt" : "Newspaper_War_1.txt"
		"vdata/Signs/Newspaper_War_2.txt" : "Newspaper_War_2.txt"
		"vdata/signs/Psych_Report.txt" : "Psych_Report.txt"
		"vdata/Signs/Regents_Invitation.txt" : "Regents_Invitation.txt"
		"vdata/Signs/SantaMonica_A.txt" : "SantaMonica_A.txt"
		"vdata/Signs/SantaMonica_B.txt" : "SantaMonica_B.txt"
		"vdata/Signs/SantaMonica_C.txt" : "SantaMonica_C.txt"
		"vdata/Signs/SantaMonicaSewer1.txt" : "SantaMonicaSewer1.txt"
		"vdata/Signs/SantaMonicaSewer2.txt" : "SantaMonicaSewer2.txt"
		"vdata/Signs/Sarcophagus.txt" : "Sarcophagus.txt"
		"vdata/Signs/Shub4_Name1.txt" : "Shub4_Name1.txt"
		"vdata/Signs/Shub4_Name2.txt" : "Shub4_Name2.txt"
		"vdata/Signs/Shub4_Name3.txt" : "Shub4_Name3.txt"
		"vdata/Signs/Shub4_Name4.txt" : "Shub4_Name4.txt"
		"vdata/Signs/Shub4_Name5.txt" : "Shub4_Name5.txt"
		"vdata/Signs/Sinbin_Note.txt" : "Sinbin_Note.txt"
		"vdata/Signs/Tutorial_Note.txt" : "Tutorial_Note.txt"
	]

	use_icon(choices) : "Use Icon" : 18 : "An icon that indicates when player can be able to use this entity and it is openable." =
	[
		0  : "None"
		18 : "Note"
		40 : "Clipboard"
		41 : "Printed Papers"
		56 : "Bus Stop Map"
		57 : "Sewer Lines map"
	]
	pause(choices) : "Pause When Reading" : 0 : "Pauses game process when sign shows on-screen." = [ 0 : "No" 1 : "Yes" ]

	sep_signadds(string) readonly: "------------------------------------"

	demo_sequence(choices) : "Demo Animation" : "None" : "[VTMB] Default animation sequence for the model to be playing after spawning." = [ "None":"None"  "idle":"Idle" ]
	npc_transparent(choices) : "NPC-Transparent" : 1 : "[VTMB] NPCs are transparent for this object [not tested]." = [ 0 : "No" 1 : "Yes" ]

	// inputs
	input ChangeFile(string) : "Change sign's definition file by specified below."

	// outputs
	output OnReadBegin(void) : "Fired when player begins to read this sign."
	output OnReadEnd(void) : "Fired when player ends reading of this sign."
	output OnPressed(void) : "[hardly ever] Fired when player press this sign (e.g. nosferatu's sewer map)."
]

@PointClass
base (
	Studiomodel,
	e_prop_sign,
	o_VUsableExt,
	RenderFields
)
studioprop()
= prop_sign :
	"[VTMB] An entity that dumps the misc signs (like hints and tables) on screen overlay."
[
	// RF order fix
]



//===================================================================================================================
// game_sign [VTMB-specific]
//===================================================================================================================

@PointClass
base (
	Targetname,
	o_VUsableExt
)
iconsprite("editor/game_text.vmt")
= game_sign :
	"[VTMB] An entity that dumps the misc text signs (like hints and tables) on screen overlay. \nOriginally mainly used on the Tutorial mission."
[
	sep_signmain(string) readonly: "------------------------------------"
	
	definition_file(vsign) : "Sign Definition File" : "vdata/signs/start_game_popup.txt" : "Script containing sign definitions. \n"+
													  "This is 'vdata/signs/<name>.txt' related file. \nYou can also specify a custom scripts." =
	[
	// SignList:
		"vdata/signs/start_game_popup.txt" : "start_game_popup.txt"
		"vdata/signs/tutorial_popup_blood_buff1.txt" : "tutorial_popup_blood_buff1.txt"
		"vdata/signs/tutorial_popup_bloodpool1.txt" : "tutorial_popup_bloodpool1.txt"
		"vdata/signs/tutorial_popup_brujahdisc1.txt" : "tutorial_popup_brujahdisc1.txt"
		"vdata/signs/tutorial_popup_celerity1.txt" : "tutorial_popup_celerity1.txt"
		"vdata/signs/tutorial_popup_celerity2.txt" : "tutorial_popup_celerity2.txt"
		"vdata/signs/tutorial_popup_computers1.txt" : "tutorial_popup_computers1.txt"
		"vdata/signs/tutorial_popup_computers2.txt" : "tutorial_popup_computers2.txt"
		"vdata/signs/tutorial_popup_containers1.txt" : "tutorial_popup_containers1.txt"
		"vdata/signs/tutorial_popup_containers2.txt" : "tutorial_popup_containers2.txt"
		"vdata/signs/tutorial_popup_detected_1.txt" : "tutorial_popup_detected_1.txt"
		"vdata/signs/tutorial_popup_dialogue_dementate.txt" : "tutorial_popup_dialogue_dementate.txt"
		"vdata/signs/tutorial_popup_dialogue_dominate.txt" : "tutorial_popup_dialogue_dominate.txt"
		"vdata/signs/tutorial_popup_dialogue_feats.txt" : "tutorial_popup_dialogue_feats.txt"
		"vdata/signs/tutorial_popup_dialogue_nosferatu.txt" : "tutorial_popup_dialogue_nosferatu.txt"
		"vdata/signs/tutorial_popup_dialogue_presence.txt" : "tutorial_popup_dialogue_presence.txt"
		"vdata/signs/tutorial_popup_disciplines1.txt" : "tutorial_popup_disciplines1.txt"
		"vdata/signs/tutorial_popup_drain_pool_1.txt" : "tutorial_popup_drain_pool_1.txt"
		"vdata/signs/tutorial_popup_experience_1.txt" : "tutorial_popup_experience_1.txt"
		"vdata/signs/tutorial_popup_feed1.txt" : "tutorial_popup_feed1.txt"
		"vdata/signs/tutorial_popup_feed2.txt" : "tutorial_popup_feed2.txt"
		"vdata/signs/tutorial_popup_feed_fail_1.txt" : "tutorial_popup_feed_fail_1.txt"
		"vdata/signs/tutorial_popup_frenzy1.txt" : "tutorial_popup_frenzy1.txt"
		"vdata/signs/tutorial_popup_frenzy2.txt" : "tutorial_popup_frenzy2.txt"
		"vdata/signs/tutorial_popup_health1.txt" : "tutorial_popup_health1.txt"
		"vdata/signs/tutorial_popup_health2.txt" : "tutorial_popup_health2.txt"
		"vdata/signs/tutorial_popup_inspection1.txt" : "tutorial_popup_inspection1.txt"
		"vdata/signs/tutorial_popup_inventory1.txt" : "tutorial_popup_inventory1.txt"
		"vdata/signs/tutorial_popup_jump1.txt" : "tutorial_popup_jump1.txt"
		"vdata/signs/tutorial_popup_lockpicking1.txt" : "tutorial_popup_lockpicking1.txt"
		"vdata/signs/tutorial_popup_lockpicking2.txt" : "tutorial_popup_lockpicking2.txt"
		"vdata/signs/tutorial_popup_masquerade1.txt" : "tutorial_popup_masquerade1.txt"
		"vdata/signs/tutorial_popup_masquerade2.txt" : "tutorial_popup_masquerade2.txt"
		"vdata/signs/tutorial_popup_masquerade3.txt" : "tutorial_popup_masquerade3.txt"
		"vdata/signs/tutorial_popup_moving1.txt" : "tutorial_popup_moving1.txt"
		"vdata/signs/tutorial_popup_note1.txt" : "tutorial_popup_note1.txt"
		"vdata/signs/tutorial_popup_physics1.txt" : "tutorial_popup_physics1.txt"
		"vdata/signs/tutorial_popup_physics2.txt" : "tutorial_popup_physics2.txt"
		"vdata/signs/tutorial_popup_pickup_1.txt" : "tutorial_popup_pickup_1.txt"
		"vdata/signs/tutorial_popup_potence1.txt" : "tutorial_popup_potence1.txt"
		"vdata/signs/tutorial_popup_potence2.txt" : "tutorial_popup_potence2.txt"
		"vdata/signs/tutorial_popup_presence1.txt" : "tutorial_popup_presence1.txt"
		"vdata/signs/tutorial_popup_presence2.txt" : "tutorial_popup_presence2.txt"
		"vdata/signs/tutorial_popup_questlog1.txt" : "tutorial_popup_questlog1.txt"
		"vdata/signs/tutorial_popup_rangedcombat1.txt" : "tutorial_popup_rangedcombat1.txt"
		"vdata/signs/tutorial_popup_rangedcombat2.txt" : "tutorial_popup_rangedcombat2.txt"
		"vdata/signs/tutorial_popup_rats1.txt" : "tutorial_popup_rats1.txt"
		"vdata/signs/tutorial_popup_rats2.txt" : "tutorial_popup_rats2.txt"
		"vdata/signs/tutorial_popup_sneaking1.txt" : "tutorial_popup_sneaking1.txt"
		"vdata/signs/tutorial_popup_sneaking2.txt" : "tutorial_popup_sneaking2.txt"
		"vdata/signs/tutorial_popup_stealthkill1.txt" : "tutorial_popup_stealthkill1.txt"
		"vdata/signs/tutorial_popup_thirty_eight1.txt" : "tutorial_popup_thirty_eight1.txt"
		"vdata/signs/tutorial_popup_tireiron1.txt" : "tutorial_popup_tireiron1.txt"
		"vdata/signs/tutorial_popup_unarmedcombat1.txt" : "tutorial_popup_unarmedcombat1.txt"
		"vdata/signs/tutorial_popup_unarmedcombat2.txt" : "tutorial_popup_unarmedcombat2.txt"
		"vdata/signs/tutorial_popup_use1.txt" : "tutorial_popup_use1.txt"
		"vdata/signs/tutorial_popup_weapons1.txt" : "tutorial_popup_weapons1.txt"
		"vdata/signs/tutorial_popup_61.txt" : "tutorial_popup_61.txt"
		"vdata/signs/tutorial_popup_62.txt" : "tutorial_popup_62.txt"
		"vdata/signs/tutorial_popup_63.txt" : "tutorial_popup_63.txt"
		"vdata/signs/tutorial_popup_64.txt" : "tutorial_popup_64.txt"
	]

	sep_signadds(string) readonly: "------------------------------------"
	
	fade_in(float) : "Fade-In Time (secs)" : "0.5" : "Fade-in effect when sign appears, in seconds."
	fade_out(float) : "Fade-Out Time (secs)" : "0.5" : "Fade-out effect when sign closes, in seconds."
	pause(choices) : "Pause When Reading" : 1 : "Pauses game process when sign shows on-screen." = [ 0 : "No" 1 : "Yes" ]

	spawnflags(flags) =
	[
		1: "Flag 1 (unknown yet)" : 1
		4: "Flag 4 (unknown yet)" : 1
	]

	// inputs
	input ChangeFile(string) : "Changes sign definition file."
	input OpenWindow(void) : "Opens sign window."
	input CloseWindow(void) : "Closes sign window."
]






//===================================================================================================================
// prop_slashable [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_slashable
[
	model(studio) : "Model" : "models/scenery/furniture/Wall_Art/frame.mdl" : "Slashable prop model." =
	[
		"models/scenery/furniture/Wall_Art/frame.mdl" : "models/scenery/furniture/Wall_Art/frame.mdl"
	]
	sep_slshmain(string) readonly: "------------------------------------"

	damaged_skin(integer) : "Damaged Skin" : 1 : "When prop damaged, it's model will turn into skin specified here."
	health(float) : "Prop's Strength" : 1 : "Number of points of damage to take before slashing. \n0 = not slashable."

	sep_slshadds(string) readonly: "------------------------------------"

	demo_sequence(choices) : "Demo Animation" : "None" : "Default animation sequence for the model to be playing after spawning." = [ "None":"None"  "idle":"Idle" ]
	npc_transparent(choices) : "NPC-Transparent" : 1 : "NPCs are transparent for this object [not tested]." = [ 0 : "No" 1 : "Yes" ]

	// Outputs
	output OnSlashed(void) : "Fired when this prop damaged."
]

@PointClass
base (
	Studiomodel,
	e_prop_slashable,
	RenderFields
)
studioprop()
= prop_slashable :
	"[VTMB] A prop that may be slashed (e.g. Art gallery pictures)."
[
	// RF order fix
]





//===================================================================================================================
// prop_switch [VTMB-specific]
//===================================================================================================================

@BaseClass
= e_prop_switch
[
	model(studio) : "Switch Model" : "models/scenery/structural/switches/switch.mdl" : "Switch's prop model. \nClick arrow button and scroll down if you want to use one of game's default model." =
	[
		"models/scenery/furniture/gio_torch/skulltorch_lever.mdl" : "models/scenery/furniture/gio_torch/skulltorch_lever.mdl"
		"models/scenery/furniture/phonograph/phonograph.mdl" : "models/scenery/furniture/phonograph/phonograph.mdl"
		"models/scenery/furniture/sarcophagus/sarcophagus.mdl" : "models/scenery/furniture/sarcophagus/sarcophagus.mdl"
		"models/scenery/misc/curcuitbreaker/curcuitbreaker.mdl" : "models/scenery/misc/curcuitbreaker/curcuitbreaker.mdl"
		"models/scenery/misc/lever/lever.mdl" : "models/scenery/misc/lever/lever.mdl"
		"models/scenery/structural/controlpanel/switch.mdl" : "models/scenery/structural/controlpanel/switch.mdl"
		"models/scenery/structural/dane/crane_release.mdl" : "models/scenery/structural/dane/crane_release.mdl"
		"models/scenery/structural/electrical/breakerbox_switch.mdl" : "models/scenery/structural/electrical/breakerbox_switch.mdl"
		"models/scenery/structural/fire_alarm/pull_for_fire.mdl" : "models/scenery/structural/fire_alarm/pull_for_fire.mdl"
		"models/scenery/structural/giovanni/gio_sword.mdl" : "models/scenery/structural/giovanni/gio_sword.mdl"
		"models/scenery/structural/hollywood/HWmanhole.mdl" : "models/scenery/structural/hollywood/HWmanhole.mdl"
		"models/scenery/structural/la/LAmanhole.mdl" : "models/scenery/structural/la/LAmanhole.mdl"
		"models/scenery/structural/malkavian/fireplace_button.mdl" : "models/scenery/structural/malkavian/fireplace_button.mdl"
		"models/scenery/structural/malkavian/lever.mdl" : "models/scenery/structural/malkavian/lever.mdl"
		"models/scenery/structural/malkavian/reeltoreel.mdl" : "models/scenery/structural/malkavian/reeltoreel.mdl"
		"models/scenery/structural/malkavian/sconce.mdl" : "models/scenery/structural/malkavian/sconce.mdl"
		"models/scenery/structural/roof/light.mdl" : "models/scenery/structural/roof/light.mdl"
		"models/scenery/structural/santamonica/manhole.mdl" : "models/scenery/structural/santamonica/manhole.mdl"
		"models/scenery/structural/SewerGateLever/SewerGateLever.mdl" : "models/scenery/structural/SewerGateLever/SewerGateLever.mdl"
		"models/scenery/structural/switches/switch.mdl" : "models/scenery/structural/switches/switch.mdl"
		"models/scenery/structural/switches/Switch_2.mdl" : "models/scenery/structural/switches/Switch_2.mdl"
		"models/scenery/structural/temple/pedestal1.mdl" : "models/scenery/structural/temple/pedestal1.mdl"
		"models/scenery/structural/temple/pedestal2.mdl" : "models/scenery/structural/temple/pedestal2.mdl"
		"models/scenery/structural/temple/pedestal3.mdl" : "models/scenery/structural/temple/pedestal3.mdl"
		"models/scenery/structural/temple/pedestal4.mdl" : "models/scenery/structural/temple/pedestal4.mdl"
		"models/scenery/structural/warrens/warr_02_container_door.mdl" : "models/scenery/structural/warrens/warr_02_container_door.mdl"
		"models/scenery/structural/warrens/warr_subdoor.mdl" : "models/scenery/structural/warrens/warr_subdoor.mdl"
	]

	sep_swpsnd(string) readonly: "------------------------------------"

	soundgroup(choices) : "Sound Group" : "small_metal_switch" : "The group of sounds relative to 'usable/computers/<group-name>/<action>.wav' that specifies certain action sounds." = 
	[
		"elevator_button" : "Elevator Button"
		"large_metal_lever" : "Large Metal Lever"
		"manhole_cover" : "Manhole Cover"
		"medium_metal_switch" : "Medium Metal Switch"
		"small_metal_switch" : "Small Metal Switch"
		"wall_light_switch" : "Wall Light Switch"
		"metal_hatch" : "Metal Hatch"
		"radio" : "Radio"
		"tv" : "TV"
	]
	actsnd(sound) : "Activate Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the switch activates." =
	[
		"environmental/electronic/button_click_1.wav" : "environmental/electronic/button_click_1.wav"
	]
	deactsnd(sound) : "Dectivate Sound" : "environmental/electronic/button_click_1.wav" : "Sound played when the switch deactivates." =
	[
		"environmental/electronic/button_click_1.wav" : "environmental/electronic/button_click_1.wav"
	]
	locksnd(sound) : "Locked Sound" : "environmental/electronic/deny_beep.wav" : "Sound played when the switch activates but locked." =
	[
		"environmental/electronic/deny_beep.wav" : "environmental/electronic/deny_beep.wav"
	]

	sep_swppref(string) readonly: "------------------------------------"

	use_icon(choices) : "Use Icon" : 12 : "An icon that indicates when player can be able to use this entity and it is openable." = 
	[
		 0: "None"
		12: "Switch (wall)"
		64: "Switch (power)"
		13: "Sewer Hatch"
		60: "Sewer Hatch (transition)"

		33: "Stop/Sword"
		37: "Sconce"
		38: "Reel recorder"
		42: "Projector light"
		43: "Phonograph"
		52: "Dead Body/Skull"
		 1: "Carry body"

		 3: "Default lock"
		53: "Electronic lock"
		59: "Door (transition)"

		66: "Malk Chaos"
		67: "Malk Key"
		68: "Malk Mind"
		69: "Malk Order"
		70: "Malk Sight"
		71: "Malk Time"
	]
	locked_icon(choices) : "Locked Icon" : 12 : "An icon that indicates locked state of this entity." = 
	[
		 0: "None"
		12: "Switch (wall)"
		64: "Switch (power)"
		13: "Sewer Hatch"

		33: "Stop/Sword"
		 3: "Default lock"
		54: "Electronic lock (locked)"
		58: "Door (player wanted)"

		66: "Malk Chaos"
		67: "Malk Key"
		68: "Malk Mind"
		69: "Malk Order"
		70: "Malk Sight"
		71: "Malk Time"
	]
	reset_state(choices) : "Initial State" : 0 : "State that entity will be use on spawn." = [ 0: "Off" 1: "On" ]
	linkedswitch(target_destination) : "Linked Switch" : : "(Optional) The name of another switch entity that will be controlled by this one."

	sep_swpphys(string) readonly: "------------------------------------"

	solid(choices) : "Collisions" : 0 : "Model's collision type." =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
		3: "Use Convex Hull"
	]
	npc_transparent(choices) : "NPC-Transparent" : 1 : "[VTMB] NPCs are transparent for this object [not tested]." = [ 0 : "No" 1 : "Yes" ]

	// physics
	collideable_gibs(choices) : "Collidable Gibs" : 0 : "[VTMB] Collide model's gibs with environment when it breaks [not tested]." = 
	[
		0 : "Mode 0 (unknown)"
		1 : "Mode 1 (unknown)"
		2 : "Mode 2 (unknown)"
	]
	health(integer) : "Prop's Strength" : 0 : "[VTMB] Number of points of damage to take before breaking this prop. \n'0' = not breakable."
	ExplodeDamage(float) : "Explosion Damage" : 0 : "If non-zero, when this entity breaks it will create an explosion that causes the specified amount of damage. See also 'Explosion Radius'."
	ExplodeRadius(float) : "Explosion Radius" : 0 : "If non-zero, when this entity breaks it will create an explosion with a radius of the specified amount. See also 'Explosion Damage'."

	spawnflags(Flags) =
	[
		1 : "Flag 1 (unknown yet)" : 0
		16 : "Flag 16 (unknown yet)" : 0
		32 : "Flag 32 (unknown yet)" : 0
		64 : "Flag 64 (unknown yet)" : 0
		256 : "Flag 256 (unknown yet)" : 0
		1024 : "Flag 1024 (unknown yet)" : 0
		8192 : "Flag 8192 (unknown yet)" : 0
		16384 : "Flag 16384 (unknown yet)" : 0
		32768 : "Flag 32768 (unknown yet)" : 0
	]

	// inputs
 	input Toggle(void) : "Toggles the swich's state."
	input Lock(void) : "Lock the swich, preventing it from functioning."
	input Unlock(void) : "Unlock the swich, allowing it to function."
	input Activate(void) : "Activates the swich [not tested]."
	input Deactivate(void) :  "Deactivates the swich [not tested]."

	// outputs
	output OnActivate(void) : "Fired when activated [not tested]."
	output OnDeactivate(void) : "Fired when deactivated [not tested]."
	output OnUse(void) : "Fires when +used by the player."
	output OnLockedUse(void) : "Fired when used by player, but it's locked."
]

@PointClass
base(
	Studiomodel,
	Parentname,
	e_prop_switch,
	o_VBreakable,
	RenderFields
)
//line (
//	255 255 255,
//	targetname,
//	parentname
//)
studioprop()
= prop_switch :
	"[VTMB] A prop that may be used as any action's state switch (e.g. light switching)."
[
	// RF order fix
]










































//*******************************************************************************************************************
//*******************************************************************************************************************
// 
// NPCs
// 
//*******************************************************************************************************************
//*******************************************************************************************************************


//===================================================================================================================
// npc_maker_fleshpile [VTMB-specific]
//===================================================================================================================

@PointClass base(npc_maker) iconsprite("editor/npc_maker.vmt") = npc_maker_fleshpile : 
	"[VTMB] NPC Maker for flesh plies [not tested].\n\n"+
	"[VTMB] NOTES: See also 'npc_maker'."
[
	NPCType(npcclass) : "NPC Type" : "npc_VTzimisceRunner" : "Class name of spawned NPC"
	NPCTargetname(string) : "Children's Name" : "tzim_creation3" : "Childrens' NPC Name"
	NPCSquadname(string) : "Squad Name" : "runners" : "Childrens' Squad Name"

	model(studio) : "Model" : "models/character/monster/undead/male/undead_Male.mdl"
	stattemplate(choices) : "NPC Stat Template" : "TzimisceCreation3" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)\n"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
]






//===================================================================================================================
// npc_maker_zombie [VTMB-specific]
//===================================================================================================================

@PointClass base(npc_maker) iconsprite("editor/npc_maker.vmt") = npc_maker_zombie : 
	"[VTMB] NPC Maker for NPCs with zombie AI type.\n\n"+
	"[VTMB] NOTES: See also 'npc_maker'."
[
	NPCType(npcclass) : "NPC Type" : "npc_VZombie" : "Class name of spawned NPC"
	NPCTargetname(string) : "Children's Name" : "zombie" : "Childrens' NPC Name"
	NPCSquadname(string) : "Squad Name" : "spawned_zombies" : "Childrens' Squad Name"

	model(studio) : "Model" : "models/character/monster/undead/male/Undead_Male.mdl"
	additionalequipment(choices) : "Base Equipment" : "item_w_fists" : "This is the weapon that NPC will basically use." =
	[
		"0" : "Nothing"
		"item_w_avamp_blade" : "item_w_avamp_blade"
		"item_w_baseball_bat" : "item_w_baseball_bat"
		"item_w_baton" : "item_w_baton"
		"item_w_bush_hook" : "item_w_bush_hook"
		"item_w_colt_anaconda" : "item_w_colt_anaconda"
		"item_w_crossbow" : "item_w_crossbow"
		"item_w_crossbow_flaming" : "item_w_crossbow_flaming"
		"item_w_deserteagle" : "item_w_deserteagle"
		"item_w_fireaxe" : "item_w_fireaxe"
		"item_w_fists" : "item_w_fists"
		"item_w_flamethrower" : "item_w_flamethrower"
		"item_w_glock_17c" : "item_w_glock_17c"
		"item_w_grenade_frag" : "item_w_grenade_frag"
		"item_w_ithaca_m_37" : "item_w_ithaca_m_37"
		"item_w_katana" : "item_w_katana"
		"item_w_knife" : "item_w_knife"
		"item_w_mac_10" : "item_w_mac_10"
		"item_w_occultblade" : "item_w_occultblade"
		"item_w_remington_m_700" : "item_w_remington_m_700"
		"item_w_rem_m_700_bach" : "item_w_rem_m_700_bach"
		"item_w_severed_arm" : "item_w_severed_arm"
		"item_w_sheriff_sword" : "item_w_sheriff_sword"
		"item_w_sledgehammer" : "item_w_sledgehammer"
		"item_w_steyr_aug" : "item_w_steyr_aug"
		"item_w_supershotgun" : "item_w_supershotgun"
		"item_w_thirtyeight" : "item_w_thirtyeight"
		"item_w_throwing_star" : "item_w_throwing_star"
		"item_w_tire_iron" : "item_w_tire_iron"
		"item_w_torch" : "item_w_torch"
		"item_w_uzi" : "item_w_uzi"
		"item_w_zombie_fists" : "item_w_zombie_fists"
	]
	cantdropweapons(choices) : "Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =
	[
		0 : "No"
		1 : "Yes"
	]
	stattemplate(choices) : "NPC Stat Template" : "Zombie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =
	[
		"D_LI 0" : "D_LI 0"
		"D_NU 0" : "D_NU 0"
		"D_HT 0" : "D_HT 0"
		"D_HT 5" : "D_HT 5"
	]
	Flag_ZombieAIType(choices) : "Flag: Zombie AI Type" : 1 : "Applies the selected property." = 
	[ 
		0 : "Don not use" 
		1 : "Type 1 (unknown yet)" 
		2 : "Type 2 (unknown yet)" 
		3 : "Type 3 (unknown yet)" 
		4 : "Type 4 (unknown yet)" 
		5 : "Type 5 (unknown yet)" 
		6 : "Type 6 (unknown yet)" 
		7 : "Type 7 (unknown yet)" 
		8 : "Type 8 (unknown yet)" 
	]
	Flag_ViewCone(choices) : "Flag: View Cone" : 1 : "Applies the selected property." = [ 0 : "False" 1 : "True" ]
	allow_alert_lookaround(choices) : "Allow Lookaround on Alert" : 0 : "Defines, should NPC be able to look around when alerted, or not." =
	[
		0 : "No"
		1 : "Yes"
	]
	allow_kick_hint_use(choices) : "Allow Kick Hint Usage [-?]" : 0 : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
	floatfreq(integer) : "Floats Frequency" : 5 : "[VTMB] Determines how often this NPC will play float sound lines when player's near him. Higher values will make floats play more often, '0' disables them fully."
	team_name(string) : "Team Name" : "zombies" : "[VTMB] Unknown yet..."
	
	sep_npcrel(string) readonly: "------------------------------------"
	
	// zombie-specific
	remove_distance(integer) : "Remove Distance" : 1024 : "[VTMB] Unknown yet..."
	should_ragdoll(choices) : "Should be Ragdolls [-?]" : 1 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]
]






//===================================================================================================================
// npc_BaseVampAI [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_BaseVampAI : 
	"[VTMB] Base Vampire AI (Unrecognized; meet in Junk Yard -?)."
[
	model(studio) : "Model" : "models/character/npc/common/doppleganger/doppleganger_male.mdl" =
	[
		"models/character/npc/common/doppleganger/doppleganger_male.mdl" : "models/character/npc/common/doppleganger/doppleganger_male.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_sw_m64" : "This is the weapon that NPC will basically use." = []
	alternateequipment(choices) : "Alternate Equipment" : "item_w_katana" : "This is the weapon that NPC will use as alternative." = []
	dialogname(vdialog) : "Dialog File" : "dlg/Santa Monica/Nightwatchman.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"" : "None"
		"dlg/Santa Monica/Nightwatchman.dlg" : "dlg/Santa Monica/Nightwatchman.dlg"
	]
	pl_investigate(choices) : "Player Investigate" : "6" : "[VTMB] Unknown yet..." = []
	hearing(float) : "Hearing Volume" : "1" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "2048" : "NPC's vision radius (units). Set '-1' as default [not tested]."

	sep_npcrel(string) readonly: "------------------------------------"
	
	// npc-related
	usescript(string) : "Use Python Script" : "NightwatchmenDlg()" : "This is a Python script that defines additional dialog params [not tested]."

	// ai-related
	base_animal_ken(choices) : "Use Animal Ken" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_appearance(choices) : "Use Appearance" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_athletics(choices) : "Use Athletics" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_brawl(choices) : "Use Brawl" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_charisma(choices) : "Use Charisma" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_computers(choices) : "Use Computers" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_dexterity(choices) : "Use Dexterity" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_dodge(choices) : "Use Dodge" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_finance(choices) : "Use Finance" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_firearms(choices) : "Use Firearms" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_intelligence(choices) : "Use Intelligence" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_investigation(choices) : "Use Investigation" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_leadership(choices) : "Use Leadership" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_linguistics(choices) : "Use Linguistics" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_manipulation(choices) : "Use Manipulation" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_melee(choices) : "Use Melee" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_occult(choices) : "Use Occult" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_perception(choices) : "Use Perception" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_security(choices) : "Use Security" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_stamina(choices) : "Use Stamina" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_stealth(choices) : "Use Stealth" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_strength(choices) : "Use Strength" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_subterfuge(choices) : "Use Subterfuge" : 0 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
	base_wits(choices) : "Use Wits" : 1 : "Toggle these characteristics to be applied to NPC's AI [not tested]." = [ 0 : "No" 1 : "Yes" ]
]
	
	

	
	

//===================================================================================================================
// npc_payphone [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_payphone : 
	"[VTMB] Payphone (fake NPC) entity that can engage in dialogue with player."
[
	model(studio) : "Model" : "models/scenery/street/payphone/payphonereceiver.mdl" =
	[
		"models/scenery/street/payphone/payphonereceiver.mdl" : "models/scenery/street/payphone/payphonereceiver.mdl"
	]
	dialogname(vdialog) : "Dialog File" : "dlg/Santa Monica/Stan_Gimble.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"dlg/Santa Monica/Stan_Gimble.dlg" : "dlg/Santa Monica/Stan_Gimble.dlg"
		"dlg/Santa Monica/SMphone.dlg" : "dlg/Santa Monica/SMphone.dlg"
		"dlg/Chinatown/Garyphone.dlg" : "dlg/Chinatown/Garyphone.dlg"
		"dlg/Hollywood/Anoncaller.dlg" : "dlg/Hollywood/Anoncaller.dlg"
	]
]





//===================================================================================================================
// npc_VAndreiBlood [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VAndreiBlood : 
	"[VTMB] Bloody Andrei transformation (meet in 609 Kings Way)."
[
	model(studio) : "Model" : "models/character/npc/unique/Hollywood/Andrei/Andrei.mdl" =
	[
		"models/character/npc/unique/Hollywood/Andrei/Andrei.mdl" : "models/character/npc/unique/Hollywood/Andrei/Andrei.mdl"
	]
	dialogname(vdialog) : "Dialog File" : "dlg/Hollywood/Andrei.dlg" : "Defines dialogue script depending on certain NPC and situation." =	[]
	stattemplate(choices) : "NPC Stat Template" : "AndreiBlood" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	pl_criminal_attack(choices) : "Player Criminal Attack" : "1" : "[VTMB] Unknown yet..." =	[]
	pl_investigate(choices) : "Player Investigate" : "1" : "[VTMB] Unknown yet..." =	[]
	pl_supernatural_attack(choices) : "Player Supernatural Attack" : "1" : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	vision(float) : "Vision Radius" : "2400" : "NPC's vision radius (units). Set '-1' as default [not tested]."

	sep_npcrel(string) readonly: "------------------------------------"
	
	// andrei-specific
	TeleportTime(integer) : "Teleport Time (sec)" : 35 : "A time interval between which Andrei makes teleportations."
	MaxLiveHeadrunners(integer) : "Max Headrunners Count" : 4 : "How many live headrunners (tzimisce creations) may be spawned around its boss."
	SummonTime(integer) : "Summon Time [-?]" : 35 : "[VTMB] Unknown yet..."
	SummonPercentage(integer) : "Summon Percentage [-?]" : 80 : "[VTMB] Unknown yet..."
	AndreiPauseTime(integer) : "Andrei Pause Time [-?]" : 85 : "[VTMB] Unknown yet..."
	AndreiPauseTime(integer) : "Andrei Pause Time [-?]" : 85 : "[VTMB] Unknown yet..."
	KillToPause(integer) : "Kill tp Pause [-?]" : 6 : "[VTMB] Unknown yet..."

	// inputs
	input TriggerCombat(integer) : "[VTMB: untested connection]"
]





//===================================================================================================================
// npc_VAsianVampire [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VAsianVampire : 
	"[VTMB] Asian Vampire (meet in Santa Monica's Foxy Boxes)."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/AsianVampire/AsianVampire.mdl" =
	[
		"models/character/npc/unique/Santa_Monica/AsianVampire/AsianVampire.mdl" : "models/character/npc/unique/Santa_Monica/AsianVampire/AsianVampire.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_avamp_blade" : "This is the weapon that NPC will basically use." =	[]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_crossbow" : "This is the weapon that NPC will use as alternative." =	[]
	cantdropweapons(choices) : "Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." = 	[]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =	[]
	stattemplate(choices) : "NPC Stat Template" : "AsianVampire" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
]






//===================================================================================================================
// npc_VBach [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VBach : 
	"[VTMB] Grunfield Bach, the Society of Leopold leader."
[
	model(studio) : "Model" : "models/character/npc/unique/Malkavian_Mansion/Bach/Bach.mdl" =
	[
		"models/character/npc/unique/Malkavian_Mansion/Bach/Bach.mdl" : "models/character/npc/unique/Malkavian_Mansion/Bach/Bach.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_rem_m_700_bach" : "This is the weapon that NPC will basically use." =	[]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_katana" : "This is the weapon that NPC will use as alternative." =	[]
	cantdropweapons(choices) : "Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =	[]
	demo_sequence(choices) : "Demo Animation" : "Idle01" : "Default animation sequence for the model to be playing after spawning." = []
	dialogname(vdialog) : "Dialog File" : "dlg/Main Characters/Bach.dlg" : "Defines dialogue script depending on certain NPC and situation." =	[]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =	[]
	stattemplate(choices) : "NPC Stat Template" : "Bach" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	npc_perception(choices) : "NPC Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]." = []
	pl_criminal_attack(choices) : "Player Criminal Attack" : "1" : "A criminal level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc. \nFlee overrides attack and a value of 6 means no action because the max value is 5." =	[]
	pl_supernatural_attack(choices) : "Player Supernatural Attack" : "1" : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	hearing(float) : "Hearing Volume" : "3.0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."

	// inputs
	input GrenadeEnter(integer) : "[VTMB: untested connection]"
	input GrenadeExit(integer) : "[VTMB: untested connection]"
	input SignalVulnerable(integer) : "[VTMB: untested connection]"
]






//===================================================================================================================
// npc_VBrujah [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VBrujah : 
	"[VTMB] Generic Brujah NPC."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/Eugene/Eugene.mdl" =
	[
		"models/character/npc/unique/Santa_Monica/Eugene/Eugene.mdl" : "models/character/npc/unique/Santa_Monica/Eugene/Eugene.mdl"
		"models/character/npc/unique/Santa_Monica/Ghost/Ghost.mdl" : "models/character/npc/unique/Santa_Monica/Ghost/Ghost.mdl"
	]
	cantdropweapons(choices) : "Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =	[]
	invincible(choices) : "NPC is Invincible" : 1 : "If set, the player can't kill this NPC." =	[]
	investigate_mode(choices): "Investigate Mode" : 0 : "[not tested] Measures your character's ability to notice minute or hidden details." =	[]
	investigate_mode_combat(choices): "Combat Investigate Mode" : 0 : "[VTMB] Unknown yet..." =	[]
]






//===================================================================================================================
// npc_VCamera [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VCamera : 
	"[VTMB] Tracking Camera entity (fake NPC)."
[
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" = []
]








//===================================================================================================================
// npc_VCameraSecurity [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VCameraSecurity : 
	"[VTMB] Security Camera entity (fake NPC)."
[
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]
	pl_investigate(choices) : "Player Investigate" : "1" : "[VTMB] Unknown yet..." =	[]
	hearing(float) : "Hearing Volume" : "0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "750" : "NPC's vision radius (units). Set '-1' as default [not tested]."

	sep_npcrel(string) readonly: "------------------------------------"
	
	// camera-specific
	linked_camera(target_destination) : "Linked Camera" : : "Camera that inherits properties of this one [not tested]."
]






//===================================================================================================================
// npc_VChangBrosBlade [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VChangBrosBlade : 
	"[VTMB] Blade-armed Chang brother (meet in Giovanni's basement)."
[
	model(studio) : "Model" : "models/character/npc/unique/Giovanni_Mansion/Chang_Brothers/chang1.mdl" =
	[
		"models/character/npc/unique/Giovanni_Mansion/Chang_Brothers/chang1.mdl" : "models/character/npc/unique/Giovanni_Mansion/Chang_Brothers/chang1.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_chang_blade" : "This is the weapon that NPC will basically use." = []
	cantdropweapons(choices) : "Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =	[]
	default_camera(vcamerashot) : "Default Camera Shot" : "ChangDialog" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =	[]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =	[]
	stattemplate(choices) : "NPC Stat Template" : "ChangBros" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics."	= []
	npc_perception(choices) : "NPC Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]." = []
	hearing(float) : "Hearing Volume" : "3.0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "3600" : "NPC's vision radius (units). Set '-1' as default [not tested]."
]












//===================================================================================================================
// npc_VChangBrosClaw [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VChangBrosClaw : 
	"[VTMB] Claw-armed Chang brother (meet in Giovanni's basement)."
[
	model(studio) : "Model" : "models/character/npc/unique/Giovanni_Mansion/Chang_Brothers/chang2.mdl" =
	[
		"models/character/npc/unique/Giovanni_Mansion/Chang_Brothers/chang2.mdl" : "models/character/npc/unique/Giovanni_Mansion/Chang_Brothers/chang2.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_chang_claw" : "This is the weapon that NPC will basically use." =	[]
	cantdropweapons(choices) : "Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =	[]
	dialogname(vdialog) : "Dialog File" : "dlg/Giovanni/Chang.dlg" : "Defines dialogue script depending on certain NPC and situation." =	[]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =	[]
	stattemplate(choices) : "NPC Stat Template" : "ChangBrosClaw" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	npc_perception(choices) : "NPC Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]." = []
	hearing(float) : "Hearing Volume" : "3.0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "3600" : "NPC's vision radius (units). Set '-1' as default [not tested]."
]










//===================================================================================================================
// npc_VCop [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VCop : 
	"[VTMB] Generic police officer. Behave quietly..."
[
	model(studio) : "Model" : "models/character/npc/common/Cop_Variant/regular_cop/Regular_Cop.mdl" =
	[
		"models/character/npc/common/Cop_Variant/regular_cop/Regular_Cop.mdl" : "models/character/npc/common/Cop_Variant/regular_cop/Regular_Cop.mdl"
	]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_thirtyeight" : "This is the weapon that NPC will use as alternative." =	[]
	pl_criminal_attack(choices) : "Player Criminal Attack" : "1" : "A criminal level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	pl_criminal_flee(choices) : "Player Criminal Flee" : "5" : "A criminal level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc. \nFlee overrides attack and a value of 6 means no action because the max value is 5." =	[]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =	[]
	pl_supernatural_attack(choices) : "Player Supernatural Attack" : "1" : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	pl_supernatural_flee(choices) : "Player Supernatural Flee" : "4" : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc. \nFlee overrides attack and a value of 6 means no action because the max value is 5." =	[]
	stattemplate(choices) : "NPC Stat Template" : "OfficerGeneric" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []

	sep_npcrel(string) readonly: "------------------------------------"
	
	// npc-specific
	floatfreq(integer) : "Floats Frequency" : 8 : "[VTMB] Determines how often this NPC will play float sound lines when player's near him. Higher values will make floats play more often, '0' disables them fully."
	hearing(float) : "Hearing Volume" : "0" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
]






//===================================================================================================================
// npc_VDialogPedestrian [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VDialogPedestrian : 
	"[VTMB] A pedestrian NPC that can engage in dialogue with the player."
[
	model(studio) : "Model" : "models/character/npc/common/citizen/male2/male_citizen_2.mdl" =
	[
		"models/character/npc/common/citizen/male2/male_citizen_2.mdl" : "models/character/npc/common/citizen/male2/male_citizen_2.mdl"
		"models/character/npc/common/prostitute/prostitute_1/prostitute_1.mdl" : "models/character/npc/common/prostitute/prostitute_1/prostitute_1.mdl"
		"models/character/npc/common/prostitute/prostitute_2/prostitute_2_Ref.mdl" : "models/character/npc/common/prostitute/prostitute_2/prostitute_2_Ref.mdl"
		"models/character/npc/common/blueblood/male/Blueblood_Male.mdl" : "models/character/npc/common/blueblood/male/Blueblood_Male.mdl"
	]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =	[]

	sep_npcrel(string) readonly: "------------------------------------"
	
	// ped-related
	usescript(string) : "Use Python Script" : : "This is a Python script that defines additional dialog params [not tested]."
	level_reset_type(choices) : "Level Reset Type" : 0 : "Defines dialog resetting mode depending on level changing or reloading [not tested]." =
	[
		0 : "Type 0 (unknown yet)"
		1 : "Type 1 (unknown yet)"
		2 : "Type 2 (unknown yet)"
	]
	spawnflags(Flags) = 
	[
		4 : "Fall to ground (unchecked means *teleport* to ground)" : 1
		8192: "Flag 8192 (unknown yet)" : 1
	]
]






//===================================================================================================================
// npc_VDog [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats) studio() = npc_VDog : 
	"[VTMB] Dog NPC. Not used on original maps."
[
	model(studio) : "Model" : "models/character/monster/dog/feral/dog_feral.mdl" =
	[
		"models/character/monster/dog/feral/dog_feral.mdl" : "models/character/monster/dog/feral/dog_feral.mdl"
		"models/character/monster/dog/guard/dog_guard.mdl" : "models/character/monster/dog/guard/dog_guard.mdl"
		"models/character/monster/rat/crowd/rat_crowd2.mdl" : "models/character/monster/rat/crowd/rat_crowd2.mdl"
		"models/character/monster/cat/cat.mdl" : "models/character/monster/cat/cat.mdl"
	]
	stattemplate(choices) : "NPC Stat Template" : "Rat" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []

	sep_npcrel(string) readonly: "------------------------------------"
	
	// npc-specific
	detection_distance(integer) : "Detection Distance" : 256 : "Defines distance rat can wind the player."
	friendship_level(integer) : "Friendship Level" : 1 : "The level of rat's friendliness in relation to player."
	must_detect(choices) : "Must Detect [-?]" : "1" : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
	fright_distance(integer) : "Fright Distance" : 128 : "Distance that rat will frights the player."
	fright_duration(float) : "Fright Duration" : "5.0" : "Duration of rat's fright when it nearby the player."
	conflict_range(integer) : "Conflict Range" : 100 : "[VTMB] Unknown yet..."
	warn_range(integer) : "Warn Range" : 200 : "[VTMB] Unknown yet..."
]





//===================================================================================================================
// npc_VGargoyle [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VGargoyle : 
	"[VTMB] Gargoyle (meet in Asian Theatre, Hollywood)."
[
	model(studio) : "Model" : "models/character/monster/gargoyle/gargoyle.mdl" =
	[
		"models/character/monster/gargoyle/gargoyle.mdl" : "models/character/monster/gargoyle/gargoyle.mdl"
	]
	default_camera(vcamerashot) : "Default Camera Shot" : "vdata/CameraShots/Gargoyle.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =	[]
	dialogname(vdialog) : "Dialog File" : "dlg/Hollywood/Gargoyle.dlg" : "Defines dialogue script depending on certain NPC and situation." =	[]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =	[]
	stattemplate(choices) : "NPC Stat Template" : "Gargoyle" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	pl_investigate(choices) : "Player Investigate" : "6" : "[VTMB] Unknown yet..." =	[]
]







//===================================================================================================================
// npc_VGhoulCroucher [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VGhoulCroucher : 
	"[VTMB] Crouched ghoul (meet in Malkavian Mansion)."
[
	model(studio) : "Model" : "models/character/npc/unique/Malkavian_Mansion/Stalker/Stalker.mdl" =
	[
		"models/character/npc/unique/Malkavian_Mansion/Stalker/Stalker.mdl" : "models/character/npc/unique/Malkavian_Mansion/Stalker/Stalker.mdl"
		"models/character/npc/unique/Malkavian_Mansion/Stalker/Stalker_female.mdl" : "models/character/npc/unique/Malkavian_Mansion/Stalker/Stalker_female.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_knife" : "This is the weapon that NPC will basically use." =	[]
	stattemplate(choices) : "NPC Stat Template" : "MalkMansionCroucher" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]

	sep_npcrel(string) readonly: "------------------------------------"
	
	// croucher-specific
	disturbed(choices) : "Disturbed" : 0 : "Set this NPC disturbing state." =
	[
		0 : "No"
		1 : "Yes"
	]
	on_fire(choices) : "On Fire [-?]" : 0 : "Set this NPC burning state." =
	[
		0 : "No"
		1 : "Yes"
	]
]








//===================================================================================================================
// npc_VHengeyokai [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VHengeyokai : 
	"[VTMB] Hengeyokai, Zygaena's tranformation (meet in chinese fish market)."
[
	model(studio) : "Model" : "models/character/npc/unique/Chinatown/Zygaena/Zygaena.mdl" =
	[
		"models/character/npc/unique/Chinatown/Zygaena/Zygaena.mdl" : "models/character/npc/unique/Chinatown/Zygaena/Zygaena.mdl"
	]
	dialogname(vdialog) : "Dialog File" : "dlg/Chinatown/Zygaena.dlg" : "Defines dialogue script depending on certain NPC and situation." =	[]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =	[]
	stattemplate(choices) : "NPC Stat Template" : "Hengeyokai" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =	[]

	// inputs
	input StartTransformation(void) : "NPC starts body transforming."
]





//===================================================================================================================
// npc_VHuman [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VHuman : 
	"[VTMB] A Human. Just a mortal, just a means..."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/Cal/Cal.mdl" =
	[
		"models/character/npc/unique/Santa_Monica/Cal/Cal.mdl" : "models/character/npc/unique/Santa_Monica/Cal/Cal.mdl"
		"models/character/npc/common/citizen/male2/male_citizen_2.mdl" : "models/character/npc/common/citizen/male2/male_citizen_2.mdl"
	]
	default_camera(vcamerashot) : "Default Camera Shot" : "vdata/CameraShots/Cal.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." = []
	default_disposition(choices) : "Default Disposition" : "Bartender" : "Default NPC's disposition. Goes to 'vdata/system/dispositiontable.txt' definitions." =	[]
	pl_criminal_attack(choices) : "Player Criminal Attack" : "2" : "A criminal level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	pl_criminal_flee(choices) : "Player Criminal Flee" : "4" : "A criminal level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc. \nFlee overrides attack and a value of 6 means no action because the max value is 5." =	[]
	pl_investigate(choices) : "Player Investigate" : "6" : "[VTMB] Unknown yet..." =	[]
	pl_supernatural_attack(choices) : "Player Supernatural Attack" : "2" : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	pl_supernatural_flee(choices) : "Player Supernatural Flee" : "3" : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc. \nFlee overrides attack and a value of 6 means no action because the max value is 5." =	[]
]








//===================================================================================================================
// npc_VHumanCombatant [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VHumanCombatant : 
	"[VTMB] The combatant human NPC."
[
	model(studio) : "Model" : "models/character/npc/common/gangmember_male_1/sabbat_gangmember_1_Ref.mdl" =
	[
		"models/character/npc/common/gangmember_male_1/sabbat_gangmember_1_Ref.mdl" : "models/character/npc/common/gangmember_male_1/sabbat_gangmember_1_Ref.mdl"
		"models/character/npc/common/gangmember_male_2/gangmember_male_2.mdl" : "models/character/npc/common/gangmember_male_2/gangmember_male_2.mdl"
		"models/character/npc/common/gangmember_male_2/gangmember_male_2_alt.mdl" : "models/character/npc/common/gangmember_male_2/gangmember_male_2_alt.mdl"
		"models/character/npc/common/Cop_Variant/regular_cop/Regular_Cop.mdl" : "models/character/npc/common/Cop_Variant/regular_cop/Regular_Cop.mdl"
		"models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl" : "models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl"
		"models/character/npc/common/security_guard/Security_Guard.mdl" : "models/character/npc/common/security_guard/Security_Guard.mdl"
		"models/character/npc/common/security_guard/security_guard_skinny/security_guard_skinny.mdl" : "models/character/npc/common/security_guard/security_guard_skinny/security_guard_skinny.mdl"
		"models/character/npc/common/super_swat/super_swat.mdl" : "models/character/npc/common/super_swat/super_swat.mdl"
		"models/character/npc/unique/Chinatown/Temple_Guard/Temple_Guard.mdl" : "models/character/npc/unique/Chinatown/Temple_Guard/Temple_Guard.mdl"
		"models/character/npc/unique/Chinatown/Tong/tong.mdl" : "models/character/npc/unique/Chinatown/Tong/tong.mdl"
		"models/character/npc/unique/Downtown/Russian_Thug/Russian_Thug.mdl" : "models/character/npc/unique/Downtown/Russian_Thug/Russian_Thug.mdl"
		"models/character/npc/unique/Giovanni_Mansion/BodyGuard/BodyGuard.mdl" : "models/character/npc/unique/Giovanni_Mansion/BodyGuard/BodyGuard.mdl"
		"models/character/npc/unique/Society_of_Leopold/Average_vampire_hunter/Average_vampire_hunter.mdl" : "models/character/npc/unique/Society_of_Leopold/Average_vampire_hunter/Average_vampire_hunter.mdl"
		"models/character/npc/unique/Society_of_Leopold/elite_hunter/Elite_Hunter.mdl" : "models/character/npc/unique/Society_of_Leopold/elite_hunter/Elite_Hunter.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_thirtyeight" : "This is the weapon that NPC will basically use." =	[]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_knife" : "This is the weapon that NPC will use as alternative." =	[]
	stattemplate(choices) : "NPC Stat Template" : "WarehouseThug" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	NPCSquadname(string) : "NPC Squad Name" : : "Childrens' Squad Name"
	
	sep_npcrel(string) readonly: "------------------------------------"
	
	// npc-related
	radius(integer) : "Radius [-?]" : : "[VTMB] Unknown yet..."
]








//===================================================================================================================
// npc_VHumanCombatPatrol [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VHumanCombatPatrol : 
	"[VTMB] The human combat patrol (like security guards, etc.)."
[
	model(studio) : "Model" : "models/character/npc/common/security_guard/security_guard_skinny/security_guard_skinny.mdl" =
	[
		"models/character/npc/common/security_guard/security_guard_skinny/security_guard_skinny.mdl" : "models/character/npc/common/security_guard/security_guard_skinny/security_guard_skinny.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_thirtyeight" : "This is the weapon that NPC will basically use." =	[]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_baton" : "This is the weapon that NPC will use as alternative." =	[]
	stattemplate(choices) : "NPC Stat Template" : "MuseumGuard" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]
	
	pl_criminal_attack(choices) : "Player Criminal Attack" : "1" : "A criminal level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	pl_criminal_flee(choices) : "Player Criminal Flee" : "5" : "A criminal level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc. \nFlee overrides attack and a value of 6 means no action because the max value is 5." =	[]
	pl_investigate(choices) : "Player Investigate [-?]" : "1" : "[VTMB] Unknown yet..." =	[]
	pl_supernatural_attack(choices) : "Player Supernatural Attack" : "1" : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	pl_supernatural_flee(choices) : "Player Supernatural Flee" : "5" : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc. \nFlee overrides attack and a value of 6 means no action because the max value is 5." =	[]
]









//===================================================================================================================
// npc_VLasombra [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VLasombra : 
	"[VTMB] Lassombra clan members."
[
	model(studio) : "Model" : "models/character/npc/common/lasoblood/lasoblood.mdl" =
	[
		"models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl" : "models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl"
		"models/character/npc/common/lasoblood/lasoblood.mdl" : "models/character/npc/common/lasoblood/lasoblood.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_glock_17c" : "This is the weapon that NPC will basically use." =	[]

	stattemplate(choices) : "NPC Stat Template" : "VampireLasombra" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	npc_perception(choices) : "NPC Perception Level" : 6 : "Defines NPC's Perception ability level [1...10]." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]
	allow_kick_hint_use(choices) : "Allow Kick Hint Usage [-?]" : 0 : "[VTMB] Unknown yet..." =	[]
	percent_occluded_chase(integer) : "Percent Occluded Chase [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_cover(integer) : "Percent Occluded Cover [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_flank(integer) : "Percent Occluded Flank [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_wait(integer) : "Percent Occluded Wait [-?]" : 100 : "[VTMB] Unknown yet..."
	percent_occluded_walk(integer) : "Percent Occluded Walk [-?]" : 0 : "[VTMB] Unknown yet..."
	bright_route_penalty(integer) : "Bright Route Penalty [-?]" : 10000 : "[VTMB] Unknown yet..."
	stay_entrenched(choices) : "Stay Entrenched [-?]" : 1 : "[VTMB] Unknown yet..." =	[]
]









//===================================================================================================================
// npc_VManBat [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VManBat : 
	"[VTMB] Man-Bat monster NPC."
[
	model(studio) : "Model" : "models/character/monster/manbat/manbat.mdl" =
	[
		"models/character/monster/manbat/manbat.mdl" : "models/character/monster/manbat/manbat.mdl"
	]
	combat_start_activity(choices) : "Initial Combat Activity" : "ACT_INVALID" : "Defines NPC's combat animation when none of actions or outputs applied to him." =	[]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =	[]
	stattemplate(choices) : "NPC Stat Template" : "ManBat" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =	[]

	// inputs
	input ManBatStun(void) : "[VTMB: untested connection]"
]







//===================================================================================================================
// npc_VMingXiao [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VMingXiao : 
	"[VTMB] Ming Xiao, the spiritual leader of Quei-Jin."
[
	model(studio) : "Model" : "models/character/npc/unique/Chinatown/Ming_Xiao/MingXiao.mdl" =
	[
		"models/character/npc/unique/Chinatown/Ming_Xiao/MingXiao.mdl" : "models/character/npc/unique/Chinatown/Ming_Xiao/MingXiao.mdl"
	]
	default_camera(vcamerashot) : "Default Camera Shot" : "vdata/CameraShots/DialogDefaultWoman.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =	[]	
	stattemplate(choices) : "NPC Stat Template" : "MingXiao" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	npc_perception(choices) : "NPC Perception Level" : 9 : "Defines NPC's Perception ability level [1...10]." = []
	combat_start_activity(choices) : "Initial Combat Activity" : "ACT_INVALID" : "Defines NPC's combat animation when none of actions or outputs applied to him." =	[]

	// inputs
	input StartTransformation(void) : "NPC starts body transforming."
]







//===================================================================================================================
// npc_VNewscaster [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VNewscaster : 
	"[VTMB] The Newcaster. You could turn on the TV to see him..."
[
	model(studio) : "Model" : "models/character/npc/common/blueblood/male/Newscaster_Male.mdl" =
	[
		"models/character/npc/common/blueblood/male/Newscaster_Male.mdl" : "models/character/npc/common/blueblood/male/Newscaster_Male.mdl"
	]
]






//===================================================================================================================
// npc_VPedestrian [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VPedestrian : 
	"[VTMB] Generic city pedestrian."
[
	model(studio) : "Model" : "models/character/npc/common/citizen/male/male_citizen_1.mdl" =
	[
		"models/character/npc/common/blueblood/female/blueblood_female.mdl" : "models/character/npc/common/blueblood/female/blueblood_female.mdl"
		"models/character/npc/common/blueblood/male/Blueblood_Male.mdl" : "models/character/npc/common/blueblood/male/Blueblood_Male.mdl"
		"models/character/npc/common/bum/Female/bum_female.mdl" : "models/character/npc/common/bum/Female/bum_female.mdl"
		"models/character/npc/common/bum/Male/bum_male.mdl" : "models/character/npc/common/bum/Male/bum_male.mdl"
		"models/character/npc/common/citizen/Chinatown/female1/chinese_girl.mdl" : "models/character/npc/common/citizen/Chinatown/female1/chinese_girl.mdl"
		"models/character/npc/common/citizen/Chinatown/male1/ChinaTown_Male.mdl" : "models/character/npc/common/citizen/Chinatown/male1/ChinaTown_Male.mdl"
		"models/character/npc/common/citizen/female/female_citizen.mdl" : "models/character/npc/common/citizen/female/female_citizen.mdl"
		"models/character/npc/common/citizen/female2/female_citizen_2.mdl" : "models/character/npc/common/citizen/female2/female_citizen_2.mdl"
		"models/character/npc/common/citizen/male/male_citizen_1.mdl" : "models/character/npc/common/citizen/male/male_citizen_1.mdl"
		"models/character/npc/common/citizen/male2/male_citizen_2.mdl" : "models/character/npc/common/citizen/male2/male_citizen_2.mdl"
		"models/character/npc/common/dancer/female_1/Female_Dancer_1.mdl" : "models/character/npc/common/dancer/female_1/Female_Dancer_1.mdl"
		"models/character/npc/common/dancer/female_2/Female_Dancer_2.mdl" : "models/character/npc/common/dancer/female_2/Female_Dancer_2.mdl"
		"models/character/npc/common/dancer/female_3/Female_Dancer_3.mdl" : "models/character/npc/common/dancer/female_3/Female_Dancer_3.mdl"
		"models/character/npc/common/dancer/female_4/Female_Dancer_4.mdl" : "models/character/npc/common/dancer/female_4/Female_Dancer_4.mdl"
		"models/character/npc/common/dancer/male_1/Male_Dancer_1.mdl" : "models/character/npc/common/dancer/male_1/Male_Dancer_1.mdl"
		"models/character/npc/common/dancer/male_2/Male_Dancer_2.mdl" : "models/character/npc/common/dancer/male_2/Male_Dancer_2.mdl"
		"models/character/npc/common/dancer/male_3/Male_Dancer_3.mdl" : "models/character/npc/common/dancer/male_3/Male_Dancer_3.mdl"
		"models/character/npc/common/dancer/male_4/Male_Dancer_4.mdl" : "models/character/npc/common/dancer/male_4/Male_Dancer_4.mdl"
		"models/character/npc/common/ghoul/ventrue/Ventrue_ghoul_male.mdl" : "models/character/npc/common/ghoul/ventrue/Ventrue_ghoul_male.mdl"
		"models/character/npc/common/Goth_kids/female/Goth_Female.mdl" : "models/character/npc/common/Goth_kids/female/Goth_Female.mdl"
		"models/character/npc/common/Goth_kids/male/goth_male.mdl" : "models/character/npc/common/Goth_kids/male/goth_male.mdl"
		"models/character/npc/common/hustler/Hustler_1_Ref.mdl" : "models/character/npc/common/hustler/Hustler_1_Ref.mdl"
		"models/character/npc/common/hustler/Hustler_2_Ref.mdl" : "models/character/npc/common/hustler/Hustler_2_Ref.mdl"
		"models/character/npc/common/lotusblossom_girl/lotusblossom_girl.mdl" : "models/character/npc/common/lotusblossom_girl/lotusblossom_girl.mdl"
		"models/character/npc/common/patron/male/male_patron_1.mdl" : "models/character/npc/common/patron/male/male_patron_1.mdl"
		"models/character/npc/common/patron/male/male_patron_2.mdl" : "models/character/npc/common/patron/male/male_patron_2.mdl"
		"models/character/npc/common/prostitute/prostitute_1/prostitute_1.mdl" : "models/character/npc/common/prostitute/prostitute_1/prostitute_1.mdl"
		"models/character/npc/common/prostitute/prostitute_2/prostitute_2_Ref.mdl" : "models/character/npc/common/prostitute/prostitute_2/prostitute_2_Ref.mdl"
		"models/character/npc/common/raver/females/female_raver_1/female_raver_1.mdl" : "models/character/npc/common/raver/females/female_raver_1/female_raver_1.mdl"
		"models/character/npc/common/raver/females/female_raver_2/female_raver_2.mdl" : "models/character/npc/common/raver/females/female_raver_2/female_raver_2.mdl"
		"models/character/npc/common/stripper/Stripper_reduced_01.mdl" : "models/character/npc/common/stripper/Stripper_reduced_01.mdl"
		"models/character/npc/unique/Downtown/CDCGuy/CDCGuy.mdl" : "models/character/npc/unique/Downtown/CDCGuy/CDCGuy.mdl"
		"models/character/npc/unique/Downtown/Feedbag/Feedbag.mdl" : "models/character/npc/unique/Downtown/Feedbag/Feedbag.mdl"
		"models/character/npc/unique/Santa_Monica/Ghost/Ghost.mdl" : "models/character/npc/unique/Santa_Monica/Ghost/Ghost.mdl"
		"models/character/npc/unique/Santa_Monica/Heather/Heather.mdl" : "models/character/npc/unique/Santa_Monica/Heather/Heather.mdl"
		"models/character/npc/unique/Santa_Monica/Heather/Heather_3.mdl" : "models/character/npc/unique/Santa_Monica/Heather/Heather_3.mdl"
		"models/character/npc/unique/Santa_Monica/Heather/Heather_goth.mdl" : "models/character/npc/unique/Santa_Monica/Heather/Heather_goth.mdl"
	]
	stattemplate(choices) : "NPC Stat Template" : "CivilianGeneric" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	pl_criminal_flee(choices) : "Player Criminal Flee" : "2" : "A criminal level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc. \nFlee overrides attack and a value of 6 means no action because the max value is 5." =	[]
	pl_investigate(choices) : "Player Investigate [-?]" : "6" : "[VTMB] Unknown yet..." =	[]
	pl_supernatural_flee(choices) : "Player Supernatural Flee" : "1" : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc. \nFlee overrides attack and a value of 6 means no action because the max value is 5." =	[]

	sep_npcrel(string) readonly: "------------------------------------"
	
	// npc-specific
	level_reset_type(choices) : "Level Reset Type" : 0 : "Defines dialog resetting mode depending on level changing or reloading [not tested]." =
	[
		0 : "Type 0 (unknown yet)"
		1 : "Type 1 (unknown yet)"
		2 : "Type 2 (unknown yet)"
	]
 	spawnflags(Flags) = 
	[
		4 : "Fall to ground (unchecked means *teleport* to ground)" : 1
		8192: "Flag 8192 (unknown yet)" : 1
	]
]







//===================================================================================================================
// npc_VProneDialog [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VProneDialog : 
	"[VTMB] Prone dialog NPC [unknown yet]."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/Mercurio/MercurioDamaged.mdl" =
	[
		"models/character/npc/unique/Downtown/Hannah/Hannah.mdl" : "models/character/npc/unique/Downtown/Hannah/Hannah.mdl"
		"models/character/npc/unique/Santa_Monica/Heather/HeatherNearDeath.mdl" : "models/character/npc/unique/Santa_Monica/Heather/HeatherNearDeath.mdl"
		"models/character/npc/unique/Santa_Monica/Mercurio/MercurioDamaged.mdl" : "models/character/npc/unique/Santa_Monica/Mercurio/MercurioDamaged.mdl"
	]
	default_camera(vcamerashot) : "Default Camera Shot" : "vdata/CameraShots/Mercurio.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =	[]
	default_disposition(choices) : "Default Disposition" : "Damaged" : "Default NPC's disposition. Goes to 'vdata/system/dispositiontable.txt' definitions." =	[]
	stattemplate(choices) : "NPC Stat Template" : "Mercurio" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	pl_investigate(choices) : "Player Investigate" : "6" : "[VTMB] Unknown yet..." =	[]

	sep_npcrel(string) readonly: "------------------------------------"
	
	// npc-specific
	ignore_detected_attack(choices) : "Ignore Detected Attack" : 1 : "Ignores when detects attack from other side." =
	[
		0 : "No"
		1 : "Yes"
	]
	floatfreq(integer) : "Floats Frequency" : 8 : "[VTMB] Determines how often this NPC will play float sound lines when player's near him. Higher values will make floats play more often, '0' disables them fully."
]







//===================================================================================================================
// npc_VRat [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VRat : 
	"[VTMB] The rat. Player can feed them if humans are the great luxury at this moment."
[
	model(studio) : "Model" : "models/character/monster/rat/rat.mdl" =
	[
		"models/character/monster/rat/rat.mdl" : "models/character/monster/rat/rat.mdl"
	]
	stattemplate(choices) : "NPC Stat Template" : "Rat" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	pl_investigate(choices) : "Player Investigate" : "6" : "[VTMB] Unknown yet..." =	[]

	sep_npcrel(string) readonly: "------------------------------------"
	
	// rat-specific
	detection_distance(integer) : "Detection Distance" : 256 : "Defines distance rat can wind the player."
	friendship_level(integer) : "Friendship Level" : 1 : "The level of rat's friendliness in relation to player."
	ignore_nosferatu(choices) : "Ignore Nosferatu" : 1 : "If set, the rats don't run away from Nosferatu player." = [ 0 : "No" 1 : "Yes" ]
	must_detect(choices) : "Must Detect [-?]" : "1" : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]
	fright_distance(integer) : "Fright Distance" : 128 : "Distance that rat will frights the player."
	fright_duration(float) : "Fright Duration" : "5.0" : "Duration of rat's fright when it nearby the player."
	conflict_range(integer) : "Conflict Range" : 100 : "[VTMB] Unknown yet..."
	warn_range(integer) : "Warn Range" : 200 : "[VTMB] Unknown yet..."

	sep_npcrel2(string) readonly: "------------------------------------"
	
	// npc-specific
	use_interesting(choices) : "Use Interesting Places" : 1 : "Make NPC to use Interesting Places' features. \nThis and the interesting groups work fine if there are info_nodes in the area of the interesting places." =	[]
	interesting_place_groups(choices) : "Interesting Place Groups" : "20" : "[VTMB] Unknown yet. Type numbers of groups dividing with spaces." =	[]
]








//===================================================================================================================
// npc_VSabbatGunman [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VSabbatGunman : 
	"[VTMB] A Sabbat thug with the gunshot."
[
	model(studio) : "Model" : "models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl" =
	[
		"models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl" : "models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_ithaca_m_37" : "This is the weapon that NPC will basically use." =	[]
	stattemplate(choices) : "NPC Stat Template" : "SabbatCelerityShottie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]
]








//===================================================================================================================
// npc_VSabbatLeader [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VSabbatLeader : 
	"[VTMB] Andrei, the Tzimisce clan member and Sabbat leader."
[
	model(studio) : "Model" : "models/character/npc/unique/Hollywood/Andrei/Andrei.mdl" =
	[
		"models/character/npc/unique/Hollywood/Andrei/Andrei.mdl" : "models/character/npc/unique/Hollywood/Andrei/Andrei.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_sabbatleader_attack" : "This is the weapon that NPC will basically use." =	[]
	dialogname(vdialog) : "Dialog File" : "dlg/Hollywood/Andrei.dlg" : "Defines dialogue script depending on certain NPC and situation." =	[]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =	[]
	stattemplate(choices) : "NPC Stat Template" : "VampireSabbatLeader" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	npc_perception(choices) : "NPC Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]." = []

	// inputs
	input StartTransformation(void) : "NPC starts body transforming."
]








//===================================================================================================================
// npc_VScurrying [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VScurrying : 
	"[VTMB] Misc feedable scurrying creations, like rats, cats, snakes, etc."
[
	model(studio) : "Model" : "models/character/monster/rat/rat.mdl" =
	[
		"models/character/monster/rat/rat.mdl" : "models/character/monster/rat/rat.mdl"
	]
	default_camera(vcamerashot) : "Default Camera Shot" : "CabbieSewer" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =	[]	
	dialogname(vdialog) : "Dialog Name" : "dlg/Generic/CabbieSewer.dlg" : "Defines dialogue script depending on certain NPC and situation." =	[]
	stattemplate(choices) : "NPC Stat Template" : "Scurrying" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	pl_investigate(choices) : "Player Investigate [-?]" : 6 : "[VTMB] Unknown yet..." =	[]
	hearing(float) : "Hearing Volume" : "0.1" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."

	sep_npcrel(string) readonly: "------------------------------------"
	
	// scurrying-specific
	detection_distance(integer) : "Detection Distance" : 0 : "Defines distance creation can wind the player."
	friendship_level(integer) : "Friendship Level" : 6 : "The level of creation's friendliness in relation to player."
	ignore_nosferatu(choices) : "Ignore Nosferatu" : 1 : "If set, the creations don't run away from Nosferatu player." =
	[
		0 : "No"
		1 : "Yes"
	]
	must_detect(choices) : "Must Detect [-?]" : 1 : "[VTMB] Unknown yet..." =
	[
		0 : "No"
		1 : "Yes"
	]
	fright_distance(integer) : "Fright Distance" : 128 : "Distance that creation will frights the player."
	fright_duration(float) : "Fright Duration" : "5.0" : "Duration of creation's fright when it nearby the player."
	conflict_range(integer) : "Conflict Range" : 100 : "[VTMB] Unknown yet..."
	warn_range(integer) : "Warn Range" : 200 : "[VTMB] Unknown yet..."

	sep_npcrel2(string) readonly: "------------------------------------"
	
	// npc-specific
	use_interesting(choices) : "Use Interesting Places" : 1 : "Make NPC to use Interesting Places' features. \nThis and the interesting groups work fine if there are info_nodes in the area of the interesting places." =	[]
	interesting_place_groups(choices) : "Interesting Place Groups" : 21 : "[VTMB] Unknown yet. Type numbers of groups dividing with spaces." =	[]
]








//===================================================================================================================
// npc_VSheriffMan [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VSheriffMan : 
	"[VTMB] The Sheriff man. You just *must* kill this bastard..."
[
	model(studio) : "Model" : "models/character/npc/unique/Downtown/Sheriff/Sheriff_Battle.mdl" =
	[
		"models/character/npc/unique/Downtown/Sheriff/Sheriff_Battle.mdl" : "models/character/npc/unique/Downtown/Sheriff/Sheriff_Battle.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_sheriff_sword" : "This is the weapon that NPC will basically use." =	[]
	combat_start_activity(choices) : "Initial Combat Activity" : "ACT_INVALID" : "Defines NPC's combat animation when none of actions or outputs applied to him." =	[]
	is_bossmonster(choices) : "NPC is Boss Monter" : 1 : "If set, shows blood scale on screen and process this NPC as a monster." =	[]
	stattemplate(choices) : "NPC Stat Template" : "SheriffMan" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	npc_perception(choices) : "NPC Perception Level" : 10 : "Defines NPC's Perception ability level [1...10]." = []
	pl_criminal_attack(choices) : "Player Criminal Attack" : 1 : "A criminal level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	pl_investigate(choices) : "Player Investigate" : 6 : "[VTMB] Unknown yet..." =	[]
	pl_supernatural_attack(choices) : "Player Supernatural Attack" : 1 : "A supernatural level is set to the player for certain actions or by script. When the level is equal or greater thean the threshold, the apropriate action is triggered for the npc." =	[]
	interesting_place_groups(choices) : "Interesting Place Groups" : 1 : "[VTMB] Unknown yet. Type numbers of groups dividing with spaces." =	[]

	sep_npcrel(string) readonly: "------------------------------------"
	
	// npc-related
	soundgroup(choices) : "Sound Group" : "Sheriff_Manbat" : "The group of sounds relative to 'sound/character/*' that specifies base NPC action sounds. See 'vdata/system/sndscheme_char.txt' for more details." = []
	spawnflags(Flags) = 
	[
		4 : "Fall to ground (unchecked means *teleport* to ground)" : 1
		8192: "Flag 8192 (unknown yet)" : 1
	]

	// inputs
	input CampEnter(integer) : "[VTMB: untested connection]"
	input CampExit(integer) : "[VTMB: untested connection]"
	input StairsEnter(integer) : "[VTMB: untested connection]"
	input StairsExit(integer) : "[VTMB: untested connection]"
	input StartAttacking(void) : "[VTMB: untested connection]"
	input StartTransformation(void) : "NPC starts body transforming."
]








//===================================================================================================================
// npc_VTaxiDriver [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VTaxiDriver : 
	"[VTMB] A Taxi driver NPC. Can transition the player between levels."
[
	model(studio) : "Model" : "models/character/npc/common/cabbie/Cabbie.mdl" =
	[
		"models/character/npc/common/cabbie/Cabbie.mdl" : "models/character/npc/common/cabbie/Cabbie.mdl"
	]
	default_camera(vcamerashot) : "Default Camera Shot" : "vdata/CameraShots/Cabbie.txt" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =	[]	
	dialogname(vdialog) : "Dialog File" : "dlg/Generic/Cabbie.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"dlg/Generic/Cabbie.dlg" : "dlg/Generic/Cabbie.dlg"
		"dlg/Main Characters/Caine.dlg" : "dlg/Main Characters/Caine.dlg"
	]
	combat_start_activity(choices) : "Initial Combat Activity" : "ACT_INVALID" : "Defines NPC's combat animation when none of actions or outputs applied to him." =	[]
	invincible(choices) : "NPC is Invincible" : 1 : "If set, the player can't kill this NPC." =	[]
	stattemplate(choices) : "NPC Stat Template" : "Cabbie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	pl_investigate(choices) : "Player Investigate" : "6" : "[VTMB] Unknown yet..." =	[]
	
	sep_npcrel(string) readonly: "------------------------------------"
	
	// taxi-related
	usescript(string) : "Use Python Script" : "1" : "This is a Python script that defines additional dialog params [not tested]."

	spawnflags(Flags) = 
	[
		4 : "Fall to ground (unchecked means *teleport* to ground)" : 1
		8 : "Flag 8 (unknown yet)" : 1
		8192: "Flag 8192 (unknown yet)" : 1
	]
]







	
//===================================================================================================================
// npc_VTzimisce [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VTzimisce : 
	"[VTMB] The Tzimisce's creations, type 1."
[
	model(studio) : "Model" : "models/character/monster/tzimisce/creation1/creation1_full.mdl" =
	[
		"models/character/monster/tzimisce/creation1/creation1_full.mdl" : "models/character/monster/tzimisce/creation1/creation1_full.mdl"
	]
	stattemplate(choices) : "NPC Stat Template" : "TzimisceCreation1" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 10" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]
	percent_occluded_chase(integer) : "Percent Occluded Chase [-?]" : 100 : "[VTMB] Unknown yet..."
	percent_occluded_cover(integer) : "Percent Occluded Cover [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_flank(integer) : "Percent Occluded Flank [-?]" : 0 : "[VTMB] Unknown yet..."
	percent_occluded_wait(integer) : "Percent Occluded Wait [-?]" : 10 : "[VTMB] Unknown yet..."
	percent_occluded_walk(integer) : "Percent Occluded Walk [-?]" : 0 : "[VTMB] Unknown yet..."
	hearing(float) : "Hearing Volume" : "0.4" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "1000" : "NPC's vision radius (units). Set '-1' as default [not tested]."
]







	
//===================================================================================================================
// npc_VTzimisceHeadClaw [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VTzimisceHeadClaw : 
	"[VTMB] The Tzimisce's creations, type 2."
[
	model(studio) : "Model" : "models/character/monster/tzimisce/creation2/creation2_full.mdl" =
	[
		"models/character/monster/tzimisce/creation2/creation2_full.mdl" : "models/character/monster/tzimisce/creation2/creation2_full.mdl"
	]
	stattemplate(choices) : "NPC Stat Template" : "TzimisceCreation2" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 10" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]
	allow_alert_lookaround(choices) : "Allow Lookaround on Alert" : 0 : "Defines, should NPC be able to look around when alerted, or not." =	[]
	hearing(float) : "Hearing Radius" : "0.4" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "1000" : "NPC's vision radius (units). Set '-1' as default [not tested]."
]







	
//===================================================================================================================
// npc_VTzimisceRunner [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VTzimisceRunner : 
	"[VTMB] The Tzimisce's creations, type 3."
[
	model(studio) : "Model" : "models/character/monster/tzimisce/creation3/tzim3.mdl" =
	[
		"models/character/monster/tzimisce/creation3/tzim3.mdl" : "models/character/monster/tzimisce/creation3/tzim3.mdl"
	]
	stattemplate(choices) : "NPC Stat Template" : "TzimisceCreation3" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 10" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]
	hearing(float) : "Hearing Radius" : "0.4" : "NPC's hearing radius [0...100]. Set '-1' as default [not tested]."
	vision(float) : "Vision Radius" : "1000" : "NPC's vision radius (units). Set '-1' as default [not tested]."
	radius(float) : "Radius [-?]" : : "[VTMB] Unknown yet..."
]







//===================================================================================================================
// npc_VVampire [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VVampire : 
	"[VTMB] Generic Vampire character."
[
	model(studio) : "Model" : "models/character/npc/unique/Santa_Monica/E/E.mdl" =
	[
		"models/character/monster/Animalism_Beastform/Animalism_Beastform.mdl" : "models/character/monster/Animalism_Beastform/Animalism_Beastform.mdl"
		"models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl" : "models/character/npc/common/Sabbat_Henchman/Sabbat_Henchman.mdl"
		"models/character/npc/common/Shovelhead/shovelhead.mdl" : "models/character/npc/common/Shovelhead/shovelhead.mdl"
		"models/character/npc/unique/Downtown/Damsel/Damsel.mdl" : "models/character/npc/unique/Downtown/Damsel/Damsel.mdl"
		"models/character/npc/unique/Downtown/LaCroix/Lacroix.mdl" : "models/character/npc/unique/Downtown/LaCroix/Lacroix.mdl"
		"models/character/npc/unique/Downtown/Nines/Nines.mdl" : "models/character/npc/unique/Downtown/Nines/Nines.mdl"
		"models/character/npc/unique/Downtown/Regent/Regent.mdl" : "models/character/npc/unique/Downtown/Regent/Regent.mdl"
		"models/character/npc/unique/Downtown/Sheriff/Sheriff.mdl" : "models/character/npc/unique/Downtown/Sheriff/Sheriff.mdl"
		"models/character/npc/unique/Downtown/Skelter/Skelter.mdl" : "models/character/npc/unique/Downtown/Skelter/Skelter.mdl"
		"models/character/npc/unique/Downtown/Smiling_Jack/Smiling_Jack.mdl" : "models/character/npc/unique/Downtown/Smiling_Jack/Smiling_Jack.mdl"
		"models/character/npc/unique/Downtown/VV/VV.mdl" : "models/character/npc/unique/Downtown/VV/VV.mdl"
		"models/character/npc/unique/Hollywood/Ash/Ash.mdl" : "models/character/npc/unique/Hollywood/Ash/Ash.mdl"
		"models/character/npc/unique/Hollywood/Gary/Nosferatu_Gary.mdl" : "models/character/npc/unique/Hollywood/Gary/Nosferatu_Gary.mdl"
		"models/character/npc/unique/Hollywood/Isaac/Isaac.mdl" : "models/character/npc/unique/Hollywood/Isaac/Isaac.mdl"
		"models/character/npc/unique/Hollywood/Mitnick/Mitnick.mdl" : "models/character/npc/unique/Hollywood/Mitnick/Mitnick.mdl"
		"models/character/npc/unique/Santa_Monica/Beckett/Beckett.mdl" : "models/character/npc/unique/Santa_Monica/Beckett/Beckett.mdl"
		"models/character/npc/unique/Santa_Monica/Jeanette/Jeanette.mdl" : "models/character/npc/unique/Santa_Monica/Jeanette/Jeanette.mdl"
		"models/character/npc/unique/Santa_Monica/Lily/Lily.mdl" : "models/character/npc/unique/Santa_Monica/Lily/Lily.mdl"
		"models/character/npc/unique/Santa_Monica/Serial_Killer/Serial_Killer.mdl" : "models/character/npc/unique/Santa_Monica/Serial_Killer/Serial_Killer.mdl"
		"models/character/npc/unique/Santa_Monica/Therese/Therese.mdl" : "models/character/npc/unique/Santa_Monica/Therese/Therese.mdl"
		"models/character/npc/unique/Santa_Monica/Tourette/Tourette.mdl" : "models/character/npc/unique/Santa_Monica/Tourette/Tourette.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_claws" : "This is the weapon that NPC will basically use." =	[]
	stattemplate(choices) : "NPC Stat Template" : "VampireGeneric" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []

	// vampire-specific
	follower_boss(choices) : "Follower Boss [-?]" : "" : "[VTMB] Unknown yet..." =
	[
		"" : "None"
		"Default" : "Default"
		"!player" : "Player"
	]
]
	
	
	
	

//===================================================================================================================
// npc_VVampireBoss [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VVampireBoss : 
	"[VTMB] Vampire boss NPC."
[
	model(studio) : "Model" : "models/character/monster/wolf_form_2/Wolf_Form_2.mdl" =
	[
		"models/character/monster/wolf_form_2/Wolf_Form_2.mdl" : "models/character/monster/wolf_form_2/Wolf_Form_2.mdl"
		"models/character/npc/unique/Chinatown/Ming_Xiao/MingXiao.mdl" : "models/character/npc/unique/Chinatown/Ming_Xiao/MingXiao.mdl"
	]
	dialogname(vdialog) : "Dialog File" : "dlg/Main Characters/Beckett.dlg" : "Defines dialogue script depending on certain NPC and situation." =
	[
		"dlg/Main Characters/Beckett.dlg" : "dlg/Main Characters/Beckett.dlg"
		"dlg/Main Characters/MingXiao2.dlg" : "dlg/Main Characters/MingXiao2.dlg"
	]

	pl_investigate(choices) : "Player Investigate" : 6 : "[VTMB] Unknown yet..." =	[]

	sep_npcrel(string) readonly: "------------------------------------"
	
	// npc-specific
	MorphModel(studio) : "Morph Model" : "models/character/npc/unique/Santa_Monica/Beckett/Beckett.mdl" : "The model that renders when NPC transforms to another form." =
	[
		"models/character/npc/unique/Santa_Monica/Beckett/Beckett.mdl" : "models/character/npc/unique/Santa_Monica/Beckett/Beckett.mdl"
		"models/character/npc/unique/Downtown/Nines/Nines.mdl" : "models/character/npc/unique/Downtown/Nines/Nines.mdl"
	]

	// connections
	input TransformModel(void) : "[VTMB: untested connection]"
]


	
	
	

//===================================================================================================================
// npc_VWerewolf [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,RenderFields) studio() = npc_VWerewolf : 
	"[VTMB] Werewolf NPC (meet in Griffith's Park)."
[
	model(studio) : "Model" : "models/character/monster/werewolf/werewolf.mdl" =
	[
		"models/character/monster/werewolf/werewolf.mdl" : "models/character/monster/werewolf/werewolf.mdl"
	]
	
	// connections
	input ToggleDoorState(integer) : "Toogle door state between 'can crush' and 'cannot crush'."
	output OnConditionDeathTriggered(void) : "[VTMB: untested connection]"
	output OnBeginCrushAnimation(void) : "Fired when crush animation begins."
	output OnFinishCrushAnimation(void) : "Fired when crush animation finish."
]
	
	
	
	
	
	
	

//===================================================================================================================
// npc_VYukie [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VYukie : 
	"[VTMB] Yukie (meet in Chinatown's Ramen Shop)."
[
	model(studio) : "Model" : "models/character/npc/unique/Chinatown/Yukie/Yukie.mdl" =
	[
		"models/character/npc/unique/Chinatown/Yukie/Yukie.mdl" : "models/character/npc/unique/Chinatown/Yukie/Yukie.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_katana" : "This is the weapon that NPC will basically use." =	[]
	alternateequipment(choices) : "Alternate Equipment" : "item_w_crossbow" : "This is the weapon that NPC will use as alternative." =	[]
	default_camera(vcamerashot) : "Default Camera Shot" : "DialogDefaultWoman" : "Default camera-shot definition applied when player interacts with this NPC. Related to 'vdata/CameraShots/*.txt' path." =	[]
	dialogname(vdialog) : "Dialog File" : "dlg/Chinatown/Yukie.dlg" : "Defines dialogue script depending on certain NPC and situation." =	[]
	stattemplate(choices) : "NPC Stat Template" : "Yukie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_LI 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]
	pl_investigate(choices) : "Player Investigate" : 6 : "[VTMB] Unknown yet..." = []
]

	



	
	
	

//===================================================================================================================
// npc_VZombie [VTMB-specific]
//===================================================================================================================

@NPCClass base(VBaseNPC,VAddNPCFeats,RenderFields) studio() = npc_VZombie : 
	"[VTMB] Zombie - that says it all."
[
	model(studio) : "Model" : "models/character/monster/undead/male/undead_Male.mdl" =
	[
		"models/character/monster/undead/female/undead_female.mdl" : "models/character/monster/undead/female/undead_female.mdl"
		"models/character/monster/undead/Female2/undead_Female2.mdl" : "models/character/monster/undead/Female2/undead_Female2.mdl"
		"models/character/monster/undead/male/undead_Male.mdl" : "models/character/monster/undead/male/undead_Male.mdl"
		"models/character/monster/undead/Male2/undead_male_2.mdl" : "models/character/monster/undead/Male2/undead_male_2.mdl"
		"models/character/npc/common/ebola_victim/female/ebola_victim_female_zombie.mdl" : "models/character/npc/common/ebola_victim/female/ebola_victim_female_zombie.mdl"
		"models/character/npc/common/ebola_victim/male/ebola_victim_male_zombie.mdl" : "models/character/npc/common/ebola_victim/male/ebola_victim_male_zombie.mdl"
	]
	additionalequipment(choices) : "Base Equipment" : "item_w_fists" : "This is the weapon that NPC will basically use." =	[]
	cantdropweapons(choices) : "Can't Drop Weapons" : 1 : "If set, all NPC's weapons won't be available when it dead." =	[]
	stattemplate(choices) : "NPC Stat Template" : "Zombie" : "Goes to data in 'vdata/system/npctemplate***.txt'. NPCs in Hammer are assigned one of these which determines their statistics." = []
	player_reaction(choices) : "Reaction to Player" : "D_HT 5" : "Type of NPC's relationship with player. Use <str_type> <int_degree> format,\n\n"+
		"  where <type> is:\n"+
		"    D_LI [0-10] --> Likes Player (Will Defend)\n"+
		"    D_NU [0-10] --> Neutral (Default)"+
		"    D_HT [0-10] --> Hates Player (Will Attack)" =	[]

	sep_npcrel(string) readonly: "------------------------------------"
	
	// zombie-specific
	ZombieAIType(choices) : "Zombie AI Type" : 8 : "Type of AI (like actbusy, behaviors, reactions, etc.) that will be applied to zombie NPC." =
	[
		0 : "Do not use"
		1 : "Type 1 (unknown yet)"
		2 : "Type 2 (unknown yet)"
		3 : "Type 3 (unknown yet)"
		4 : "Type 4 (unknown yet)"
		5 : "Type 5 (unknown yet)"
		6 : "Type 6 (unknown yet)"
		7 : "Type 7 (unknown yet)"
		8 : "Type 8 (unknown yet)"
	]
	friendship_level(integer) : "Friendship Level" : 1 : "The level of NPC's friendliness in relation to player."
	conflict_range(integer) : "Conflict Range" : 100 : "[VTMB] Unknown yet..."
	warn_range(integer) : "Warn Range" : 200 : "[VTMB] Unknown yet..."
	remove_distance(integer) : "Remove Distance" : 1000 : "[VTMB] Unknown yet..."
	should_ragdoll(choices) : "Should be Ragdolls [-?]" : 1 : "[VTMB] Unknown yet..." = [ 0 : "No" 1 : "Yes" ]

	// inputs
	input SetZombieAIType(string) : "[VTMB] Changes zombie's AI type between FearPlayer, FearFacing, Wander, AttackRandom, AttackNearestGate, AttackNextNearestGate, AttackPlayer."
]	




















//******************************************************************************************************************
//******************************************************************************************************************
// 
// End of FGD
// 
//******************************************************************************************************************
//******************************************************************************************************************
